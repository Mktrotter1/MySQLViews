-- View: all_products
CREATE ALGORITHM=UNDEFINED DEFINER=`marc`@`%` SQL SECURITY DEFINER VIEW `all_products` AS select `pc`.`category` AS `category`,`pc`.`category_type` AS `category_type`,`pc`.`brand` AS `brand`,`pc`.`package` AS `package`,`pc`.`package_size` AS `package_size`,`pc`.`status` AS `status` from `product_sku`.`product_combination` `pc` union select `ct`.`category_id` AS `category_id`,`ct`.`id` AS `id`,'' AS `Name_exp_9`,'' AS `Name_exp_10`,'' AS `Name_exp_11`,'' AS `Name_exp_12` from `product_sku`.`category_type` `ct`;

-- View: cs_inventory_view
CREATE ALGORITHM=UNDEFINED DEFINER=`root`@`%` SQL SECURITY DEFINER VIEW `cs_inventory_view` AS select `pi`.`id` AS `id`,`pi`.`metrc_id` AS `metrc_id`,`pi`.`harvest_id` AS `harvest_id`,`pi`.`strain` AS `strain`,`pi`.`category` AS `category`,`pi`.`type` AS `type`,`pi`.`thc` AS `thc`,`pi`.`weight` AS `weight`,`pi`.`room` AS `room`,`pi`.`process_status` AS `process_status`,`pi`.`server_ts` AS `server_ts` from `product_inventory` `pi` where (((`pi`.`property` = 'CS') and (`pi`.`status` = 'Active') and (`pi`.`category` <> 'Pre-roll') and (`pi`.`type` <> 'Pouch') and (`pi`.`process_status` = 'Storage')) or (`pi`.`process_status` = 'Wholesale'));

-- View: employee_performance_view
CREATE ALGORITHM=UNDEFINED DEFINER=`lizeth`@`%` SQL SECURITY DEFINER VIEW `employee_performance_view` AS select `e`.`Employee Name` AS `employee_name`,`ent`.`date` AS `date`,week(`ent`.`date`,0) AS `week`,year(`ent`.`date`) AS `year`,`a`.`name` AS `activity`,(sum(`ent`.`minutes_no_breaks`) / 60) AS `total_hours`,sum((`ent`.`quantity` * `ent`.`ratio`)) AS `total_quantity` from ((`packing_kpi_employee` `e` left join `packing_kpi_entries` `ent` on((`e`.`Employee ID` = `ent`.`employee_id`))) left join `packing_kpi_activity` `a` on((`ent`.`activity` = `a`.`id`))) where ((`e`.`status` = 'Active') and (`ent`.`approved_on` is not null)) group by `e`.`Employee Name`,`ent`.`date`,`a`.`name` order by `ent`.`date` desc;

-- View: kpi_production_view
CREATE ALGORITHM=UNDEFINED DEFINER=`lizeth`@`%` SQL SECURITY DEFINER VIEW `kpi_production_view` AS select `e`.`Employee Name` AS `employee_name`,`e`.`Group` AS `employee_group`,(case when (`e`.`Group` = 'A') then '1st' when (`e`.`Group` = 'B') then '1st' when (`e`.`Group` = 'C') then '1st' when (`e`.`Group` = 'D') then '1st' when ((`e`.`Group` = 'E') and (`e`.`Work Schedule Start` = '1:00:00 PM')) then '2nd' when ((`e`.`Group` = 'E') and (`e`.`Work Schedule Start` = '12:30:00 PM')) then '2nd' when ((`e`.`Group` = 'E') and (`e`.`Work Schedule Start` = '5:00:00 PM')) then '3rd' when ((`e`.`Group` = 'E') and (`e`.`Work Schedule Start` = '5:05:00 PM')) then '3rd' when ((`e`.`Group` = 'E') and (`e`.`Work Schedule Start` = '4:30:00 PM')) then '3rd' when (`e`.`Group` = 'F') then '1st' else NULL end) AS `employee_shift`,`e`.`status` AS `employee_status`,`ent`.`date` AS `date`,week(`ent`.`date`,0) AS `week`,monthname(`ent`.`date`) AS `month`,year(`ent`.`date`) AS `year`,`a`.`name` AS `activity`,`ent`.`start_time` AS `start_time`,`ent`.`stop_time` AS `stop_time`,`ent`.`duration_minus_breaks_pauses` AS `duration`,(`ent`.`minutes_no_breaks` / 60) AS `total_hours`,`ent`.`quantity` AS `quantity`,`ent`.`ratio` AS `ratio`,(`ent`.`quantity` * `ent`.`ratio`) AS `total_units`,round(((`ent`.`quantity` * `ent`.`ratio`) / (`ent`.`minutes_no_breaks` / 60)),2) AS `units_per_hour`,`ent`.`metrc_tag` AS `metrc_tag` from ((`packing_kpi_entries` `ent` left join `packing_kpi_employee` `e` on((`e`.`Employee ID` = `ent`.`employee_id`))) left join `packing_kpi_activity` `a` on((`ent`.`activity` = `a`.`id`))) where ((`ent`.`approved_on` is not null) and (year(`ent`.`date`) > 2020)) order by `ent`.`date` desc;

-- View: meadow_combined
CREATE ALGORITHM=UNDEFINED DEFINER=`root`@`%` SQL SECURITY DEFINER VIEW `meadow_combined` AS select 'please update app' AS `brand`,'' AS `metrc_id`,'' AS `strain`,'' AS `type`,'' AS `quantity`,'' AS `UOM`,'' AS `weight`,'' AS `room`,'' AS `ItemName`;

-- View: packaged_inventory
CREATE ALGORITHM=UNDEFINED DEFINER=`root`@`%` SQL SECURITY DEFINER VIEW `packaged_inventory` AS select `product_inventory`.`id` AS `id`,`product_inventory`.`parent_id` AS `parent_id`,`product_inventory`.`date` AS `date`,`product_inventory`.`metrc_id` AS `metrc_id`,`product_inventory`.`process` AS `process`,`product_inventory`.`harvest_id` AS `harvest_id`,`product_inventory`.`harvest_property` AS `harvest_property`,`product_inventory`.`harvest_date` AS `harvest_date`,`product_inventory`.`harvest_week` AS `harvest_week`,`product_inventory`.`harvest_year` AS `harvest_year`,`product_inventory`.`strain` AS `strain`,`product_inventory`.`strain_type` AS `strain_type`,`product_inventory`.`license` AS `license`,`product_inventory`.`brand` AS `brand`,`product_inventory`.`category` AS `category`,`product_inventory`.`type` AS `type`,`product_inventory`.`size` AS `size`,`product_inventory`.`package_size` AS `package_size`,`product_inventory`.`package_units` AS `package_units`,`product_inventory`.`quantity` AS `quantity`,`product_inventory`.`grade` AS `grade`,`product_inventory`.`color` AS `color`,`product_inventory`.`thc` AS `thc`,`product_inventory`.`weight` AS `weight`,`product_inventory`.`uom` AS `uom`,`product_inventory`.`location_id` AS `location_id`,`product_inventory`.`property` AS `property`,`product_inventory`.`room` AS `room`,`product_inventory`.`room_area` AS `room_area`,`product_inventory`.`room_change_reason` AS `room_change_reason`,`product_inventory`.`status` AS `status`,`product_inventory`.`process_status` AS `process_status`,`product_inventory`.`created_on` AS `created_on`,`product_inventory`.`created_by` AS `created_by`,`product_inventory`.`modify_on` AS `modify_on`,`product_inventory`.`modify_by` AS `modify_by`,`product_inventory`.`note` AS `note`,`product_inventory`.`flag` AS `flag`,`product_inventory`.`trigger` AS `trigger`,`product_inventory`.`source_id` AS `source_id`,`product_inventory`.`source_ids` AS `source_ids`,`product_inventory`.`modified_type` AS `modified_type`,`product_inventory`.`server_ts` AS `server_ts`,`product_inventory`.`production_batch` AS `production_batch`,`product_inventory`.`case_id` AS `case_id`,`product_inventory`.`lucid_id` AS `lucid_id`,`product_inventory`.`package_id` AS `package_id`,`product_inventory`.`packed_date` AS `packed_date`,`product_inventory`.`source_metrc_id` AS `source_metrc_id`,`product_inventory`.`source_batch_id` AS `source_batch_id`,`product_inventory`.`external_batch_id` AS `external_batch_id`,`product_inventory`.`thc_coa` AS `thc_coa`,`product_inventory`.`packing_stage` AS `packing_stage`,`product_inventory`.`metrc_location` AS `metrc_location`,`product_inventory`.`old_room` AS `old_room` from `product_inventory` where ((`product_inventory`.`status` = 'Active') and ((`product_inventory`.`type` = 'Pouch') or (`product_inventory`.`type` = 'Tube') or (`product_inventory`.`type` = 'Jar') or (`product_inventory`.`type` = 'Case') or (`product_inventory`.`type` = 'Cartridge') or (`product_inventory`.`type` = 'Disposable Vaporizer')));

-- View: packing_temp_active
CREATE ALGORITHM=UNDEFINED DEFINER=`lizeth`@`%` SQL SECURITY DEFINER VIEW `packing_temp_active` AS select cast(`pa`.`created_on` as date) AS `date`,(case when (`pa`.`pallet_metrc_id` is not null) then `pa`.`pallet_metrc_id` else `pa`.`flower_metrc_id` end) AS `metr_id`,`pa`.`process_status` AS `process`,'Packing' AS `stage`,`pa`.`harvest_id` AS `harvest_id`,`pa`.`property` AS `harvest_property`,`pa`.`harvest_date` AS `harvest_date`,`pa`.`harvest_week` AS `harvest_week`,`pa`.`harvest_year` AS `harvest_year`,concat(`pa`.`harvest_year`,right(concat('0',`pa`.`harvest_week`),2)) AS `harvest_year_week`,`pa`.`strain` AS `strain`,`s`.`name` AS `strain_name`,`s`.`category` AS `strain_category`,`pa`.`short_license` AS `license`,`pa`.`field_5` AS `brand`,`pa`.`action` AS `product_category`,'Buds' AS `product_category_type`,`pa`.`type` AS `package_type`,`ps`.`code` AS `package_size_code`,`pa`.`weight` AS `package_size`,NULL AS `package_units`,NULL AS `packing_group`,(case when (`pa`.`final_unit_quantity` is not null) then 'Each' else 'Pound' end) AS `uom`,(case when (`pa`.`final_unit_quantity` is not null) then `pa`.`final_unit_quantity` when (`pa`.`prepacking_weight` is not null) then `pa`.`prepacking_weight` else `pa`.`batch_weight` end) AS `quantity`,`sku`.`sku` AS `sku`,`sku`.`name` AS `sku_name`,`sku`.`class` AS `sku_class`,`sku`.`kss_id` AS `kss_id`,`pa`.`packed_date` AS `packed_date`,`pa`.`production_number` AS `production_batch`,(case when ((`pa`.`batch_flower_size` = 'R') or (`pa`.`batch_flower_size` = 'B') or (`pa`.`batch_flower_size` = 'M') or (`pa`.`batch_flower_size` = 'S') or (`pa`.`batch_flower_size` = 'MS')) then `pa`.`batch_flower_size` else NULL end) AS `flower_size`,`pa`.`grade` AS `product_grade`,`pa`.`thc_result` AS `thc_label`,NULL AS `thc_coa`,(select max(`lab`.`test_result_date`) from `lab_testing`.`sample_latest_coa` `lab` where (`lab`.`source_batch_id` = `pa`.`f7`)) AS `test_result_date`,'CS' AS `location`,NULL AS `metrc_room`,NULL AS `room_area`,`pa`.`field_6` AS `case_id`,`pa`.`field_4` AS `lucid_id`,`pa`.`f7` AS `source_batch_id`,`pa`.`transfer_metrc_id` AS `source_metrc_id`,`pa`.`general_notes` AS `note` from ((((`packing_temp` `pa` left join `pacstone`.`plant_strain` `s` on((convert(`s`.`id` using utf8mb4) = `pa`.`strain`))) left join `product_sku`.`package_size` `ps` on((convert(`ps`.`size` using utf8mb4) = `pa`.`weight`))) left join `product_sku`.`sku_view` `sku` on((`sku`.`id` = `pa`.`sku_id`))) left join `lab_testing`.`sample_latest_coa` `lab` on((`lab`.`source_batch_id` = `pa`.`f7`))) where (`pa`.`status` = 'Active');

-- View: pi_active
CREATE ALGORITHM=UNDEFINED DEFINER=`lizeth`@`%` SQL SECURITY DEFINER VIEW `pi_active` AS select `pi`.`date` AS `date`,`pi`.`metrc_id` AS `metrc_id`,`pi`.`process` AS `process`,`pi`.`packing_stage` AS `stage`,`h`.`harvest_id` AS `harvest_id`,`pi`.`harvest_property` AS `harvest_property`,`pi`.`harvest_date` AS `harvest_date`,`pi`.`harvest_week` AS `harvest_week`,`pi`.`harvest_year` AS `harvest_year`,concat(`pi`.`harvest_year`,right(concat('0',`pi`.`harvest_week`),2)) AS `harvest_year_week`,`s`.`id` AS `strain`,`s`.`name` AS `strain_name`,`s`.`category` AS `strain_category`,`pi`.`license` AS `license`,`b`.`name` AS `brand`,`cat`.`name` AS `product_category`,`caty`.`name` AS `product_category_type`,`pa`.`name` AS `package_type`,`ps`.`code` AS `package_size_code`,`ps`.`size` AS `package_size`,`pi`.`package_units` AS `package_units`,`pi`.`packing_group_id` AS `packing_group`,`pacstone`.`uom`.`name` AS `uom`,`pi`.`quantity` AS `quantity`,`sku`.`sku` AS `sku`,`sku`.`name` AS `sku_name`,`pi`.`sku_class` AS `sku_class`,`sku`.`kss_id` AS `kss_id`,`pi`.`packed_date` AS `packed_date`,`pi`.`production_batch` AS `production_batch`,`pi`.`size` AS `flower_size`,`pi`.`grade` AS `product_grade`,`pi`.`thc` AS `thc_label`,`pi`.`thc_coa` AS `thc_coa`,(select max(`lab`.`test_result_date`) from `lab_testing`.`sample_latest_coa` `lab` where (`lab`.`source_batch_id` = `pi`.`source_batch_id`)) AS `test_result_date`,`pi`.`property` AS `location`,`ml`.`Name` AS `metrc_room`,`pi`.`room_area` AS `room_area`,`pi`.`case_id` AS `case_id`,`pi`.`lucid_id` AS `lucid_id`,`pi`.`source_batch_id` AS `source_batch_id`,`pi`.`source_metrc_id` AS `source_metrc_id`,`pi`.`note` AS `note` from ((((((((((((`product_inventory` `pi` left join `pacstone`.`plant_strain` `s` on((convert(`s`.`id` using utf8mb4) = `pi`.`strain`))) left join `pacstone`.`brand` `b` on((convert(`b`.`id` using utf8mb4) = `pi`.`brand`))) left join `product_sku`.`category` `cat` on((`cat`.`id` = `pi`.`category`))) left join `product_sku`.`category_type` `caty` on((convert(`caty`.`id` using utf8mb4) = `pi`.`type`))) left join `product_sku`.`package` `pa` on((`pa`.`id` = `pi`.`package_id`))) left join `product_sku`.`package_size` `ps` on((`ps`.`id` = `pi`.`package_size`))) left join `product_sku`.`packing_group` `pg` on((`pg`.`id` = `pi`.`packing_group_id`))) left join `pacstone`.`uom` on((convert(`pacstone`.`uom`.`id` using utf8mb4) = `pi`.`uom`))) left join `product_sku`.`sku_view` `sku` on((`sku`.`id` = `pi`.`sku_id`))) left join `metrc`.`metrc_location` `ml` on((`ml`.`Id` = `pi`.`room`))) left join `cultivation`.`harvesting_ref` `h` on((`h`.`id` = `pi`.`harvest_id`))) left join `lab_testing`.`sample_latest_coa` `lab` on((`lab`.`source_batch_id` = `pi`.`source_batch_id`))) where ((`pi`.`status` = 'Active') and (`pi`.`room` <> '928201'));

-- View: prerroll_production_view
CREATE ALGORITHM=UNDEFINED DEFINER=`lizeth`@`%` SQL SECURITY DEFINER VIEW `prerroll_production_view` AS select `e`.`Employee Name` AS `employee_name`,`e`.`Group` AS `employee_group`,(case when (`e`.`Group` = 'A') then '1st' when (`e`.`Group` = 'B') then '1st' when (`e`.`Group` = 'C') then '1st' when (`e`.`Group` = 'D') then '1st' when ((`e`.`Group` = 'E') and (`e`.`Work Schedule Start` = '1:00:00 PM')) then '2nd' when ((`e`.`Group` = 'E') and (`e`.`Work Schedule Start` = '12:30:00 PM')) then '2nd' when ((`e`.`Group` = 'E') and (`e`.`Work Schedule Start` = '5:00:00 PM')) then '3rd' when ((`e`.`Group` = 'E') and (`e`.`Work Schedule Start` = '5:05:00 PM')) then '3rd' when ((`e`.`Group` = 'E') and (`e`.`Work Schedule Start` = '4:30:00 PM')) then '3rd' when (`e`.`Group` = 'F') then '1st' else NULL end) AS `employee_shift`,`e`.`status` AS `employee_status`,`ent`.`date` AS `date`,week(`ent`.`date`,0) AS `week`,monthname(`ent`.`date`) AS `month`,year(`ent`.`date`) AS `year`,`a`.`name` AS `activity`,sum((`ent`.`minutes_no_breaks` / 60)) AS `total_hours`,sum(`ent`.`quantity`) AS `quantity`,max(`ent`.`ratio`) AS `ratio`,sum((`ent`.`quantity` * `ent`.`ratio`)) AS `total_units`,round(sum(((`ent`.`quantity` * `ent`.`ratio`) / 14)),2) AS `total_cases` from ((`packing_kpi_entries` `ent` left join `packing_kpi_employee` `e` on((`e`.`Employee ID` = `ent`.`employee_id`))) left join `packing_kpi_activity` `a` on((`ent`.`activity` = `a`.`id`))) where ((`a`.`name` = 'Haciendo cigarro') and (`ent`.`approved_on` is not null) and (year(`ent`.`date`) > 2020)) group by `e`.`Employee Name`,`ent`.`date`,`a`.`name`,`e`.`Group`,`e`.`Work Schedule Start`,`e`.`status` order by `ent`.`date` desc;

-- View: product_inventory_active
CREATE ALGORITHM=UNDEFINED DEFINER=`root`@`%` SQL SECURITY DEFINER VIEW `product_inventory_active` AS select `product_inventory`.`id` AS `id`,`product_inventory`.`parent_id` AS `parent_id`,`product_inventory`.`date` AS `date`,`product_inventory`.`metrc_id` AS `metrc_id`,`product_inventory`.`process` AS `process`,`product_inventory`.`harvest_id` AS `harvest_id`,`product_inventory`.`harvest_property` AS `harvest_property`,`product_inventory`.`harvest_date` AS `harvest_date`,`product_inventory`.`harvest_week` AS `harvest_week`,`product_inventory`.`harvest_year` AS `harvest_year`,`product_inventory`.`strain` AS `strain`,`product_inventory`.`strain_type` AS `strain_type`,`product_inventory`.`license` AS `license`,`product_inventory`.`brand` AS `brand`,`product_inventory`.`category` AS `category`,`product_inventory`.`type` AS `type`,`product_inventory`.`size` AS `size`,`product_inventory`.`package_size` AS `package_size`,`product_inventory`.`package_units` AS `package_units`,`product_inventory`.`quantity` AS `quantity`,`product_inventory`.`grade` AS `grade`,`product_inventory`.`color` AS `color`,`product_inventory`.`thc` AS `thc`,`product_inventory`.`weight` AS `weight`,`product_inventory`.`uom` AS `uom`,`product_inventory`.`location_id` AS `location_id`,`product_inventory`.`property` AS `property`,`product_inventory`.`room` AS `room`,`product_inventory`.`room_area` AS `room_area`,`product_inventory`.`room_change_reason` AS `room_change_reason`,`product_inventory`.`status` AS `status`,`product_inventory`.`process_status` AS `process_status`,`product_inventory`.`created_on` AS `created_on`,`product_inventory`.`created_by` AS `created_by`,`product_inventory`.`modify_on` AS `modify_on`,`product_inventory`.`modify_by` AS `modify_by`,`product_inventory`.`note` AS `note`,`product_inventory`.`flag` AS `flag`,`product_inventory`.`trigger` AS `trigger`,`product_inventory`.`source_id` AS `source_id`,`product_inventory`.`source_ids` AS `source_ids`,`product_inventory`.`modified_type` AS `modified_type`,`product_inventory`.`server_ts` AS `server_ts`,`product_inventory`.`production_batch` AS `production_batch`,`product_inventory`.`case_id` AS `case_id`,`product_inventory`.`lucid_id` AS `lucid_id`,`product_inventory`.`package_id` AS `package_id`,`product_inventory`.`packed_date` AS `packed_date`,`product_inventory`.`source_metrc_id` AS `source_metrc_id`,`product_inventory`.`source_batch_id` AS `source_batch_id`,`product_inventory`.`external_batch_id` AS `external_batch_id`,`product_inventory`.`thc_coa` AS `thc_coa`,`product_inventory`.`packing_stage` AS `packing_stage`,`product_inventory`.`metrc_location` AS `metrc_location`,`product_inventory`.`old_room` AS `old_room` from `product_inventory` where (`product_inventory`.`status` = 'Active');

-- View: product_inventory_report
CREATE ALGORITHM=UNDEFINED DEFINER=`lizeth`@`%` SQL SECURITY DEFINER VIEW `product_inventory_report` AS select concat('pi_',row_number() OVER () ) AS `id`,`pi_active`.`date` AS `date`,`pi_active`.`metrc_id` AS `metrc_id`,`pi_active`.`process` AS `process`,`pi_active`.`stage` AS `stage`,`pi_active`.`harvest_id` AS `harvest_id`,`pi_active`.`harvest_property` AS `harvest_property`,`pi_active`.`harvest_date` AS `harvest_date`,`pi_active`.`harvest_week` AS `harvest_week`,`pi_active`.`harvest_year` AS `harvest_year`,`pi_active`.`harvest_year_week` AS `harvest_year_week`,`pi_active`.`strain` AS `strain`,`pi_active`.`strain_name` AS `strain_name`,`pi_active`.`strain_category` AS `strain_category`,`pi_active`.`license` AS `license`,`pi_active`.`brand` AS `brand`,`pi_active`.`product_category` AS `product_category`,`pi_active`.`product_category_type` AS `product_category_type`,`pi_active`.`package_type` AS `package_type`,`pi_active`.`package_size_code` AS `package_size_code`,`pi_active`.`package_size` AS `package_size`,`pi_active`.`package_units` AS `package_units`,`pi_active`.`packing_group` AS `packing_group`,`pi_active`.`uom` AS `uom`,`pi_active`.`quantity` AS `quantity`,`pi_active`.`sku` AS `sku`,`pi_active`.`sku_name` AS `sku_name`,`pi_active`.`sku_class` AS `sku_class`,`pi_active`.`kss_id` AS `kss_id`,`pi_active`.`packed_date` AS `packed_date`,`pi_active`.`production_batch` AS `production_batch`,`pi_active`.`flower_size` AS `flower_size`,`pi_active`.`product_grade` AS `product_grade`,`pi_active`.`thc_label` AS `thc_label`,`pi_active`.`thc_coa` AS `thc_coa`,`pi_active`.`test_result_date` AS `test_result_date`,`pi_active`.`location` AS `location`,`pi_active`.`metrc_room` AS `metrc_room`,`pi_active`.`room_area` AS `room_area`,`pi_active`.`case_id` AS `case_id`,`pi_active`.`lucid_id` AS `lucid_id`,`pi_active`.`source_batch_id` AS `source_batch_id`,`pi_active`.`source_metrc_id` AS `source_metrc_id`,`pi_active`.`note` AS `note` from `pi_active` union select concat('pp_',row_number() OVER () ) AS `id`,`packing_temp_active`.`date` AS `date`,`packing_temp_active`.`metr_id` AS `metr_id`,`packing_temp_active`.`process` AS `process`,`packing_temp_active`.`stage` AS `stage`,`packing_temp_active`.`harvest_id` AS `harvest_id`,`packing_temp_active`.`harvest_property` AS `harvest_property`,`packing_temp_active`.`harvest_date` AS `harvest_date`,`packing_temp_active`.`harvest_week` AS `harvest_week`,`packing_temp_active`.`harvest_year` AS `harvest_year`,`packing_temp_active`.`harvest_year_week` AS `harvest_year_week`,`packing_temp_active`.`strain` AS `strain`,`packing_temp_active`.`strain_name` AS `strain_name`,`packing_temp_active`.`strain_category` AS `strain_category`,`packing_temp_active`.`license` AS `license`,`packing_temp_active`.`brand` AS `brand`,`packing_temp_active`.`product_category` AS `product_category`,`packing_temp_active`.`product_category_type` AS `product_category_type`,`packing_temp_active`.`package_type` AS `package_type`,`packing_temp_active`.`package_size_code` AS `package_size_code`,`packing_temp_active`.`package_size` AS `package_size`,`packing_temp_active`.`package_units` AS `package_units`,`packing_temp_active`.`packing_group` AS `packing_group`,`packing_temp_active`.`uom` AS `uom`,`packing_temp_active`.`quantity` AS `quantity`,`packing_temp_active`.`sku` AS `sku`,`packing_temp_active`.`sku_name` AS `sku_name`,`packing_temp_active`.`sku_class` AS `sku_class`,`packing_temp_active`.`kss_id` AS `kss_id`,`packing_temp_active`.`packed_date` AS `packed_date`,`packing_temp_active`.`production_batch` AS `production_batch`,`packing_temp_active`.`flower_size` AS `flower_size`,`packing_temp_active`.`product_grade` AS `product_grade`,`packing_temp_active`.`thc_label` AS `thc_label`,`packing_temp_active`.`thc_coa` AS `thc_coa`,`packing_temp_active`.`test_result_date` AS `test_result_date`,`packing_temp_active`.`location` AS `location`,`packing_temp_active`.`metrc_room` AS `metrc_room`,`packing_temp_active`.`room_area` AS `room_area`,`packing_temp_active`.`case_id` AS `case_id`,`packing_temp_active`.`lucid_id` AS `lucid_id`,`packing_temp_active`.`source_batch_id` AS `source_batch_id`,`packing_temp_active`.`source_metrc_id` AS `source_metrc_id`,`packing_temp_active`.`note` AS `note` from `packing_temp_active`;

-- View: product_inventory_report_jsonArray
CREATE ALGORITHM=UNDEFINED DEFINER=`marc`@`%` SQL SECURITY DEFINER VIEW `product_inventory_report_jsonArray` AS select json_array('id','date','metrc_id','process','stage','harvest_id','harvest_property','harvest_date','harvest_week','harvest_year','harvest_year_week','strain','strain_name','strain_category','license','brand','product_category','product_category_type','package_type','package_size_code','package_size','package_units','packing_group','uom','quantity','sku','sku_name','sku_class','kss_id','packed_date','production_batch','flower_size','product_grade','thc_label','thc_coa','test_result_date','location','metrc_room','room_area','case_id','lucid_id','source_batch_id','source_metrc_id','note') AS `h` union select json_array(`pir`.`id`,`pir`.`date`,`pir`.`metrc_id`,`pir`.`process`,`pir`.`stage`,`pir`.`harvest_id`,`pir`.`harvest_property`,`pir`.`harvest_date`,`pir`.`harvest_week`,`pir`.`harvest_year`,`pir`.`harvest_year_week`,`pir`.`strain`,`pir`.`strain_name`,`pir`.`strain_category`,`pir`.`license`,`pir`.`brand`,`pir`.`product_category`,`pir`.`product_category_type`,`pir`.`package_type`,`pir`.`package_size_code`,`pir`.`package_size`,`pir`.`package_units`,`pir`.`packing_group`,`pir`.`uom`,`pir`.`quantity`,`pir`.`sku`,`pir`.`sku_name`,`pir`.`sku_class`,`pir`.`kss_id`,`pir`.`packed_date`,`pir`.`production_batch`,`pir`.`flower_size`,`pir`.`product_grade`,`pir`.`thc_label`,`pir`.`thc_coa`,`pir`.`test_result_date`,`pir`.`location`,`pir`.`metrc_room`,`pir`.`room_area`,`pir`.`case_id`,`pir`.`lucid_id`,`pir`.`source_batch_id`,`pir`.`source_metrc_id`,`pir`.`note`) AS `d` from `product_inventory_report` `pir`;

-- View: sp_inv_vs_metrc
CREATE ALGORITHM=UNDEFINED DEFINER=`root`@`%` SQL SECURITY DEFINER VIEW `sp_inv_vs_metrc` AS select `mp`.`Id` AS `Id_Metrc`,`mp`.`Label` AS `Label`,`mp`.`PackageType` AS `PackageType`,`mp`.`SourceHarvestCount` AS `SourceHarvestCount`,`mp`.`SourcePackageCount` AS `SourcePackageCount`,`mp`.`SourceProcessingJobCount` AS `SourceProcessingJobCount`,`mp`.`SourceHarvestNames` AS `SourceHarvestNames`,`mp`.`LocationId` AS `LocationId`,`mp`.`LocationName` AS `LocationName`,`mp`.`LocationTypeName` AS `LocationTypeName`,`mp`.`Quantity` AS `Quantity_Metrc`,`mp`.`UnitOfMeasureName` AS `UnitOfMeasureName`,`mp`.`UnitOfMeasureAbbreviation` AS `UnitOfMeasureAbbreviation`,`mp`.`PatientLicenseNumber` AS `PatientLicenseNumber`,`mp`.`ItemFromFacilityLicenseNumber` AS `ItemFromFacilityLicenseNumber`,`mp`.`ItemFromFacilityName` AS `ItemFromFacilityName`,`mp`.`Note` AS `Note_Metrc`,`mp`.`PackagedDate` AS `PackagedDate`,`mp`.`InitialLabTestingState` AS `InitialLabTestingState`,`mp`.`LabTestingState` AS `LabTestingState`,`mp`.`LabTestingStateDate` AS `LabTestingStateDate`,`mp`.`IsProductionBatch` AS `IsProductionBatch`,`mp`.`ProductionBatchNumber` AS `ProductionBatchNumber`,`mp`.`SourceProductionBatchNumbers` AS `SourceProductionBatchNumbers`,`mp`.`IsTradeSample` AS `IsTradeSample`,`mp`.`IsTradeSamplePersistent` AS `IsTradeSamplePersistent`,`mp`.`SourcePackageIsTradeSample` AS `SourcePackageIsTradeSample`,`mp`.`IsDonation` AS `IsDonation`,`mp`.`IsDonationPersistent` AS `IsDonationPersistent`,`mp`.`SourcePackageIsDonation` AS `SourcePackageIsDonation`,`mp`.`IsTestingSample` AS `IsTestingSample`,`mp`.`IsProcessValidationTestingSample` AS `IsProcessValidationTestingSample`,`mp`.`ProductRequiresRemediation` AS `ProductRequiresRemediation`,`mp`.`ContainsRemediatedProduct` AS `ContainsRemediatedProduct`,`mp`.`RemediationDate` AS `RemediationDate`,`mp`.`ReceivedDateTime` AS `ReceivedDateTime`,`mp`.`ReceivedFromManifestNumber` AS `ReceivedFromManifestNumber`,`mp`.`ReceivedFromFacilityLicenseNumber` AS `ReceivedFromFacilityLicenseNumber`,`mp`.`ReceivedFromFacilityName` AS `ReceivedFromFacilityName`,`mp`.`IsOnHold` AS `IsOnHold`,`mp`.`ArchivedDate` AS `ArchivedDate`,`mp`.`FinishedDate` AS `FinishedDate`,`mp`.`LastModified` AS `LastModified`,`mp`.`Item` AS `Item`,`mp`.`License` AS `License_Metrc`,`mp`.`ItemName` AS `ItemName`,`mp`.`ItemQuantityType` AS `ItemQuantityType`,`mp`.`ItemUnitWeight` AS `ItemUnitWeight`,`mp`.`ItemUOM` AS `ItemUOM`,`mp`.`ItemProductCategoryName` AS `ItemProductCategoryName`,`mp`.`ItemProductCategoryType` AS `ItemProductCategoryType`,`mp`.`ItemStrainName` AS `ItemStrainName`,round((case when (`mp`.`UnitOfMeasureName` = 'Pounds') then `mp`.`Quantity` when (`mp`.`UnitOfMeasureName` = 'Grams') then (`mp`.`Quantity` / 453.592) when (`mp`.`UnitOfMeasureName` = 'Each') then (case when (`mp`.`ItemUOM` = 'Grams') then ((`mp`.`Quantity` * `mp`.`ItemUnitWeight`) / 453.592) when (`mp`.`ItemUOM` = 'null') then (`mp`.`Quantity` / 453.592) end) end),2) AS `Weight_Metrc`,`pi`.`id` AS `id`,`pi`.`parent_id` AS `parent_id`,`pi`.`date` AS `date`,`pi`.`metrc_id` AS `metrc_id`,`pi`.`process` AS `process`,`pi`.`harvest_id` AS `harvest_id`,`pi`.`harvest_property` AS `harvest_property`,`pi`.`harvest_date` AS `harvest_date`,`pi`.`harvest_week` AS `harvest_week`,`pi`.`harvest_year` AS `harvest_year`,`pi`.`strain` AS `strain`,`pi`.`strain_type` AS `strain_type`,`pi`.`license` AS `license`,`pi`.`brand` AS `brand`,`pi`.`category` AS `category`,`pi`.`type` AS `type`,`pi`.`size` AS `size`,`pi`.`package_size` AS `package_size`,`pi`.`package_units` AS `package_units`,`pi`.`quantity` AS `quantity`,`pi`.`grade` AS `grade`,`pi`.`color` AS `color`,`pi`.`thc` AS `thc`,`pi`.`weight` AS `weight`,`pi`.`uom` AS `uom`,`pi`.`location_id` AS `location_id`,`pi`.`property` AS `property`,`pi`.`room` AS `room`,`pi`.`room_area` AS `room_area`,`pi`.`room_change_reason` AS `room_change_reason`,`pi`.`status` AS `status`,`pi`.`process_status` AS `process_status`,`pi`.`created_on` AS `created_on`,`pi`.`created_by` AS `created_by`,`pi`.`modify_on` AS `modify_on`,`pi`.`modify_by` AS `modify_by`,`pi`.`note` AS `note`,`pi`.`flag` AS `flag`,`pi`.`trigger` AS `trigger`,`pi`.`source_id` AS `source_id`,`pi`.`source_ids` AS `source_ids`,`pi`.`modified_type` AS `modified_type`,`pi`.`server_ts` AS `server_ts`,`pi`.`production_batch` AS `production_batch`,`pi`.`case_id` AS `case_id`,`pi`.`lucid_id` AS `lucid_id`,`pi`.`package_id` AS `package_id`,`pi`.`packed_date` AS `packed_date`,`pi`.`source_metrc_id` AS `source_metrc_id`,`pi`.`source_batch_id` AS `source_batch_id`,`pi`.`external_batch_id` AS `external_batch_id`,`pi`.`thc_coa` AS `thc_coa`,`pi`.`packing_stage` AS `packing_stage`,`ps`.`name` AS `strain_name_sp`,`ps`.`pacific_stone_label` AS `strain_name_sp_ps`,`ps`.`time_machine_label` AS `strain_name_sp_tm` from ((`metrc`.`package` `mp` join `product_inventory` `pi` on((convert(`mp`.`Label` using utf8mb4) = `pi`.`metrc_id`))) join `pacstone`.`plant_strain` `ps` on((`pi`.`strain` = convert(`ps`.`id` using utf8mb4)))) where ((`pi`.`status` = 'Active') and (`mp`.`ArchivedDate` is null) and (`mp`.`FinishedDate` is null));

-- View: sp_inv_vs_metrc_discrepancies
CREATE ALGORITHM=UNDEFINED DEFINER=`root`@`%` SQL SECURITY DEFINER VIEW `sp_inv_vs_metrc_discrepancies` AS select (case when (`t`.`Quantity_Metrc` <> `t`.`quantity`) then 'Quantity' when (`t`.`LocationId` <> `t`.`room`) then 'Location' when ((`t`.`Weight_Metrc` <> `t`.`weight`) and (`t`.`UnitOfMeasureName` <> 'Each')) then 'Weight' when ((`t`.`ItemStrainName` <> 'null') and (`t`.`ItemStrainName` not in (convert(`t`.`strain_name_sp` using utf8mb4),convert(`t`.`strain_name_sp_ps` using utf8mb4),convert(`t`.`strain_name_sp_tm` using utf8mb4),`t`.`strain`))) then 'Strain' end) AS `Discrepancy`,`t`.`Id_Metrc` AS `Id_Metrc`,`t`.`Label` AS `Label`,`t`.`PackageType` AS `PackageType`,`t`.`SourceHarvestCount` AS `SourceHarvestCount`,`t`.`SourcePackageCount` AS `SourcePackageCount`,`t`.`SourceProcessingJobCount` AS `SourceProcessingJobCount`,`t`.`SourceHarvestNames` AS `SourceHarvestNames`,`t`.`LocationId` AS `LocationId`,`t`.`LocationName` AS `LocationName`,`t`.`LocationTypeName` AS `LocationTypeName`,`t`.`Quantity_Metrc` AS `Quantity_Metrc`,`t`.`UnitOfMeasureName` AS `UnitOfMeasureName`,`t`.`UnitOfMeasureAbbreviation` AS `UnitOfMeasureAbbreviation`,`t`.`PatientLicenseNumber` AS `PatientLicenseNumber`,`t`.`ItemFromFacilityLicenseNumber` AS `ItemFromFacilityLicenseNumber`,`t`.`ItemFromFacilityName` AS `ItemFromFacilityName`,`t`.`Note_Metrc` AS `Note_Metrc`,`t`.`PackagedDate` AS `PackagedDate`,`t`.`InitialLabTestingState` AS `InitialLabTestingState`,`t`.`LabTestingState` AS `LabTestingState`,`t`.`LabTestingStateDate` AS `LabTestingStateDate`,`t`.`IsProductionBatch` AS `IsProductionBatch`,`t`.`ProductionBatchNumber` AS `ProductionBatchNumber`,`t`.`SourceProductionBatchNumbers` AS `SourceProductionBatchNumbers`,`t`.`IsTradeSample` AS `IsTradeSample`,`t`.`IsTradeSamplePersistent` AS `IsTradeSamplePersistent`,`t`.`SourcePackageIsTradeSample` AS `SourcePackageIsTradeSample`,`t`.`IsDonation` AS `IsDonation`,`t`.`IsDonationPersistent` AS `IsDonationPersistent`,`t`.`SourcePackageIsDonation` AS `SourcePackageIsDonation`,`t`.`IsTestingSample` AS `IsTestingSample`,`t`.`IsProcessValidationTestingSample` AS `IsProcessValidationTestingSample`,`t`.`ProductRequiresRemediation` AS `ProductRequiresRemediation`,`t`.`ContainsRemediatedProduct` AS `ContainsRemediatedProduct`,`t`.`RemediationDate` AS `RemediationDate`,`t`.`ReceivedDateTime` AS `ReceivedDateTime`,`t`.`ReceivedFromManifestNumber` AS `ReceivedFromManifestNumber`,`t`.`ReceivedFromFacilityLicenseNumber` AS `ReceivedFromFacilityLicenseNumber`,`t`.`ReceivedFromFacilityName` AS `ReceivedFromFacilityName`,`t`.`IsOnHold` AS `IsOnHold`,`t`.`ArchivedDate` AS `ArchivedDate`,`t`.`FinishedDate` AS `FinishedDate`,`t`.`LastModified` AS `LastModified`,`t`.`Item` AS `Item`,`t`.`License_Metrc` AS `License_Metrc`,`t`.`ItemName` AS `ItemName`,`t`.`ItemQuantityType` AS `ItemQuantityType`,`t`.`ItemUnitWeight` AS `ItemUnitWeight`,`t`.`ItemUOM` AS `ItemUOM`,`t`.`ItemProductCategoryName` AS `ItemProductCategoryName`,`t`.`ItemProductCategoryType` AS `ItemProductCategoryType`,`t`.`ItemStrainName` AS `ItemStrainName`,`t`.`Weight_Metrc` AS `Weight_Metrc`,`t`.`id` AS `id`,`t`.`parent_id` AS `parent_id`,`t`.`date` AS `date`,`t`.`metrc_id` AS `metrc_id`,`t`.`process` AS `process`,`t`.`harvest_id` AS `harvest_id`,`t`.`harvest_property` AS `harvest_property`,`t`.`harvest_date` AS `harvest_date`,`t`.`harvest_week` AS `harvest_week`,`t`.`harvest_year` AS `harvest_year`,`t`.`strain` AS `strain`,`t`.`strain_type` AS `strain_type`,`t`.`license` AS `license`,`t`.`brand` AS `brand`,`t`.`category` AS `category`,`t`.`type` AS `type`,`t`.`size` AS `size`,`t`.`package_size` AS `package_size`,`t`.`package_units` AS `package_units`,`t`.`quantity` AS `quantity`,`t`.`grade` AS `grade`,`t`.`color` AS `color`,`t`.`thc` AS `thc`,`t`.`weight` AS `weight`,`t`.`uom` AS `uom`,`t`.`location_id` AS `location_id`,`t`.`property` AS `property`,`t`.`room` AS `room`,`t`.`room_area` AS `room_area`,`t`.`room_change_reason` AS `room_change_reason`,`t`.`status` AS `status`,`t`.`process_status` AS `process_status`,`t`.`created_on` AS `created_on`,`t`.`created_by` AS `created_by`,`t`.`modify_on` AS `modify_on`,`t`.`modify_by` AS `modify_by`,`t`.`note` AS `note`,`t`.`flag` AS `flag`,`t`.`trigger` AS `trigger`,`t`.`source_id` AS `source_id`,`t`.`source_ids` AS `source_ids`,`t`.`modified_type` AS `modified_type`,`t`.`server_ts` AS `server_ts`,`t`.`production_batch` AS `production_batch`,`t`.`case_id` AS `case_id`,`t`.`lucid_id` AS `lucid_id`,`t`.`package_id` AS `package_id`,`t`.`packed_date` AS `packed_date`,`t`.`source_metrc_id` AS `source_metrc_id`,`t`.`source_batch_id` AS `source_batch_id`,`t`.`external_batch_id` AS `external_batch_id`,`t`.`thc_coa` AS `thc_coa`,`t`.`packing_stage` AS `packing_stage`,`t`.`strain_name_sp` AS `strain_name_sp`,`t`.`strain_name_sp` AS `strain_name_sp_ps`,`t`.`strain_name_sp` AS `strain_name_sp_tm` from `sp_inv_vs_metrc` `t` where ((`t`.`property` = 'SP') and ((`t`.`LocationId` <> `t`.`room`) or ((`t`.`Quantity_Metrc` <> `t`.`quantity`) and (`t`.`LocationId` <> '928201') and (`t`.`room` <> '928201') and (`t`.`room_area` <> 'Meadow')) or ((((`t`.`Weight_Metrc` - `t`.`weight`) / `t`.`weight`) > 0.02) and (`t`.`UnitOfMeasureName` <> 'Each')) or ((`t`.`ItemStrainName` <> 'null') and (`t`.`ItemStrainName` not in (convert(`t`.`strain_name_sp` using utf8mb4),convert(`t`.`strain_name_sp_ps` using utf8mb4),convert(`t`.`strain_name_sp_tm` using utf8mb4),`t`.`strain`)))));

-- View: sp_inv_vs_metrc_discrepancies2
CREATE ALGORITHM=UNDEFINED DEFINER=`root`@`%` SQL SECURITY DEFINER VIEW `sp_inv_vs_metrc_discrepancies2` AS select (case when (`t`.`Quantity_Metrc` <> `t`.`quantity`) then 'Quantity' when (`t`.`LocationId` <> `t`.`room`) then 'Location' when ((`t`.`Weight_Metrc` <> `t`.`weight`) and (`t`.`UnitOfMeasureName` <> 'Each')) then 'Weight' when ((`t`.`ItemStrainName` <> 'null') and (`t`.`ItemStrainName` not in (convert(`t`.`strain_name_sp` using utf8mb4),convert(`t`.`strain_name_sp_ps` using utf8mb4),convert(`t`.`strain_name_sp_tm` using utf8mb4),`t`.`strain`))) then 'Strain' end) AS `Discrepancy`,`t`.`Id_Metrc` AS `Id_Metrc`,`t`.`Label` AS `Label`,`t`.`PackageType` AS `PackageType`,`t`.`SourceHarvestCount` AS `SourceHarvestCount`,`t`.`SourcePackageCount` AS `SourcePackageCount`,`t`.`SourceProcessingJobCount` AS `SourceProcessingJobCount`,`t`.`SourceHarvestNames` AS `SourceHarvestNames`,`t`.`LocationId` AS `LocationId`,`t`.`LocationName` AS `LocationName`,`t`.`LocationTypeName` AS `LocationTypeName`,`t`.`Quantity_Metrc` AS `Quantity_Metrc`,`t`.`UnitOfMeasureName` AS `UnitOfMeasureName`,`t`.`UnitOfMeasureAbbreviation` AS `UnitOfMeasureAbbreviation`,`t`.`PatientLicenseNumber` AS `PatientLicenseNumber`,`t`.`ItemFromFacilityLicenseNumber` AS `ItemFromFacilityLicenseNumber`,`t`.`ItemFromFacilityName` AS `ItemFromFacilityName`,`t`.`Note_Metrc` AS `Note_Metrc`,`t`.`PackagedDate` AS `PackagedDate`,`t`.`InitialLabTestingState` AS `InitialLabTestingState`,`t`.`LabTestingState` AS `LabTestingState`,`t`.`LabTestingStateDate` AS `LabTestingStateDate`,`t`.`IsProductionBatch` AS `IsProductionBatch`,`t`.`ProductionBatchNumber` AS `ProductionBatchNumber`,`t`.`SourceProductionBatchNumbers` AS `SourceProductionBatchNumbers`,`t`.`IsTradeSample` AS `IsTradeSample`,`t`.`IsTradeSamplePersistent` AS `IsTradeSamplePersistent`,`t`.`SourcePackageIsTradeSample` AS `SourcePackageIsTradeSample`,`t`.`IsDonation` AS `IsDonation`,`t`.`IsDonationPersistent` AS `IsDonationPersistent`,`t`.`SourcePackageIsDonation` AS `SourcePackageIsDonation`,`t`.`IsTestingSample` AS `IsTestingSample`,`t`.`IsProcessValidationTestingSample` AS `IsProcessValidationTestingSample`,`t`.`ProductRequiresRemediation` AS `ProductRequiresRemediation`,`t`.`ContainsRemediatedProduct` AS `ContainsRemediatedProduct`,`t`.`RemediationDate` AS `RemediationDate`,`t`.`ReceivedDateTime` AS `ReceivedDateTime`,`t`.`ReceivedFromManifestNumber` AS `ReceivedFromManifestNumber`,`t`.`ReceivedFromFacilityLicenseNumber` AS `ReceivedFromFacilityLicenseNumber`,`t`.`ReceivedFromFacilityName` AS `ReceivedFromFacilityName`,`t`.`IsOnHold` AS `IsOnHold`,`t`.`ArchivedDate` AS `ArchivedDate`,`t`.`FinishedDate` AS `FinishedDate`,`t`.`LastModified` AS `LastModified`,`t`.`Item` AS `Item`,`t`.`License_Metrc` AS `License_Metrc`,`t`.`ItemName` AS `ItemName`,`t`.`ItemQuantityType` AS `ItemQuantityType`,`t`.`ItemUnitWeight` AS `ItemUnitWeight`,`t`.`ItemUOM` AS `ItemUOM`,`t`.`ItemProductCategoryName` AS `ItemProductCategoryName`,`t`.`ItemProductCategoryType` AS `ItemProductCategoryType`,`t`.`ItemStrainName` AS `ItemStrainName`,`t`.`Weight_Metrc` AS `Weight_Metrc`,`t`.`id` AS `id`,`t`.`parent_id` AS `parent_id`,`t`.`date` AS `date`,`t`.`metrc_id` AS `metrc_id`,`t`.`process` AS `process`,`t`.`harvest_id` AS `harvest_id`,`t`.`harvest_property` AS `harvest_property`,`t`.`harvest_date` AS `harvest_date`,`t`.`harvest_week` AS `harvest_week`,`t`.`harvest_year` AS `harvest_year`,`t`.`strain` AS `strain`,`t`.`strain_type` AS `strain_type`,`t`.`license` AS `license`,`t`.`brand` AS `brand`,`t`.`category` AS `category`,`t`.`type` AS `type`,`t`.`size` AS `size`,`t`.`package_size` AS `package_size`,`t`.`package_units` AS `package_units`,`t`.`quantity` AS `quantity`,`t`.`grade` AS `grade`,`t`.`color` AS `color`,`t`.`thc` AS `thc`,`t`.`weight` AS `weight`,`t`.`uom` AS `uom`,`t`.`location_id` AS `location_id`,`t`.`property` AS `property`,`t`.`room` AS `room`,`t`.`room_area` AS `room_area`,`t`.`room_change_reason` AS `room_change_reason`,`t`.`status` AS `status`,`t`.`process_status` AS `process_status`,`t`.`created_on` AS `created_on`,`t`.`created_by` AS `created_by`,`t`.`modify_on` AS `modify_on`,`t`.`modify_by` AS `modify_by`,`t`.`note` AS `note`,`t`.`flag` AS `flag`,`t`.`trigger` AS `trigger`,`t`.`source_id` AS `source_id`,`t`.`source_ids` AS `source_ids`,`t`.`modified_type` AS `modified_type`,`t`.`server_ts` AS `server_ts`,`t`.`production_batch` AS `production_batch`,`t`.`case_id` AS `case_id`,`t`.`lucid_id` AS `lucid_id`,`t`.`package_id` AS `package_id`,`t`.`packed_date` AS `packed_date`,`t`.`source_metrc_id` AS `source_metrc_id`,`t`.`source_batch_id` AS `source_batch_id`,`t`.`external_batch_id` AS `external_batch_id`,`t`.`thc_coa` AS `thc_coa`,`t`.`packing_stage` AS `packing_stage`,`t`.`strain_name_sp` AS `strain_name_sp`,`t`.`strain_name_sp` AS `strain_name_sp_ps`,`t`.`strain_name_sp` AS `strain_name_sp_tm` from `sp_inv_vs_metrc_MV` `t` where ((`t`.`property` = 'SP') and ((`t`.`LocationId` <> `t`.`room`) or ((`t`.`Quantity_Metrc` <> `t`.`quantity`) and (`t`.`LocationId` <> '928201') and (`t`.`room` <> '928201') and (`t`.`room_area` <> 'Meadow')) or ((((`t`.`Weight_Metrc` - `t`.`weight`) / `t`.`weight`) > 0.02) and (`t`.`UnitOfMeasureName` <> 'Each')) or ((`t`.`ItemStrainName` <> 'null') and (`t`.`ItemStrainName` not in (convert(`t`.`strain_name_sp` using utf8mb4),convert(`t`.`strain_name_sp_ps` using utf8mb4),convert(`t`.`strain_name_sp_tm` using utf8mb4),`t`.`strain`)))));

