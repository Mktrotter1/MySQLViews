-- View: batch_latest_quarter
CREATE ALGORITHM=UNDEFINED DEFINER=`root`@`%` SQL SECURITY INVOKER VIEW `batch_latest_quarter` AS with `last_3_months` as (select `processing_finished_weeks`.`year_week` AS `year_week` from `processing_finished_weeks` limit 12) select `batch_stats_view`.`flowering_id` AS `flowering_id`,`batch_stats_view`.`flowering_app_id` AS `flowering_app_id`,`batch_stats_view`.`property_id` AS `property_id`,`batch_stats_view`.`test_id` AS `test_id`,`batch_stats_view`.`flowering_date` AS `flowering_date`,`batch_stats_view`.`flowering_week` AS `flowering_week`,`batch_stats_view`.`flowering_year_week` AS `flowering_year_week`,`batch_stats_view`.`flowering_year` AS `flowering_year`,`batch_stats_view`.`license_id` AS `license_id`,`batch_stats_view`.`strain_id` AS `strain_id`,`batch_stats_view`.`house` AS `house`,`batch_stats_view`.`valve` AS `valve`,`batch_stats_view`.`flowering_plant_count` AS `flowering_plant_count`,`batch_stats_view`.`harvest_id` AS `harvest_id`,`batch_stats_view`.`harvest_date` AS `harvest_date`,`batch_stats_view`.`harvest_week` AS `harvest_week`,`batch_stats_view`.`harvest_year` AS `harvest_year`,`batch_stats_view`.`harvest_year_week` AS `harvest_year_week`,`batch_stats_view`.`harvest_metrc_id` AS `harvest_metrc_id`,`batch_stats_view`.`processing_metrc_id` AS `processing_metrc_id`,`batch_stats_view`.`metrc_name` AS `metrc_name`,`batch_stats_view`.`plant_count_harvested` AS `plant_count_harvested`,`batch_stats_view`.`plant_count_received` AS `plant_count_received`,`batch_stats_view`.`wet_weight` AS `wet_weight`,`batch_stats_view`.`waste_wet_weight` AS `waste_wet_weight`,`batch_stats_view`.`total_wet_weight` AS `total_wet_weight`,`batch_stats_view`.`estimated_flowering_m2` AS `estimated_flowering_m2`,`batch_stats_view`.`flowering_plants_m2` AS `flowering_plants_m2`,`batch_stats_view`.`harvest_plants_m2` AS `harvest_plants_m2`,`batch_stats_view`.`wet_weight_m2` AS `wet_weight_m2`,`batch_stats_view`.`waste_wet_weight_m2` AS `waste_wet_weight_m2`,`batch_stats_view`.`dry_weight` AS `dry_weight`,`batch_stats_view`.`drying_moisture_loss` AS `drying_moisture_loss`,`batch_stats_view`.`bucked_weight` AS `bucked_weight`,`batch_stats_view`.`bucking_waste` AS `bucking_waste`,`batch_stats_view`.`tzero_a` AS `tzero_a`,`batch_stats_view`.`tzero_b` AS `tzero_b`,`batch_stats_view`.`retrim_in` AS `retrim_in`,`batch_stats_view`.`tzero_a_b_retrim` AS `tzero_a_b_retrim`,`batch_stats_view`.`tzero_c` AS `tzero_c`,`batch_stats_view`.`tzero_waste` AS `tzero_waste`,`batch_stats_view`.`tzero_trim` AS `tzero_trim`,`batch_stats_view`.`tzero_oz_plant` AS `tzero_oz_plant`,`batch_stats_view`.`tzero_oz_m2` AS `tzero_oz_m2`,`batch_stats_view`.`tzero_shrink` AS `tzero_shrink`,`batch_stats_view`.`retrim_a` AS `retrim_a`,`batch_stats_view`.`retrim_b` AS `retrim_b`,`batch_stats_view`.`retrim_c` AS `retrim_c`,`batch_stats_view`.`b_revision_in` AS `b_revision_in`,`batch_stats_view`.`c_revision_in` AS `c_revision_in`,`batch_stats_view`.`b_revision_a` AS `b_revision_a`,`batch_stats_view`.`b_revision_b` AS `b_revision_b`,`batch_stats_view`.`b_revision_c` AS `b_revision_c`,`batch_stats_view`.`c_revision_a` AS `c_revision_a`,`batch_stats_view`.`c_revision_b` AS `c_revision_b`,`batch_stats_view`.`c_revision_c` AS `c_revision_c`,`batch_stats_view`.`processing_grade_a` AS `processing_grade_a`,`batch_stats_view`.`processing_grade_b` AS `processing_grade_b`,`batch_stats_view`.`processing_grade_c` AS `processing_grade_c`,`batch_stats_view`.`processing_shake` AS `processing_shake`,`batch_stats_view`.`processing_waste` AS `processing_waste`,`batch_stats_view`.`processing_oz_plant` AS `processing_oz_plant`,`batch_stats_view`.`processing_oz_m2` AS `processing_oz_m2`,`batch_stats_view`.`processing_shrink` AS `processing_shrink`,`batch_stats_view`.`tzero_flower_status` AS `tzero_flower_status` from `batch_stats_view` where (concat(`batch_stats_view`.`harvest_year`,'-',`batch_stats_view`.`harvest_week`) in (select `last_3_months`.`year_week` from `last_3_months`) and (`batch_stats_view`.`tzero_flower_status` = 'Finished'));

-- View: batch_stats_view
CREATE ALGORITHM=UNDEFINED DEFINER=`root`@`%` SQL SECURITY DEFINER VIEW `batch_stats_view` AS select `c`.`flowering_id` AS `flowering_id`,`c`.`flowering_app_id` AS `flowering_app_id`,`c`.`property_id` AS `property_id`,`c`.`test_id` AS `test_id`,`c`.`flowering_date` AS `flowering_date`,`c`.`flowering_week` AS `flowering_week`,`c`.`flowering_year` AS `flowering_year`,`c`.`year_week` AS `flowering_year_week`,`c`.`license_id` AS `license_id`,`c`.`strain_id` AS `strain_id`,`c`.`house` AS `house`,`c`.`valve` AS `valve`,`c`.`flowering_plant_count` AS `flowering_plant_count`,`c`.`harvest_id` AS `harvest_id`,`c`.`harvest_date` AS `harvest_date`,`c`.`harvest_week` AS `harvest_week`,`c`.`harvest_year` AS `harvest_year`,`c`.`harvest_year_week` AS `harvest_year_week`,`c`.`harvest_metrc_id` AS `harvest_metrc_id`,`c`.`processing_metrc_id` AS `processing_metrc_id`,`c`.`metrc_name` AS `metrc_name`,`c`.`plant_count_harvested` AS `plant_count_harvested`,`c`.`plant_count_received` AS `plant_count_received`,`c`.`wet_weight` AS `wet_weight`,`c`.`waste_weight` AS `waste_wet_weight`,(`c`.`wet_weight` + `c`.`waste_weight`) AS `total_wet_weight`,`c`.`estimated_flowering_m2` AS `estimated_flowering_m2`,(`c`.`flowering_plant_count` / `c`.`estimated_flowering_m2`) AS `flowering_plants_m2`,(`c`.`plant_count_harvested` / `c`.`estimated_flowering_m2`) AS `harvest_plants_m2`,(`c`.`wet_weight` / `c`.`estimated_flowering_m2`) AS `wet_weight_m2`,(`c`.`waste_weight` / `c`.`estimated_flowering_m2`) AS `waste_wet_weight_m2`,`p`.`dry_weight` AS `dry_weight`,(`c`.`wet_weight` - `p`.`dry_weight`) AS `drying_moisture_loss`,`p`.`bucked_weight` AS `bucked_weight`,(`p`.`dry_weight` - `p`.`bucked_weight`) AS `bucking_waste`,`p`.`tzero_a` AS `tzero_a`,`p`.`tzero_b` AS `tzero_b`,`p`.`retrim_in` AS `retrim_in`,`p`.`tzero_a_b_retrim` AS `tzero_a_b_retrim`,`p`.`tzero_c` AS `tzero_c`,`p`.`tzero_waste` AS `tzero_waste`,`p`.`tzero_trim` AS `tzero_trim`,`p`.`tzero_oz_plant` AS `tzero_oz_plant`,((`p`.`tzero_a_b_retrim` * 16) / `c`.`estimated_flowering_m2`) AS `tzero_oz_m2`,`p`.`tzero_shrink` AS `tzero_shrink`,`p`.`retrim_a` AS `retrim_a`,`p`.`retrim_b` AS `retrim_b`,`p`.`retrim_c` AS `retrim_c`,`p`.`b_revision_in` AS `b_revision_in`,`p`.`c_revision_in` AS `c_revision_in`,`p`.`b_revision_a` AS `b_revision_a`,`p`.`b_revision_b` AS `b_revision_b`,`p`.`b_revision_c` AS `b_revision_c`,`p`.`c_revision_a` AS `c_revision_a`,`p`.`c_revision_b` AS `c_revision_b`,`p`.`c_revision_c` AS `c_revision_c`,`p`.`grade_a` AS `processing_grade_a`,`p`.`grade_b` AS `processing_grade_b`,`p`.`grade_c` AS `processing_grade_c`,`p`.`shake` AS `processing_shake`,`p`.`waste_batch` AS `processing_waste`,`p`.`oz_per_plant` AS `processing_oz_plant`,(((`p`.`grade_a` + `p`.`grade_b`) * 16) / `c`.`estimated_flowering_m2`) AS `processing_oz_m2`,`p`.`processing_shrink` AS `processing_shrink`,`p`.`tzero_flower_status` AS `tzero_flower_status` from (`cultivation_view` `c` left join `processing` `p` on((`c`.`flowering_app_id` = convert(`p`.`flowering_id` using utf8mb4)))) where (`c`.`harvest_year` > 2019);

-- View: crop_details_metrics
CREATE ALGORITHM=UNDEFINED DEFINER=`marc`@`%` SQL SECURITY DEFINER VIEW `crop_details_metrics` AS select `t`.`processing_metrc_id` AS `processing_metrc_id`,`t`.`harvest_id` AS `harvest_id`,`t`.`harvest_base_name` AS `harvest_base_name`,`t`.`strain_id` AS `strain_id`,`ps`.`name` AS `strain_name`,`t`.`property_id` AS `property_id`,`t`.`harvest_date` AS `harvest_date`,`t`.`harvest_week` AS `harvest_week`,`t`.`harvest_year` AS `harvest_year`,`t`.`harvest_year_week` AS `harvest_year_week`,`t`.`license_id` AS `license_id`,`t`.`test_id` AS `test_id`,`t`.`planted_count` AS `planted_count`,if((`t`.`harvest_type` = 'manicure'),0,(`t`.`planted_count` - `t`.`harvested_count`)) AS `plants_lost`,`t`.`harvested_count` AS `harvested_count`,`t`.`wet_weight` AS `wet_weight`,`t`.`wet_waste_weight` AS `wet_waste_weight`,if((`t`.`wet_weight` = 0),0,(`t`.`wet_waste_weight` / `t`.`wet_weight`)) AS `wet_waste_pct`,if((`t`.`planted_count` = 0),0,((`t`.`wet_weight` / `t`.`planted_count`) * 16)) AS `wet_weight_oz_plant`,if((`t`.`harvested_count` = 0),0,((`t`.`wet_weight` / `t`.`harvested_count`) * 16)) AS `wet_weight_oz_plant_h`,`t`.`dry_weight` AS `dry_weight`,(`t`.`wet_weight` - `t`.`dry_weight`) AS `drying_loss`,if((`t`.`wet_weight` = 0),0,(1 - (`t`.`dry_weight` / `t`.`wet_weight`))) AS `drying_loss_pct`,if((`t`.`planted_count` = 0),0,((`t`.`dry_weight` / `t`.`planted_count`) * 16)) AS `dry_weight_oz_plant`,if((`t`.`harvested_count` = 0),0,((`t`.`dry_weight` / `t`.`harvested_count`) * 16)) AS `dry_weight_oz_plant_h`,`t`.`bucked_weight` AS `bucked_weight`,(`t`.`dry_weight` - `t`.`bucked_weight`) AS `bucked_waste`,if((`t`.`dry_weight` = 0),0,(1 - (`t`.`bucked_weight` / `t`.`dry_weight`))) AS `bucked_waste_pct`,if((`t`.`planted_count` = 0),0,((`t`.`bucked_weight` / `t`.`planted_count`) * 16)) AS `bucked_weight_oz_plant`,if((`t`.`harvested_count` = 0),0,((`t`.`bucked_weight` / `t`.`harvested_count`) * 16)) AS `bucked_weight_oz_plant_h`,`t`.`tzero_a` AS `tzero_a`,`t`.`tzero_b` AS `tzero_b`,(`t`.`tzero_a` + `t`.`tzero_b`) AS `tzero_ab`,if((`t`.`bucked_weight` = 0),0,((`t`.`tzero_a` + `t`.`tzero_b`) / `t`.`bucked_weight`)) AS `tzero_ab_yield_pct`,if((`t`.`planted_count` = 0),0,(((`t`.`tzero_a` + `t`.`tzero_b`) / `t`.`planted_count`) * 16)) AS `tzero_ab_oz_plant`,if((`t`.`harvested_count` = 0),0,(((`t`.`tzero_a` + `t`.`tzero_b`) / `t`.`harvested_count`) * 16)) AS `tzero_ab_oz_plant_h`,`t`.`tzero_c` AS `tzero_c`,((`t`.`tzero_a` + `t`.`tzero_b`) + `t`.`tzero_c`) AS `tzero_abc`,if((`t`.`bucked_weight` = 0),0,(((`t`.`tzero_a` + `t`.`tzero_b`) + `t`.`tzero_c`) / `t`.`bucked_weight`)) AS `tzero_abc_yield_pct`,if((`t`.`planted_count` = 0),0,((((`t`.`tzero_a` + `t`.`tzero_b`) + `t`.`tzero_c`) / `t`.`planted_count`) * 16)) AS `tzero_abc_oz_plant`,if((`t`.`harvested_count` = 0),0,((((`t`.`tzero_a` + `t`.`tzero_b`) + `t`.`tzero_c`) / `t`.`harvested_count`) * 16)) AS `tzero_abc_oz_plant_h`,`t`.`tzero_trim` AS `tzero_trim`,`t`.`tzero_shake` AS `tzero_shake`,((((`t`.`tzero_a` + `t`.`tzero_b`) + `t`.`tzero_c`) + `t`.`tzero_trim`) + `t`.`tzero_shake`) AS `tzero_abc_trim_shake`,`t`.`tzero_waste` AS `tzero_waste`,(((((`t`.`tzero_a` + `t`.`tzero_b`) + `t`.`tzero_c`) + `t`.`tzero_trim`) + `t`.`tzero_shake`) + `t`.`tzero_waste`) AS `tzero_total`,(`t`.`bucked_weight` - (((((`t`.`tzero_a` + `t`.`tzero_b`) + `t`.`tzero_c`) + `t`.`tzero_trim`) + `t`.`tzero_shake`) + `t`.`tzero_waste`)) AS `tzero_misc_loss`,if((`t`.`bucked_weight` = 0),0,((`t`.`bucked_weight` - (((((`t`.`tzero_a` + `t`.`tzero_b`) + `t`.`tzero_c`) + `t`.`tzero_trim`) + `t`.`tzero_shake`) + `t`.`tzero_waste`)) / `t`.`bucked_weight`)) AS `tzero_misc_loss_pct`,(`t`.`bucked_weight` - ((((`t`.`tzero_a` + `t`.`tzero_b`) + `t`.`tzero_c`) + `t`.`tzero_trim`) + `t`.`tzero_shake`)) AS `tzero_total_loss`,if((`t`.`bucked_weight` = 0),0,((`t`.`bucked_weight` - ((((`t`.`tzero_a` + `t`.`tzero_b`) + `t`.`tzero_c`) + `t`.`tzero_trim`) + `t`.`tzero_shake`)) / `t`.`bucked_weight`)) AS `tzero_total_loss_pct`,if((`t`.`planted_count` = 0),0,((`t`.`tzero_trim` / `t`.`planted_count`) * 16)) AS `tzero_trim_oz_plant`,if((`t`.`harvested_count` = 0),0,((`t`.`tzero_trim` / `t`.`harvested_count`) * 16)) AS `tzero_trim_oz_plant_h`,if((`t`.`bucked_weight` = 0),0,(`t`.`tzero_trim` / `t`.`bucked_weight`)) AS `total_batch_trim_pct`,if((`t`.`wet_weight` = 0),0,(1 - (((((`t`.`tzero_a` + `t`.`tzero_b`) + `t`.`tzero_c`) + `t`.`tzero_trim`) + `t`.`tzero_shake`) / `t`.`wet_weight`))) AS `total_batch_weight_loss_pct` from (`harvest_base_processing_sorter` `t` left join `pacstone`.`plant_strain` `ps` on((`ps`.`id` = `t`.`strain_id`))) where (`t`.`tzero_status` = 'completed');

-- View: crop_metrics
CREATE ALGORITHM=UNDEFINED DEFINER=`marc`@`%` SQL SECURITY DEFINER VIEW `crop_metrics` AS select `t`.`harvest_base_name` AS `harvest_base_name`,`t`.`strain_id` AS `strain_id`,`ps`.`name` AS `strain_name`,`t`.`property_id` AS `property_id`,`t`.`harvest_date` AS `harvest_date`,`t`.`harvest_week` AS `harvest_week`,`t`.`harvest_year` AS `harvest_year`,`t`.`harvest_year_week` AS `harvest_year_week`,`t`.`license_id` AS `license_id`,`t`.`planted_count` AS `planted_count`,(`t`.`planted_count` - `t`.`harvested_count`) AS `plants_lost`,`t`.`harvested_count` AS `harvested_count`,`t`.`wet_weight` AS `wet_weight`,`t`.`wet_waste_weight` AS `wet_waste_weight`,if((`t`.`wet_weight` = 0),0,(`t`.`wet_waste_weight` / `t`.`wet_weight`)) AS `wet_waste_pct`,if((`t`.`planted_count` = 0),0,((`t`.`wet_weight` / `t`.`planted_count`) * 16)) AS `wet_weight_oz_plant`,if((`t`.`harvested_count` = 0),0,((`t`.`wet_weight` / `t`.`harvested_count`) * 16)) AS `wet_weight_oz_plant_h`,`t`.`dry_weight` AS `dry_weight`,(`t`.`wet_weight` - `t`.`dry_weight`) AS `drying_loss`,if((`t`.`wet_weight` = 0),0,(1 - (`t`.`dry_weight` / `t`.`wet_weight`))) AS `drying_loss_pct`,if((`t`.`planted_count` = 0),0,((`t`.`dry_weight` / `t`.`planted_count`) * 16)) AS `dry_weight_oz_plant`,if((`t`.`harvested_count` = 0),0,((`t`.`dry_weight` / `t`.`harvested_count`) * 16)) AS `dry_weight_oz_plant_h`,`t`.`bucked_weight` AS `bucked_weight`,(`t`.`dry_weight` - `t`.`bucked_weight`) AS `bucked_waste`,if((`t`.`dry_weight` = 0),0,(1 - (`t`.`bucked_weight` / `t`.`dry_weight`))) AS `bucked_waste_pct`,if((`t`.`planted_count` = 0),0,((`t`.`bucked_weight` / `t`.`planted_count`) * 16)) AS `bucked_weight_oz_plant`,if((`t`.`harvested_count` = 0),0,((`t`.`bucked_weight` / `t`.`harvested_count`) * 16)) AS `bucked_weight_oz_plant_h`,`t`.`tzero_a` AS `tzero_a`,`t`.`tzero_b` AS `tzero_b`,(`t`.`tzero_a` + `t`.`tzero_b`) AS `tzero_ab`,if((`t`.`bucked_weight` = 0),0,((`t`.`tzero_a` + `t`.`tzero_b`) / `t`.`bucked_weight`)) AS `tzero_ab_yield_pct`,if((`t`.`planted_count` = 0),0,(((`t`.`tzero_a` + `t`.`tzero_b`) / `t`.`planted_count`) * 16)) AS `tzero_ab_oz_plant`,if((`t`.`harvested_count` = 0),0,(((`t`.`tzero_a` + `t`.`tzero_b`) / `t`.`harvested_count`) * 16)) AS `tzero_ab_oz_plant_h`,`t`.`tzero_c` AS `tzero_c`,((`t`.`tzero_a` + `t`.`tzero_b`) + `t`.`tzero_c`) AS `tzero_abc`,if((`t`.`bucked_weight` = 0),0,(((`t`.`tzero_a` + `t`.`tzero_b`) + `t`.`tzero_c`) / `t`.`bucked_weight`)) AS `tzero_abc_yield_pct`,if((`t`.`planted_count` = 0),0,((((`t`.`tzero_a` + `t`.`tzero_b`) + `t`.`tzero_c`) / `t`.`planted_count`) * 16)) AS `tzero_abc_oz_plant`,if((`t`.`harvested_count` = 0),0,((((`t`.`tzero_a` + `t`.`tzero_b`) + `t`.`tzero_c`) / `t`.`harvested_count`) * 16)) AS `tzero_abc_oz_plant_h`,`t`.`tzero_trim` AS `tzero_trim`,`t`.`tzero_shake` AS `tzero_shake`,((((`t`.`tzero_a` + `t`.`tzero_b`) + `t`.`tzero_c`) + `t`.`tzero_trim`) + `t`.`tzero_shake`) AS `tzero_abc_trim_shake`,`t`.`tzero_waste` AS `tzero_waste`,(((((`t`.`tzero_a` + `t`.`tzero_b`) + `t`.`tzero_c`) + `t`.`tzero_trim`) + `t`.`tzero_shake`) + `t`.`tzero_waste`) AS `tzero_total`,(`t`.`bucked_weight` - (((((`t`.`tzero_a` + `t`.`tzero_b`) + `t`.`tzero_c`) + `t`.`tzero_trim`) + `t`.`tzero_shake`) + `t`.`tzero_waste`)) AS `tzero_misc_loss`,if((`t`.`bucked_weight` = 0),0,((`t`.`bucked_weight` - (((((`t`.`tzero_a` + `t`.`tzero_b`) + `t`.`tzero_c`) + `t`.`tzero_trim`) + `t`.`tzero_shake`) + `t`.`tzero_waste`)) / `t`.`bucked_weight`)) AS `tzero_misc_loss_pct`,(`t`.`bucked_weight` - ((((`t`.`tzero_a` + `t`.`tzero_b`) + `t`.`tzero_c`) + `t`.`tzero_trim`) + `t`.`tzero_shake`)) AS `tzero_total_loss`,if((`t`.`bucked_weight` = 0),0,((`t`.`bucked_weight` - ((((`t`.`tzero_a` + `t`.`tzero_b`) + `t`.`tzero_c`) + `t`.`tzero_trim`) + `t`.`tzero_shake`)) / `t`.`bucked_weight`)) AS `tzero_total_loss_pct`,if((`t`.`planted_count` = 0),0,((`t`.`tzero_trim` / `t`.`planted_count`) * 16)) AS `tzero_trim_oz_plant`,if((`t`.`harvested_count` = 0),0,((`t`.`tzero_trim` / `t`.`harvested_count`) * 16)) AS `tzero_trim_oz_plant_h`,if((`t`.`bucked_weight` = 0),0,(`t`.`tzero_trim` / `t`.`bucked_weight`)) AS `total_batch_trim_pct`,if((`t`.`wet_weight` = 0),0,(((((`t`.`tzero_a` + `t`.`tzero_b`) + `t`.`tzero_c`) + `t`.`tzero_trim`) + `t`.`tzero_shake`) / `t`.`wet_weight`)) AS `total_batch_weight_loss_pct`,if((`t`.`planted_count` = 0),0,least(4,ceiling((abs((((`t`.`wet_weight` / `t`.`planted_count`) * 16) - (select `crop_metric_threshold`.`m` from `crop_metric_threshold` where (`crop_metric_threshold`.`id` = 'wet_oz')))) / (select `crop_metric_threshold`.`mad` from `crop_metric_threshold` where (`crop_metric_threshold`.`id` = 'wet_oz')))))) AS `wet_oz_deviation`,if((`t`.`planted_count` = 0),0,least(4,ceiling((abs((((`t`.`dry_weight` / `t`.`planted_count`) * 16) - (select `crop_metric_threshold`.`m` from `crop_metric_threshold` where (`crop_metric_threshold`.`id` = 'dry_oz')))) / (select `crop_metric_threshold`.`mad` from `crop_metric_threshold` where (`crop_metric_threshold`.`id` = 'dry_oz')))))) AS `dry_oz_deviation`,if((`t`.`planted_count` = 0),0,least(4,ceiling((abs((((`t`.`bucked_weight` / `t`.`planted_count`) * 16) - (select `crop_metric_threshold`.`m` from `crop_metric_threshold` where (`crop_metric_threshold`.`id` = 'buck_oz')))) / (select `crop_metric_threshold`.`mad` from `crop_metric_threshold` where (`crop_metric_threshold`.`id` = 'buck_oz')))))) AS `buck_oz_deviation`,if((`t`.`planted_count` = 0),0,least(4,ceiling((abs(((((`t`.`tzero_a` + `t`.`tzero_b`) / `t`.`planted_count`) * 16) - (select `crop_metric_threshold`.`m` from `crop_metric_threshold` where (`crop_metric_threshold`.`id` = 'flower_ab_oz')))) / (select `crop_metric_threshold`.`mad` from `crop_metric_threshold` where (`crop_metric_threshold`.`id` = 'flower_ab_oz')))))) AS `flower_ab_oz_deviation`,if((`t`.`planted_count` = 0),0,least(4,ceiling((abs((((((`t`.`tzero_a` + `t`.`tzero_b`) + `t`.`tzero_c`) / `t`.`planted_count`) * 16) - (select `crop_metric_threshold`.`m` from `crop_metric_threshold` where (`crop_metric_threshold`.`id` = 'flower_abc_oz')))) / (select `crop_metric_threshold`.`mad` from `crop_metric_threshold` where (`crop_metric_threshold`.`id` = 'flower_abc_oz')))))) AS `flower_abc_oz_deviation`,if((`t`.`planted_count` = 0),0,least(4,ceiling((abs((((`t`.`tzero_trim` / `t`.`planted_count`) * 16) - (select `crop_metric_threshold`.`m` from `crop_metric_threshold` where (`crop_metric_threshold`.`id` = 'trim_oz')))) / (select `crop_metric_threshold`.`mad` from `crop_metric_threshold` where (`crop_metric_threshold`.`id` = 'trim_oz')))))) AS `trim_oz_deviation`,if((`t`.`wet_weight` = 0),0,least(4,ceiling((abs(((1 - (`t`.`dry_weight` / `t`.`wet_weight`)) - (select `crop_metric_threshold`.`m` from `crop_metric_threshold` where (`crop_metric_threshold`.`id` = 'dry_loss_pct')))) / (select `crop_metric_threshold`.`mad` from `crop_metric_threshold` where (`crop_metric_threshold`.`id` = 'dry_loss_pct')))))) AS `dry_loss_pct_deviation`,if((`t`.`dry_weight` = 0),0,least(4,ceiling((abs(((1 - (`t`.`bucked_weight` / `t`.`dry_weight`)) - (select `crop_metric_threshold`.`m` from `crop_metric_threshold` where (`crop_metric_threshold`.`id` = 'buck_loss_pct')))) / (select `crop_metric_threshold`.`mad` from `crop_metric_threshold` where (`crop_metric_threshold`.`id` = 'buck_loss_pct')))))) AS `buck_loss_pct_deviation`,if((`t`.`bucked_weight` = 0),0,least(4,ceiling((abs((((`t`.`bucked_weight` - ((((`t`.`tzero_a` + `t`.`tzero_b`) + `t`.`tzero_c`) + `t`.`tzero_trim`) + `t`.`tzero_shake`)) / `t`.`bucked_weight`) - (select `crop_metric_threshold`.`m` from `crop_metric_threshold` where (`crop_metric_threshold`.`id` = 'trim_loss_pct')))) / (select `crop_metric_threshold`.`mad` from `crop_metric_threshold` where (`crop_metric_threshold`.`id` = 'trim_loss_pct')))))) AS `trim_loss_pct_deviation` from (`crop_rollup` `t` left join `pacstone`.`plant_strain` `ps` on((`ps`.`id` = `t`.`strain_id`))) where (`t`.`crop_status` = 'complete');

-- View: crop_rollup
CREATE ALGORITHM=UNDEFINED DEFINER=`marc`@`%` SQL SECURITY DEFINER VIEW `crop_rollup` AS select `harvest_base_processing_sorter`.`harvest_base_name` AS `harvest_base_name`,max(`harvest_base_processing_sorter`.`strain_id`) AS `strain_id`,'strain_name' AS `strain_name`,substring_index(`harvest_base_processing_sorter`.`harvest_base_name`,'-',1) AS `property_id`,max(`harvest_base_processing_sorter`.`harvest_date`) AS `harvest_date`,substring_index(substring_index(`harvest_base_processing_sorter`.`harvest_base_name`,'-',2),'-',-(1)) AS `harvest_week`,substring_index(substring_index(`harvest_base_processing_sorter`.`harvest_base_name`,'-',3),'-',-(1)) AS `harvest_year`,concat(substring_index(substring_index(`harvest_base_processing_sorter`.`harvest_base_name`,'-',3),'-',-(1)),substring_index(substring_index(`harvest_base_processing_sorter`.`harvest_base_name`,'-',2),'-',-(1))) AS `harvest_year_week`,max(`harvest_base_processing_sorter`.`license_id`) AS `license_id`,count(0) AS `record_count`,if((count(0) = 1),sum(`harvest_base_processing_sorter`.`planted_count`),sum(if((`harvest_base_processing_sorter`.`harvest_type` = 'manicure'),0,`harvest_base_processing_sorter`.`planted_count`))) AS `planted_count`,sum(`harvest_base_processing_sorter`.`harvested_count`) AS `harvested_count`,sum(`harvest_base_processing_sorter`.`wet_weight`) AS `wet_weight`,sum(`harvest_base_processing_sorter`.`wet_waste_weight`) AS `wet_waste_weight`,sum(`harvest_base_processing_sorter`.`dry_weight`) AS `dry_weight`,sum(`harvest_base_processing_sorter`.`bucked_weight`) AS `bucked_weight`,sum(`harvest_base_processing_sorter`.`tzero_a`) AS `tzero_a`,sum(`harvest_base_processing_sorter`.`tzero_b`) AS `tzero_b`,sum(`harvest_base_processing_sorter`.`tzero_c`) AS `tzero_c`,sum(`harvest_base_processing_sorter`.`tzero_trim`) AS `tzero_trim`,sum(`harvest_base_processing_sorter`.`tzero_shake`) AS `tzero_shake`,sum(`harvest_base_processing_sorter`.`tzero_waste`) AS `tzero_waste`,if((sum(if((`harvest_base_processing_sorter`.`tzero_status` = 'completed'),1,0)) = count(0)),'Complete','In Progress') AS `crop_status` from `harvest_base_processing_sorter` group by `harvest_base_processing_sorter`.`harvest_base_name`;

-- View: cultivation_view
CREATE ALGORITHM=UNDEFINED DEFINER=`lizeth`@`%` SQL SECURITY DEFINER VIEW `cultivation_view` AS select `f`.`flowering_id` AS `flowering_id`,`f`.`id` AS `flowering_app_id`,`f`.`property_id` AS `property_id`,`f`.`test_id` AS `test_id`,`f`.`date` AS `flowering_date`,`f`.`week_num` AS `flowering_week`,`f`.`year_num` AS `flowering_year`,concat(`f`.`year_num`,right(concat('0',`f`.`week_num`),2)) AS `year_week`,`f`.`license_id` AS `license_id`,`f`.`strain_id` AS `strain_id`,`f`.`location_3` AS `house`,`f`.`location_5` AS `valve`,`f`.`plant_count` AS `flowering_plant_count`,`f`.`action` AS `flowering_action`,`c`.`name` AS `name`,`c`.`capacity` AS `capacity`,`c`.`m2` AS `m2`,`c`.`location_string` AS `location_string`,`h`.`harvest_id` AS `harvest_id`,`h`.`date` AS `harvest_date`,`h`.`week_num` AS `harvest_week`,`h`.`year_num` AS `harvest_year`,concat(`h`.`year_num`,right(concat('0',`h`.`week_num`),2)) AS `harvest_year_week`,`h`.`harvest_metrc_id` AS `harvest_metrc_id`,`h`.`processing_metrc_id` AS `processing_metrc_id`,`h`.`metrc_harvest_name` AS `metrc_name`,`h`.`plant_count_harvested` AS `plant_count_harvested`,`h`.`plant_count_received` AS `plant_count_received`,`h`.`wet` AS `wet_weight`,`h`.`waste` AS `waste_weight`,`h`.`action` AS `harvest_action`,week((`f`.`date` + interval 56 day),3) AS `estimated_harvest_week`,round(((`f`.`plant_count` * `c`.`m2`) / `c`.`capacity`),2) AS `estimated_flowering_m2` from ((`cultivation`.`flowering` `f` left join `pacstone`.`canopy` `c` on((convert(`c`.`id` using utf8mb4) = `f`.`canopy_id`))) left join `cultivation`.`harvesting` `h` on((`h`.`flowering_id` = `f`.`id`))) where ((year(`h`.`date`) > 2019) and (`h`.`action` <> 'Deleted') and (`f`.`action` <> 'Deleted') and (`f`.`action` <> 'Duplicated'));

-- View: dtc_inventory_view
CREATE ALGORITHM=UNDEFINED DEFINER=`lizeth`@`%` SQL SECURITY DEFINER VIEW `dtc_inventory_view` AS select `pi`.`id` AS `id`,`pi`.`date` AS `date`,`pi`.`metrc_id` AS `metrc_id`,`pi`.`harvest_id` AS `harvest_id`,`pi`.`strain` AS `strain`,`pi`.`strain_type` AS `strain_type`,`pi`.`license` AS `license`,`pi`.`brand` AS `brand`,`pi`.`category` AS `category`,`pi`.`type` AS `type`,`pi`.`package_size` AS `package_size`,`pi`.`quantity` AS `quantity`,`pi`.`thc` AS `thc`,`pi`.`weight` AS `weight`,`pi`.`property` AS `property`,`pi`.`room` AS `room`,`pi`.`room_area` AS `room_area`,`pi`.`status` AS `status`,`pi`.`note` AS `note`,`pi`.`server_ts` AS `server_ts`,`pi`.`thc_coa` AS `thc_coa` from `packing`.`product_inventory` `pi` where ((`pi`.`room_area` = 'DTC') and (`pi`.`status` = 'Active'));

-- View: harvest_base_marc
CREATE ALGORITHM=UNDEFINED DEFINER=`marc`@`%` SQL SECURITY DEFINER VIEW `harvest_base_marc` AS select `hbr`.`flowering_id` AS `flowering_id`,concat(concat(concat(concat(concat(concat(concat(concat(`hbr`.`property_id`,'-'),right(concat('0',`hbr`.`week_num`),2)),'-'),`hbr`.`year_num`),'-'),`hbr`.`strain_id`),'-'),right(`hbr`.`license_id`,5)) AS `harvest_base_name` from (select `cultivation`.`harvesting`.`flowering_id` AS `flowering_id`,`cultivation`.`harvesting`.`property_id` AS `property_id`,`cultivation`.`harvesting`.`week_num` AS `week_num`,`cultivation`.`harvesting`.`year_num` AS `year_num`,`cultivation`.`harvesting`.`license_id` AS `license_id`,`cultivation`.`harvesting`.`strain_id` AS `strain_id`,`cultivation`.`harvesting`.`harvest_type` AS `harvest_type`,`cultivation`.`harvesting`.`plant_count_harvested` AS `plant_count_harvested`,row_number() OVER (PARTITION BY `cultivation`.`harvesting`.`flowering_id` ORDER BY (case when (`cultivation`.`harvesting`.`harvest_type` = 'full') then 0 when (`cultivation`.`harvesting`.`harvest_type` = 'partial') then 1 else 2 end),`cultivation`.`harvesting`.`plant_count_harvested` )  AS `rn` from `cultivation`.`harvesting`) `hbr` where (`hbr`.`rn` = 1);

-- View: harvest_base_processing
CREATE ALGORITHM=UNDEFINED DEFINER=`lizeth`@`%` SQL SECURITY DEFINER VIEW `harvest_base_processing` AS select `h`.`processing_metrc_id` AS `processing_metrc_id`,max(`h`.`harvest_id`) AS `harvest_id`,max(`h`.`harvest_base_name`) AS `harvest_base_name`,max(`h`.`crop_name`) AS `crop_name`,max(`h`.`property_id`) AS `property_id`,max(`h`.`date`) AS `harvest_date`,max(`h`.`week_num`) AS `harvest_week`,max(`h`.`year_num`) AS `harvest_year`,max(`h`.`harvest_year_week`) AS `harvest_year_week`,max(`h`.`license_id`) AS `license_id`,max(`h`.`strain_id`) AS `strain_id`,max(`h`.`test_id`) AS `test_id`,max(`h`.`harvest_type`) AS `harvest_type`,max(`h`.`harvest_status`) AS `harvest_status`,`sub`.`planted_count` AS `planted_count`,`sub`.`sum_plant_count_harvested` AS `harvested_count`,`sub`.`wet_weight` AS `wet_weight`,`sub`.`wet_waste_weight` AS `wet_waste_weight`,max(`db`.`total_weight`) AS `dry_weight`,max(`bw`.`bucked_weight`) AS `bucked_weight`,(case when (max(`tzb`.`tzero_finish_time`) is not null) then 'Completed' when (max(`tzb`.`tzero_finish_time`) is null) then (case when `h`.`processing_metrc_id` not in (select distinct `tzero_batch_temp`.`transfer_metrc_id` from `tzero_batch_temp`) then 'In Queue' else 'In Progress' end) else '-' end) AS `tzero_status`,max((`fl`.`tzero_a` + `fl`.`retrim_a`)) AS `tzero_a`,max((`fl`.`b_from_b` + `fl`.`b_from_c`)) AS `tzero_b`,max((`ml`.`c_from_b` + `ml`.`c_from_c`)) AS `tzero_mold`,max(`trim`.`tzero_trim`) AS `tzero_trim`,max(`ss`.`tzero_shake`) AS `tzero_shake`,max(`ws`.`tzero_waste`) AS `tzero_waste` from (((((((((`harvest_base_view` `h` join (select `harvest_base_view`.`processing_metrc_id` AS `processing_metrc_id`,sum(`harvest_base_view`.`harvested_count`) AS `sum_plant_count_harvested`,sum(`harvest_base_view`.`wet_weight`) AS `wet_weight`,sum(`harvest_base_view`.`wet_waste_weight`) AS `wet_waste_weight`,max(`harvest_base_view`.`harvest_base_name`) AS `harvest_base_name`,sum(`harvest_base_view`.`planted_count`) AS `planted_count`,max(`harvest_base_view`.`harvest_status`) AS `harvest_status`,max(`harvest_base_view`.`crop_name`) AS `crop_name`,max(`harvest_base_view`.`harvest_type`) AS `harvest_type` from `harvest_base_view` group by `harvest_base_view`.`processing_metrc_id`) `sub` on((`h`.`processing_metrc_id` = `sub`.`processing_metrc_id`))) left join (select `dry_plant_batches_temp`.`harvest_metrc_id` AS `harvest_metrc_id`,sum(`dry_plant_batches_temp`.`total_weight`) AS `total_weight` from `dry_plant_batches_temp` group by `dry_plant_batches_temp`.`harvest_metrc_id`) `db` on((`h`.`processing_metrc_id` = convert(`db`.`harvest_metrc_id` using utf8mb4)))) left join (select `bucked_batches_temp`.`harvest_metrc_id` AS `harvest_metrc_id`,sum(`bucked_batches_temp`.`total_weight`) AS `bucked_weight` from `bucked_batches_temp` group by `bucked_batches_temp`.`harvest_metrc_id`) `bw` on((`h`.`processing_metrc_id` = convert(`bw`.`harvest_metrc_id` using utf8mb4)))) left join (select `tzero_flower_temp`.`transfer_metrc_id` AS `transfer_metrc_id`,sum(`tzero_flower_temp`.`weight`) AS `tzero_flower`,sum(if(((`tzero_flower_temp`.`clasification` = 'Flower') and (`tzero_flower_temp`.`grade` = 'A')),`tzero_flower_temp`.`weight`,0)) AS `tzero_a`,sum(if(((`tzero_flower_temp`.`clasification` = 'Retrim') and (`tzero_flower_temp`.`grade` = 'A')),`tzero_flower_temp`.`weight`,0)) AS `retrim_a`,sum(if(((`tzero_flower_temp`.`clasification` = 'B') and (`tzero_flower_temp`.`grade` = 'B')),`tzero_flower_temp`.`weight`,0)) AS `b_from_b`,sum(if(((`tzero_flower_temp`.`clasification` = 'C') and (`tzero_flower_temp`.`grade` = 'B')),`tzero_flower_temp`.`weight`,0)) AS `b_from_c`,max(`tzero_flower_temp`.`clasification`) AS `clasification`,max(`tzero_flower_temp`.`grade`) AS `grade` from `tzero_flower_temp` group by `tzero_flower_temp`.`transfer_metrc_id`) `fl` on((`h`.`processing_metrc_id` = convert(`fl`.`transfer_metrc_id` using utf8mb4)))) left join (select `tzero_trim_temp`.`transfer_metrc_id` AS `transfer_metrc_id`,sum(`tzero_trim_temp`.`weight`) AS `tzero_trim` from `tzero_trim_temp` group by `tzero_trim_temp`.`transfer_metrc_id`) `trim` on((`h`.`processing_metrc_id` = convert(`trim`.`transfer_metrc_id` using utf8mb4)))) left join (select `tzero_waste_temp`.`transfer_metrc_id` AS `transfer_metrc_id`,sum(`tzero_waste_temp`.`weight`) AS `tzero_waste` from `tzero_waste_temp` group by `tzero_waste_temp`.`transfer_metrc_id`) `ws` on((`h`.`processing_metrc_id` = convert(`ws`.`transfer_metrc_id` using utf8mb4)))) left join (select `tzero_batch_temp`.`transfer_metrc_id` AS `transfer_metrc_id`,max(`tzero_batch_temp`.`batch_finish_timestamp`) AS `tzero_finish_time` from `tzero_batch_temp` group by `tzero_batch_temp`.`transfer_metrc_id`) `tzb` on((`h`.`processing_metrc_id` = convert(`tzb`.`transfer_metrc_id` using utf8mb4)))) left join (select `tzero_shake_temp`.`transfer_metrc_id` AS `transfer_metrc_id`,sum(`tzero_shake_temp`.`weight`) AS `tzero_shake` from `tzero_shake_temp` group by `tzero_shake_temp`.`transfer_metrc_id`) `ss` on((`h`.`processing_metrc_id` = convert(`ss`.`transfer_metrc_id` using utf8mb4)))) left join (select `tzero_mold_temp`.`transfer_metrc_id` AS `transfer_metrc_id`,sum(if(((`tzero_mold_temp`.`clasification` = 'B') and (`tzero_mold_temp`.`grade` = 'C')),`tzero_mold_temp`.`weight`,0)) AS `c_from_b`,sum(if(((`tzero_mold_temp`.`clasification` = 'C') and (`tzero_mold_temp`.`grade` = 'C')),`tzero_mold_temp`.`weight`,0)) AS `c_from_c`,max(`tzero_mold_temp`.`clasification`) AS `clasification`,max(`tzero_mold_temp`.`grade`) AS `grade` from `tzero_mold_temp` group by `tzero_mold_temp`.`transfer_metrc_id`) `ml` on((`h`.`processing_metrc_id` = convert(`ml`.`transfer_metrc_id` using utf8mb4)))) group by `h`.`processing_metrc_id`;

-- View: harvest_base_processing_sorter
CREATE ALGORITHM=UNDEFINED DEFINER=`marc`@`%` SQL SECURITY DEFINER VIEW `harvest_base_processing_sorter` AS select `h`.`processing_metrc_id` AS `processing_metrc_id`,max(`h`.`harvest_id`) AS `harvest_id`,max(`h`.`harvest_base_name`) AS `harvest_base_name`,max(`h`.`crop_name`) AS `crop_name`,max(`h`.`property_id`) AS `property_id`,max(`h`.`date`) AS `harvest_date`,max(`h`.`week_num`) AS `harvest_week`,max(`h`.`year_num`) AS `harvest_year`,max(`h`.`harvest_year_week`) AS `harvest_year_week`,max(`h`.`license_id`) AS `license_id`,max(`h`.`strain_id`) AS `strain_id`,max(`h`.`test_id`) AS `test_id`,max(`h`.`harvest_type`) AS `harvest_type`,max(`h`.`harvest_status`) AS `harvest_status`,`sub`.`planted_count` AS `planted_count`,ifnull(`sub`.`sum_plant_count_harvested`,0) AS `harvested_count`,`sub`.`wet_weight` AS `wet_weight`,ifnull(`sub`.`wet_waste_weight`,0) AS `wet_waste_weight`,ifnull(max(`db`.`total_weight`),0) AS `dry_weight`,ifnull(max(`bw`.`bucked_weight`),0) AS `bucked_weight`,(case when (max(`tzb`.`tzero_finish_time`) is not null) then 'Completed' when (max(`tzb`.`tzero_finish_time`) is null) then (case when `h`.`processing_metrc_id` not in (select distinct `tzero_batch_temp`.`transfer_metrc_id` from `tzero_batch_temp`) then 'In Queue' else 'In Progress' end) else '-' end) AS `tzero_status`,(((max(ifnull(`fl`.`tzero_a`,0)) + max(ifnull(`re`.`retrim_a`,0))) + max(ifnull(`fl`.`a_from_b`,0))) + max(ifnull(`fl`.`a_from_c`,0))) AS `tzero_a`,max((ifnull(`fl`.`b_from_b`,0) + ifnull(`fl`.`b_from_c`,0))) AS `tzero_b`,max((ifnull(`ml`.`c_from_b`,0) + ifnull(`ml`.`c_from_c`,0))) AS `tzero_c`,(((((max(ifnull(`fl`.`tzero_a`,0)) + max(ifnull(`re`.`retrim_a`,0))) + max(ifnull(`fl`.`a_from_b`,0))) + max(ifnull(`fl`.`a_from_c`,0))) + ifnull(max((`fl`.`b_from_b` + `fl`.`b_from_c`)),0)) + ifnull(max((`ml`.`c_from_b` + `ml`.`c_from_c`)),0)) AS `tzero_abc`,ifnull(max(`trim`.`tzero_trim`),0) AS `tzero_trim`,ifnull(max(`ss`.`tzero_shake`),0) AS `tzero_shake`,ifnull(max(`ws`.`tzero_waste`),0) AS `tzero_waste`,(case when (max(`sor`.`record_count`) is null) then 'In Queue' when (max(`sor`.`record_count`) = max(`sor`.`finished_count`)) then 'Completed' else 'In Progress' end) AS `sorter_status`,max(`sor`.`input_weight`) AS `sorter_input`,max(`sor`.`unsorted`) AS `unsorted`,max(`sor`.`sorter_bigs`) AS `sorter_bigs`,max(`sor`.`sorter_mediums`) AS `sorter_mediums`,max(`sor`.`sorter_smalls`) AS `sorter_smalls`,max(`sor`.`sorter_micro_smalls`) AS `sorter_micro_smalls`,max(`sor`.`sorter_mold`) AS `sorter_mold`,max(`sor`.`sorter_kief`) AS `sorter_kief`,max(`sor`.`sorter_trim`) AS `sorter_trim`,max(`sor`.`sorter_shake`) AS `sorter_shake`,max(`sor`.`sorter_waste`) AS `sorter_waste` from (((((((((((`harvest_base_view` `h` join (select `harvest_base_view`.`processing_metrc_id` AS `processing_metrc_id`,sum(`harvest_base_view`.`harvested_count`) AS `sum_plant_count_harvested`,sum(`harvest_base_view`.`wet_weight`) AS `wet_weight`,sum(`harvest_base_view`.`wet_waste_weight`) AS `wet_waste_weight`,max(`harvest_base_view`.`harvest_base_name`) AS `harvest_base_name`,sum(`harvest_base_view`.`planted_count`) AS `planted_count`,max(`harvest_base_view`.`harvest_status`) AS `harvest_status`,max(`harvest_base_view`.`crop_name`) AS `crop_name`,max(`harvest_base_view`.`harvest_type`) AS `harvest_type` from `harvest_base_view` group by `harvest_base_view`.`processing_metrc_id`) `sub` on((`h`.`processing_metrc_id` = `sub`.`processing_metrc_id`))) left join (select `dry_plant_batches_temp`.`harvest_metrc_id` AS `harvest_metrc_id`,sum(`dry_plant_batches_temp`.`total_weight`) AS `total_weight` from `dry_plant_batches_temp` group by `dry_plant_batches_temp`.`harvest_metrc_id`) `db` on((`h`.`processing_metrc_id` = `db`.`harvest_metrc_id`))) left join (select `bucked_batches_temp`.`harvest_metrc_id` AS `harvest_metrc_id`,sum(`bucked_batches_temp`.`total_weight`) AS `bucked_weight` from `bucked_batches_temp` group by `bucked_batches_temp`.`harvest_metrc_id`) `bw` on((`h`.`processing_metrc_id` = `bw`.`harvest_metrc_id`))) left join (select `tzero_flower_temp`.`transfer_metrc_id` AS `transfer_metrc_id`,sum(`tzero_flower_temp`.`weight`) AS `tzero_flower`,sum(if(((`tzero_flower_temp`.`clasification` = 'Flower') and (`tzero_flower_temp`.`grade` = 'A')),`tzero_flower_temp`.`weight`,0)) AS `tzero_a`,sum(if(((`tzero_flower_temp`.`clasification` = 'B') and (`tzero_flower_temp`.`grade` = 'A')),`tzero_flower_temp`.`weight`,0)) AS `a_from_b`,sum(if(((`tzero_flower_temp`.`clasification` = 'C') and (`tzero_flower_temp`.`grade` = 'A')),`tzero_flower_temp`.`weight`,0)) AS `a_from_c`,sum(if(((`tzero_flower_temp`.`clasification` = 'B') and (`tzero_flower_temp`.`grade` = 'B')),`tzero_flower_temp`.`weight`,0)) AS `b_from_b`,sum(if(((`tzero_flower_temp`.`clasification` = 'C') and (`tzero_flower_temp`.`grade` = 'B')),`tzero_flower_temp`.`weight`,0)) AS `b_from_c`,max(`tzero_flower_temp`.`clasification`) AS `clasification`,max(`tzero_flower_temp`.`grade`) AS `grade` from `tzero_flower_temp` group by `tzero_flower_temp`.`transfer_metrc_id`) `fl` on((`h`.`processing_metrc_id` = `fl`.`transfer_metrc_id`))) left join (select `tzero_trim_temp`.`transfer_metrc_id` AS `transfer_metrc_id`,sum(`tzero_trim_temp`.`weight`) AS `tzero_trim` from `tzero_trim_temp` group by `tzero_trim_temp`.`transfer_metrc_id`) `trim` on((`h`.`processing_metrc_id` = `trim`.`transfer_metrc_id`))) left join (select `tzero_waste_temp`.`transfer_metrc_id` AS `transfer_metrc_id`,sum(`tzero_waste_temp`.`weight`) AS `tzero_waste` from `tzero_waste_temp` group by `tzero_waste_temp`.`transfer_metrc_id`) `ws` on((`h`.`processing_metrc_id` = `ws`.`transfer_metrc_id`))) left join (select `tzero_batch_temp`.`transfer_metrc_id` AS `transfer_metrc_id`,max(`tzero_batch_temp`.`batch_finish_timestamp`) AS `tzero_finish_time` from `tzero_batch_temp` group by `tzero_batch_temp`.`transfer_metrc_id`) `tzb` on((`h`.`processing_metrc_id` = `tzb`.`transfer_metrc_id`))) left join (select `tzero_shake_temp`.`transfer_metrc_id` AS `transfer_metrc_id`,sum(`tzero_shake_temp`.`weight`) AS `tzero_shake` from `tzero_shake_temp` group by `tzero_shake_temp`.`transfer_metrc_id`) `ss` on((`h`.`processing_metrc_id` = `ss`.`transfer_metrc_id`))) left join (select `tzero_mold_temp`.`transfer_metrc_id` AS `transfer_metrc_id`,sum(if(((`tzero_mold_temp`.`clasification` = 'B') and (`tzero_mold_temp`.`grade` = 'C')),`tzero_mold_temp`.`weight`,0)) AS `c_from_b`,sum(if(((`tzero_mold_temp`.`clasification` = 'C') and (`tzero_mold_temp`.`grade` = 'C')),`tzero_mold_temp`.`weight`,0)) AS `c_from_c`,max(`tzero_mold_temp`.`clasification`) AS `clasification`,max(`tzero_mold_temp`.`grade`) AS `grade` from `tzero_mold_temp` group by `tzero_mold_temp`.`transfer_metrc_id`) `ml` on((`h`.`processing_metrc_id` = `ml`.`transfer_metrc_id`))) left join (select `sorter_batch_temp`.`transfer_metrc_id` AS `transfer_metrc_id`,sum(`sorter_batch_temp`.`regs`) AS `unsorted`,sum(`sorter_batch_temp`.`input_weight`) AS `input_weight`,sum(`sorter_batch_temp`.`bigs`) AS `sorter_bigs`,sum(`sorter_batch_temp`.`mediums`) AS `sorter_mediums`,sum(`sorter_batch_temp`.`smalls`) AS `sorter_smalls`,sum(`sorter_batch_temp`.`micro_smalls`) AS `sorter_micro_smalls`,sum(`sorter_batch_temp`.`mold`) AS `sorter_mold`,sum(`sorter_batch_temp`.`kief`) AS `sorter_kief`,sum(`sorter_batch_temp`.`shake`) AS `sorter_shake`,sum(`sorter_batch_temp`.`trim`) AS `sorter_trim`,sum(`sorter_batch_temp`.`waste`) AS `sorter_waste`,max(`sorter_batch_temp`.`finished_time`) AS `sorter_finished_time`,sum(if((`sorter_batch_temp`.`finished_time` is null),0,1)) AS `finished_count`,count(0) AS `record_count` from `sorter_batch_temp` group by `sorter_batch_temp`.`transfer_metrc_id`) `sor` on((`h`.`processing_metrc_id` = `sor`.`transfer_metrc_id`))) left join (select `tzero_retrim_temp`.`transfer_metrc_id` AS `transfer_metrc_id`,sum(if((`tzero_retrim_temp`.`grade` = 'A'),`tzero_retrim_temp`.`weight`,0)) AS `retrim_a`,sum(if((`tzero_retrim_temp`.`grade` = 'B'),`tzero_retrim_temp`.`weight`,0)) AS `retrim_b`,max(`tzero_retrim_temp`.`grade`) AS `grade` from `tzero_retrim_temp` group by `tzero_retrim_temp`.`transfer_metrc_id`) `re` on((`h`.`processing_metrc_id` = `re`.`transfer_metrc_id`))) group by `h`.`processing_metrc_id`;

-- View: harvest_base_view
CREATE ALGORITHM=UNDEFINED DEFINER=`marc`@`%` SQL SECURITY DEFINER VIEW `harvest_base_view` AS with `h2` as (select `cultivation`.`harvesting`.`flowering_id` AS `flowering_id`,`cultivation`.`harvesting`.`property_id` AS `property_id`,`cultivation`.`harvesting`.`week_num` AS `week_num`,`cultivation`.`harvesting`.`year_num` AS `year_num`,`cultivation`.`harvesting`.`license_id` AS `license_id`,`cultivation`.`harvesting`.`strain_id` AS `strain_id`,`cultivation`.`harvesting`.`harvest_type` AS `harvest_type`,`cultivation`.`harvesting`.`plant_count_harvested` AS `plant_count_harvested`,row_number() OVER (PARTITION BY `cultivation`.`harvesting`.`flowering_id` ORDER BY (case when (`cultivation`.`harvesting`.`harvest_type` = 'full') then 0 when (`cultivation`.`harvesting`.`harvest_type` = 'partial') then 1 else 2 end),`cultivation`.`harvesting`.`plant_count_harvested` )  AS `rn` from `cultivation`.`harvesting`) select `f`.`id` AS `flowering_id`,`cr`.`label` AS `crop_name`,`h`.`harvest_id` AS `harvest_id`,concat(`h2`.`property_id`,'-',right(concat('0',`h2`.`week_num`),2),'-',`h2`.`year_num`,'-',`h2`.`strain_id`,'-',right(`h2`.`license_id`,5)) AS `harvest_base_name`,`h`.`strain_id` AS `strain_id`,`h`.`property_id` AS `property_id`,`h`.`year_num` AS `year_num`,`h`.`week_num` AS `week_num`,concat(`h`.`year_num`,right(concat('0',`h`.`week_num`),2)) AS `harvest_year_week`,`h`.`date` AS `date`,`h`.`license_id` AS `license_id`,`h`.`test_id` AS `test_id`,`h`.`harvest_type` AS `harvest_type`,(case when ((`h`.`plant_count_harvested` is not null) and (`h`.`date` <= curdate())) then 'Completed' when ((`h`.`plant_count_harvested` is null) and (`h`.`date` <= curdate())) then 'In Progress' when (`h`.`date` > curdate()) then 'In Queue' else '-' end) AS `harvest_status`,`h`.`processing_metrc_id` AS `processing_metrc_id`,`f`.`plant_count` AS `planted_count`,`h`.`plant_count_harvested` AS `harvested_count`,`h`.`wet` AS `wet_weight`,`h`.`waste` AS `wet_waste_weight` from (((`cultivation`.`harvesting` `h` join `cultivation`.`flowering` `f` on((`h`.`flowering_id` = `f`.`id`))) left join `cultivation`.`crop` `cr` on((`h`.`crop_id` = `cr`.`id`))) left join `h2` on(((`h`.`flowering_id` = `h2`.`flowering_id`) and (`h2`.`rn` = 1)))) where ((((`h`.`action` <> 'Deleted') and (`h`.`action` <> 'Duplicated')) or (`h`.`action` is null)) and (`h`.`year_num` > 2020));

-- View: harvest_yield_view
CREATE ALGORITHM=UNDEFINED DEFINER=`lizeth`@`%` SQL SECURITY DEFINER VIEW `harvest_yield_view` AS select `f`.`id` AS `id`,`f`.`veg_id` AS `veg_id`,`f`.`canopy_id` AS `canopy_id`,`f`.`test_id` AS `test_id`,`f`.`flowering_id` AS `flowering_id`,`f`.`property_id` AS `property_id`,`f`.`date` AS `date`,`f`.`week_num` AS `week_num`,`f`.`year_num` AS `year_num`,concat(`f`.`year_num`,right(concat('0',`f`.`week_num`),2)) AS `year_week`,`f`.`license_id` AS `license_id`,`f`.`strain_id` AS `strain_id`,`f`.`location_3` AS `location_3`,`f`.`location_5` AS `location_5`,coalesce(`h`.`plant_count_harvested`,`f`.`plant_count`) AS `plant_count`,`f`.`note` AS `note`,`f`.`harvest_date` AS `harvest_date`,`f`.`harvest_id` AS `harvest_id`,`f`.`status` AS `status`,`f`.`action` AS `action`,`f`.`created_on` AS `created_on`,`f`.`created_by` AS `created_by`,`f`.`modified_on` AS `modified_on`,`f`.`modified_by` AS `modified_by`,`c`.`name` AS `name`,`c`.`capacity` AS `capacity`,`c`.`m2` AS `m2`,`c`.`metrc_initial` AS `metrc_initial`,`c`.`location_string` AS `location_string`,`hwy`.`bucked_coefficient` AS `bucked_coefficient`,`hwy`.`flower_coefficient` AS `flower_coefficient`,`hwy`.`trim_coefficient` AS `trim_coefficient`,week(`f`.`harvest_date`,3) AS `harvest_date_week`,week((`f`.`date` + interval if((`f`.`property_id` = 'EB'),52,56) day),3) AS `future_week`,if((`f`.`harvest_date` is null),year((`f`.`date` + interval if((`f`.`property_id` = 'EB'),52,56) day)),year(`f`.`harvest_date`)) AS `harvest_year`,round(((`f`.`plant_count` * `c`.`m2`) / `c`.`capacity`),2) AS `harvest_estimated_m2`,round((((`f`.`plant_count` * `c`.`m2`) / `c`.`capacity`) * `hwy`.`flower_coefficient`),2) AS `harvest_estimated_oz` from (((`cultivation`.`flowering` `f` left join `pacstone`.`canopy` `c` on((convert(`c`.`id` using utf8mb4) = `f`.`canopy_id`))) left join `pacstone`.`harvest_week_yield` `hwy` on((`hwy`.`harvest_week` = week(coalesce(`f`.`harvest_date`,(`f`.`date` + interval if((`f`.`property_id` = 'EB'),52,56) day)),3)))) left join `cultivation`.`harvesting` `h` on((`h`.`flowering_id` = `f`.`id`))) where ((if((`f`.`harvest_date` is null),year((`f`.`date` + interval if((`f`.`property_id` = 'EB'),52,56) day)),year(`f`.`harvest_date`)) > 2019) and (`h`.`action` <> 'Deleted') and (`f`.`action` <> 'Deleted') and (`f`.`action` <> 'Duplicated') and (coalesce(`h`.`plant_count_harvested`,`f`.`plant_count`) <> 0));

-- View: irrigation
CREATE ALGORITHM=UNDEFINED DEFINER=`marc`@`%` SQL SECURITY DEFINER VIEW `irrigation` AS select `testing_irrigation`.`irrigation_data`.`id` AS `id`,`testing_irrigation`.`irrigation_data`.`time_stamp` AS `TimeStamp`,`testing_irrigation`.`irrigation_data`.`account` AS `Account`,`testing_irrigation`.`irrigation_data`.`user_id` AS `User`,`testing_irrigation`.`irrigation_data`.`date` AS `Date`,`testing_irrigation`.`irrigation_data`.`week_num` AS `Week`,`testing_irrigation`.`irrigation_data`.`property_id` AS `Property`,`testing_irrigation`.`irrigation_data`.`location_id` AS `location_id`,`l`.`location_string` AS `Location`,`testing_irrigation`.`irrigation_data`.`location_scan` AS `LocationScan`,`testing_irrigation`.`irrigation_data`.`location_type` AS `location_type`,`lt`.`type` AS `Location Type`,`testing_irrigation`.`irrigation_data`.`location_level2` AS `Greenhouse`,`testing_irrigation`.`irrigation_data`.`location_level3` AS `location_level3`,`testing_irrigation`.`irrigation_data`.`location_level4` AS `location_level4`,`testing_irrigation`.`irrigation_data`.`location_level5` AS `location_level5`,`testing_irrigation`.`irrigation_data`.`location_level6` AS `location_level6`,`testing_irrigation`.`irrigation_data`.`location_level7` AS `location_level7`,`testing_irrigation`.`irrigation_data`.`ec_dripper` AS `EC_Dripper`,`testing_irrigation`.`irrigation_data`.`ec_drain` AS `EC_Drain`,`testing_irrigation`.`irrigation_data`.`ph_dripper` AS `pH_Dripper`,`testing_irrigation`.`irrigation_data`.`ph_drain` AS `pH_Drain`,`testing_irrigation`.`irrigation_data`.`volume_irrigation` AS `DripVol`,`testing_irrigation`.`irrigation_data`.`volume_drainage` AS `DrainVol`,`testing_irrigation`.`irrigation_data`.`percent_drainage` AS `Overdrain`,`testing_irrigation`.`irrigation_data`.`qty_drip_plant` AS `QtyDripPerPlant`,`testing_irrigation`.`irrigation_data`.`qty_plant_drain` AS `QtyPlantPerDrain`,`testing_irrigation`.`irrigation_data`.`notes` AS `notes`,`testing_irrigation`.`irrigation_data`.`field_2` AS `Strain` from ((`testing_irrigation`.`irrigation_data` join `pacstone`.`location` `l` on((`l`.`id` = convert(`testing_irrigation`.`irrigation_data`.`location_id` using utf8mb4)))) join `pacstone`.`location_type` `lt` on((`lt`.`id` = convert(`testing_irrigation`.`irrigation_data`.`location_type` using utf8mb4))));

-- View: meadow_inventory
CREATE ALGORITHM=UNDEFINED DEFINER=`lizeth`@`%` SQL SECURITY DEFINER VIEW `meadow_inventory` AS select `pi`.`id` AS `id`,`pi`.`parent_id` AS `parent_id`,`pi`.`date` AS `date`,`pi`.`metrc_id` AS `metrc_id`,`pi`.`process` AS `process`,`pi`.`harvest_id` AS `harvest_id`,`pi`.`harvest_property` AS `harvest_property`,`pi`.`harvest_date` AS `harvest_date`,`pi`.`harvest_week` AS `harvest_week`,`pi`.`harvest_year` AS `harvest_year`,`pi`.`strain` AS `strain`,`pi`.`strain_type` AS `strain_type`,`pi`.`license` AS `license`,`pi`.`brand` AS `brand`,`pi`.`category` AS `category`,`pi`.`type` AS `type`,`pi`.`size` AS `size`,`pi`.`package_size` AS `package_size`,`pi`.`package_units` AS `package_units`,`pi`.`quantity` AS `quantity`,`pi`.`grade` AS `grade`,`pi`.`color` AS `color`,`pi`.`thc` AS `thc`,`pi`.`weight` AS `weight`,`pi`.`uom` AS `uom`,`pi`.`location_id` AS `location_id`,`pi`.`property` AS `property`,`pi`.`room` AS `room`,`pi`.`room_area` AS `room_area`,`pi`.`room_change_reason` AS `room_change_reason`,`pi`.`status` AS `status`,`pi`.`process_status` AS `process_status`,`pi`.`created_on` AS `created_on`,`pi`.`created_by` AS `created_by`,`pi`.`modify_on` AS `modify_on`,`pi`.`modify_by` AS `modify_by`,`pi`.`note` AS `note`,`pi`.`flag` AS `flag`,`pi`.`trigger` AS `trigger`,`pi`.`source_id` AS `source_id`,`pi`.`source_ids` AS `source_ids`,`pi`.`modified_type` AS `modified_type`,`pi`.`server_ts` AS `server_ts`,`pi`.`production_batch` AS `production_batch`,`pi`.`case_id` AS `case_id`,`pi`.`lucid_id` AS `lucid_id`,`pi`.`package_id` AS `package_id`,`pi`.`packed_date` AS `packed_date`,`pi`.`source_metrc_id` AS `source_metrc_id`,`pi`.`source_batch_id` AS `source_batch_id`,`pi`.`external_batch_id` AS `external_batch_id`,`pi`.`thc_coa` AS `thc_coa`,`pi`.`packing_stage` AS `packing_stage`,`pi`.`metrc_location` AS `metrc_location`,`pi`.`old_room` AS `old_room` from `packing`.`product_inventory` `pi` where ((`pi`.`room` = '928201') and (`pi`.`status` = 'Active') and (`pi`.`property` = 'SP'));

-- View: old_processing_testview
CREATE ALGORITHM=UNDEFINED DEFINER=`marc`@`%` SQL SECURITY DEFINER VIEW `old_processing_testview` AS select `h`.`harvest_id` AS `harvest_id`,`h`.`processing_metrc_id` AS `processing_metrc_id`,`b`.`plant_count` AS `plant_count`,`b`.`wet_weight` AS `wet_weight` from (`cultivation`.`harvesting` `h` join (select sum(`hh`.`plant_count_harvested`) AS `plant_count`,sum(`hh`.`wet`) AS `wet_weight`,`hh`.`harvest_id` AS `bhid`,`hh`.`processing_metrc_id` AS `bpmid` from `cultivation`.`harvesting` `hh` group by `hh`.`harvest_id`,`hh`.`processing_metrc_id`) `b` on(((`b`.`bhid` = `h`.`harvest_id`) and (`b`.`bpmid` = `h`.`processing_metrc_id`)))) group by `h`.`harvest_id`,`h`.`processing_metrc_id`;

-- View: packing_active_inv_jsonArray
CREATE ALGORITHM=UNDEFINED DEFINER=`marc`@`%` SQL SECURITY DEFINER VIEW `packing_active_inv_jsonArray` AS select json_array('id','harvest_date','metrc_id','harvest_id','harvest_property','harvest_week','harvest_year','packed_date','strain','strain_type','license','brand','category','grade','type','package_size','size','quantity','thc','weight','property','room','room_area','status','note','thc_coa','process','process_status','sku_id','sku_name','kss_id','sku','production_batch','test_result_date') AS `Name_exp_1` union select json_array(`paiv`.`id`,`paiv`.`harvest_date`,`paiv`.`metrc_id`,`paiv`.`harvest_id`,`paiv`.`harvest_property`,`paiv`.`harvest_week`,`paiv`.`harvest_year`,`paiv`.`packed_date`,`paiv`.`strain`,`paiv`.`strain_type`,`paiv`.`license`,`paiv`.`brand`,`paiv`.`category`,`paiv`.`grade`,`paiv`.`type`,`paiv`.`package_size`,`paiv`.`size`,`paiv`.`quantity`,`paiv`.`thc`,`paiv`.`weight`,`paiv`.`property`,`paiv`.`room`,`paiv`.`room_area`,`paiv`.`status`,`paiv`.`note`,`paiv`.`thc_coa`,`paiv`.`process`,`paiv`.`process_status`,`paiv`.`sku_id`,`paiv`.`sku_name`,`paiv`.`kss_id`,`paiv`.`sku`,`paiv`.`production_batch`,`paiv`.`test_result_date`) AS `Name_exp_2` from `packing_active_inventory_view` `paiv`;

-- View: packing_active_inventory_view
CREATE ALGORITHM=UNDEFINED DEFINER=`root`@`%` SQL SECURITY DEFINER VIEW `packing_active_inventory_view` AS select `pi`.`id` AS `id`,`pi`.`harvest_date` AS `harvest_date`,`pi`.`metrc_id` AS `metrc_id`,`pi`.`harvest_id` AS `harvest_id`,`pi`.`harvest_property` AS `harvest_property`,`pi`.`harvest_week` AS `harvest_week`,`pi`.`harvest_year` AS `harvest_year`,`pi`.`packed_date` AS `packed_date`,`pi`.`strain` AS `strain`,`pi`.`strain_type` AS `strain_type`,`pi`.`license` AS `license`,`pi`.`brand` AS `brand`,`pi`.`category` AS `category`,`pi`.`grade` AS `grade`,`pi`.`type` AS `type`,`pi`.`package_size` AS `package_size`,`pi`.`size` AS `size`,`pi`.`quantity` AS `quantity`,`pi`.`thc` AS `thc`,`pi`.`weight` AS `weight`,`pi`.`property` AS `property`,if((`pi`.`property` = 'SP'),`ml`.`Name`,`pi`.`room`) AS `room`,`pi`.`room_area` AS `room_area`,`pi`.`status` AS `status`,`pi`.`note` AS `note`,`pi`.`thc_coa` AS `thc_coa`,`pi`.`process` AS `process`,`pi`.`process_status` AS `process_status`,`pi`.`sku_id` AS `sku_id`,`sku`.`name` AS `sku_name`,`sku`.`kss_id` AS `kss_id`,`sku`.`sku` AS `sku`,`pi`.`production_batch` AS `production_batch`,(case when (`pi`.`property` = 'SP') then (select max(`cte`.`test_result_date`) from `lab_testing`.`sample_latest_coa` `cte` where (`cte`.`source_batch_id` = `pi`.`source_batch_id`)) when (`pi`.`property` = 'CS') then (select max(`cte`.`test_result_date`) from `lab_testing`.`sample_latest_coa` `cte` where (`cte`.`parent_id` = `pi`.`parent_id`)) else NULL end) AS `test_result_date` from ((`packing`.`product_inventory` `pi` left join `product_sku`.`sku_view` `sku` on((`sku`.`id` = `pi`.`sku_id`))) left join `metrc`.`locations` `ml` on((`ml`.`Id` = `pi`.`room`))) where (`pi`.`status` = 'Active');

-- View: packing_view
CREATE ALGORITHM=UNDEFINED DEFINER=`lizeth`@`%` SQL SECURITY DEFINER VIEW `packing_view` AS select `packing`.`id` AS `id`,`packing`.`delivered_date` AS `Delivered date`,`packing`.`transfer_metrc_id` AS `Transfer Metrc ID`,`packing`.`harvest_id` AS `Harvest ID`,`packing`.`property` AS `Property`,`packing`.`harvest_week` AS `Harvest week`,`packing`.`harvest_year` AS `Harvest year`,`packing`.`strain` AS `Strain`,`packing`.`license_number` AS `License`,`packing`.`batch_type` AS `Batch type`,`packing`.`delivered_weight` AS `Delivered`,`packing`.`received_weight` AS `Received`,`packing`.`delivered_bins` AS `Delivered bins`,`packing`.`received_bins` AS `Received bins`,`packing`.`quality_flower` AS `Quality Flower`,`packing`.`quality_trim` AS `Quality Trim`,`packing`.`quality_mold` AS `Quality Mold`,`packing`.`all_correct` AS `All correct`,`packing`.`field_1` AS `Harvest date`,`packing`.`field_2` AS `Waste metrc`,`packing`.`field_3` AS `Status`,`packing`.`field_4` AS `Product`,`packing`.`year_week` AS `Year-Week`,`packing`.`processing_flower` AS `Processed`,`packing`.`transfer_shrink_percent` AS `Transfer Shrink %`,`packing`.`sorter_regs` AS `Sorter - Regs`,`packing`.`sorter_bigs` AS `Sorter - Bigs`,`packing`.`sorter_smalls` AS `Sorter - Smalls`,`packing`.`sorter_shake` AS `Sorter - Shake`,`packing`.`sorter_trim` AS `Sorter - Trim`,`packing`.`sorter_waste` AS `Sorter - Waste`,`packing`.`sorter_kief` AS `Sorter - Kief`,`packing`.`sorter_total` AS `Total sorted`,`packing`.`sorter_moisture_loss_percent` AS `Sorter Moisture Loss %`,`packing`.`to_pack_flower` AS `To Flower Packing`,`packing`.`to_pack_prerroll` AS `To Pre-roll Packing`,`packing`.`in_queue` AS `Flower TBD`,`packing`.`sorter_flower` AS `Sorter - Flower`,`packing`.`sorter_byproducts` AS `Sorter - Byproducts`,`packing`.`plant_count` AS `Plant count`,`packing`.`flower_produced` AS `Produced Flower`,`packing`.`preroll_produced` AS `Produced Pre-roll`,`packing`.`sorter_regs_percent` AS `Sorter  - Regs %`,`packing`.`sorter_bigs_percent` AS `Sorter - Bigs %`,`packing`.`sorter_smalls_percent` AS `Sorter - Smalls %`,`packing`.`sorter_shake_percent` AS `Sorter - Shake %`,`packing`.`sorter_trim_percent` AS `Sorter - Trim %`,`packing`.`sorter_kief_percent` AS `Sorter - Kief %`,`packing`.`sorter_waste_percent` AS `Sorter - Waste %`,`packing`.`sorter_mold` AS `Sorter - Mold`,`packing`.`sorter_mold_percent` AS `Sorter - Mold %`,`packing`.`sorter_flower_percent` AS `Sorter - Flower %`,`packing`.`sorter_byproducts_percent` AS `Sorter - Byproducts %`,`packing`.`flower_packing_shrink` AS `Flower produced shrink %`,`packing`.`preroll_packing_shrink` AS `Pre-roll produced shrink %`,`packing`.`to_wholesale_flower` AS `To Wholesale`,`packing`.`in_storage` AS `In Storage`,`packing`.`produced_shrink` AS `Produced shrink %`,`packing`.`byproducts_packing` AS `Packing - Byproducts`,`packing`.`produced_total` AS `Total produced`,`packing`.`sorter_oz_plant` AS `Sorter - oz/plant`,`packing`.`packing_oz_plant` AS `Packing - oz/plant`,`packing`.`qty_sorter_batches` AS `Sorter - Qty batches`,`packing`.`qty_packed_batches` AS `Packed - Qty batches`,`packing`.`qty_sold_batches` AS `Sold - Qty batches`,`packing`.`waste_packing` AS `Packing - Waste`,`packing`.`shake_packing` AS `Packing - Shake`,`packing`.`mold_packing` AS `Packing - Mold`,`packing`.`bg_packing` AS `Packing - BG`,`packing`.`flower_packed` AS `Packed Flower`,`packing`.`preroll_packed` AS `Packed Pre-roll`,`packing`.`packed` AS `Total packed` from `packing`;

-- View: process_bucking_details
CREATE ALGORITHM=UNDEFINED DEFINER=`lizeth`@`%` SQL SECURITY DEFINER VIEW `process_bucking_details` AS select `pd`.`processing_metrc_id` AS `processing_metrc_id`,`pd`.`harvest_id` AS `harvest_id`,`pd`.`harvest_base_name` AS `harvest_base_name`,`pd`.`strain_id` AS `strain_id`,`pd`.`strain_name` AS `strain_name`,`pd`.`property_id` AS `property_id`,`pd`.`harvest_date` AS `harvest_date`,`pd`.`harvest_week` AS `harvest_week`,`pd`.`harvest_year` AS `harvest_year`,`pd`.`harvest_year_week` AS `harvest_year_week`,`pd`.`license_id` AS `license_id`,`pd`.`test_id` AS `test_id`,`pd`.`planted_count` AS `planted_count`,`pd`.`harvested_count` AS `harvested_count`,`pd`.`dry_weight` AS `dry_weight`,`pd`.`bucked_weight` AS `bucked_weight`,`pd`.`bucked_waste` AS `bucked_waste`,`pd`.`bucked_waste_pct` AS `bucked_waste_pct`,`pd`.`bucked_weight_oz_plant` AS `bucked_weight_oz_plant`,`pd`.`bucked_weight_oz_plant_h` AS `bucked_weight_oz_plant_h`,`pd`.`buck_loss_pct_deviation` AS `buck_loss_pct_deviation` from `process_details_metrics_MV` `pd`;

-- View: process_details_metrics
CREATE ALGORITHM=UNDEFINED DEFINER=`lizeth`@`%` SQL SECURITY DEFINER VIEW `process_details_metrics` AS select `t`.`processing_metrc_id` AS `processing_metrc_id`,`t`.`harvest_id` AS `harvest_id`,`t`.`harvest_base_name` AS `harvest_base_name`,`t`.`strain_id` AS `strain_id`,`ps`.`name` AS `strain_name`,`t`.`property_id` AS `property_id`,`t`.`harvest_date` AS `harvest_date`,`t`.`harvest_week` AS `harvest_week`,`t`.`harvest_year` AS `harvest_year`,`t`.`harvest_year_week` AS `harvest_year_week`,`t`.`license_id` AS `license_id`,`t`.`test_id` AS `test_id`,`t`.`planted_count` AS `planted_count`,if((`t`.`harvest_type` = 'manicure'),0,(`t`.`planted_count` - `t`.`harvested_count`)) AS `plants_lost`,`t`.`harvested_count` AS `harvested_count`,`t`.`wet_weight` AS `wet_weight`,`t`.`wet_waste_weight` AS `wet_waste_weight`,if((`t`.`wet_weight` = 0),0,(`t`.`wet_waste_weight` / `t`.`wet_weight`)) AS `wet_waste_pct`,if((`t`.`planted_count` = 0),0,((`t`.`wet_weight` / `t`.`planted_count`) * 16)) AS `wet_weight_oz_plant`,if((`t`.`harvested_count` = 0),0,((`t`.`wet_weight` / `t`.`harvested_count`) * 16)) AS `wet_weight_oz_plant_h`,`t`.`dry_weight` AS `dry_weight`,(`t`.`wet_weight` - `t`.`dry_weight`) AS `drying_loss`,if((`t`.`wet_weight` = 0),0,(1 - (`t`.`dry_weight` / `t`.`wet_weight`))) AS `drying_loss_pct`,if((`t`.`planted_count` = 0),0,((`t`.`dry_weight` / `t`.`planted_count`) * 16)) AS `dry_weight_oz_plant`,if((`t`.`harvested_count` = 0),0,((`t`.`dry_weight` / `t`.`harvested_count`) * 16)) AS `dry_weight_oz_plant_h`,`t`.`bucked_weight` AS `bucked_weight`,(`t`.`dry_weight` - `t`.`bucked_weight`) AS `bucked_waste`,if((`t`.`dry_weight` = 0),0,(1 - (`t`.`bucked_weight` / `t`.`dry_weight`))) AS `bucked_waste_pct`,if((`t`.`planted_count` = 0),0,((`t`.`bucked_weight` / `t`.`planted_count`) * 16)) AS `bucked_weight_oz_plant`,if((`t`.`harvested_count` = 0),0,((`t`.`bucked_weight` / `t`.`harvested_count`) * 16)) AS `bucked_weight_oz_plant_h`,`t`.`tzero_a` AS `tzero_a`,`t`.`tzero_b` AS `tzero_b`,(`t`.`tzero_a` + `t`.`tzero_b`) AS `tzero_ab`,if((`t`.`bucked_weight` = 0),0,((`t`.`tzero_a` + `t`.`tzero_b`) / `t`.`bucked_weight`)) AS `tzero_ab_yield_pct`,if((`t`.`planted_count` = 0),0,(((`t`.`tzero_a` + `t`.`tzero_b`) / `t`.`planted_count`) * 16)) AS `tzero_ab_oz_plant`,if((`t`.`harvested_count` = 0),0,(((`t`.`tzero_a` + `t`.`tzero_b`) / `t`.`harvested_count`) * 16)) AS `tzero_ab_oz_plant_h`,`t`.`tzero_c` AS `tzero_c`,((`t`.`tzero_a` + `t`.`tzero_b`) + `t`.`tzero_c`) AS `tzero_abc`,if((`t`.`bucked_weight` = 0),0,(((`t`.`tzero_a` + `t`.`tzero_b`) + `t`.`tzero_c`) / `t`.`bucked_weight`)) AS `tzero_abc_yield_pct`,if((`t`.`planted_count` = 0),0,((((`t`.`tzero_a` + `t`.`tzero_b`) + `t`.`tzero_c`) / `t`.`planted_count`) * 16)) AS `tzero_abc_oz_plant`,if((`t`.`harvested_count` = 0),0,((((`t`.`tzero_a` + `t`.`tzero_b`) + `t`.`tzero_c`) / `t`.`harvested_count`) * 16)) AS `tzero_abc_oz_plant_h`,`t`.`tzero_trim` AS `tzero_trim`,`t`.`tzero_shake` AS `tzero_shake`,((((`t`.`tzero_a` + `t`.`tzero_b`) + `t`.`tzero_c`) + `t`.`tzero_trim`) + `t`.`tzero_shake`) AS `tzero_abc_trim_shake`,`t`.`tzero_waste` AS `tzero_waste`,(((((`t`.`tzero_a` + `t`.`tzero_b`) + `t`.`tzero_c`) + `t`.`tzero_trim`) + `t`.`tzero_shake`) + `t`.`tzero_waste`) AS `tzero_total`,(`t`.`bucked_weight` - (((((`t`.`tzero_a` + `t`.`tzero_b`) + `t`.`tzero_c`) + `t`.`tzero_trim`) + `t`.`tzero_shake`) + `t`.`tzero_waste`)) AS `tzero_misc_loss`,if((`t`.`bucked_weight` = 0),0,((`t`.`bucked_weight` - (((((`t`.`tzero_a` + `t`.`tzero_b`) + `t`.`tzero_c`) + `t`.`tzero_trim`) + `t`.`tzero_shake`) + `t`.`tzero_waste`)) / `t`.`bucked_weight`)) AS `tzero_misc_loss_pct`,(`t`.`bucked_weight` - ((((`t`.`tzero_a` + `t`.`tzero_b`) + `t`.`tzero_c`) + `t`.`tzero_trim`) + `t`.`tzero_shake`)) AS `tzero_total_loss`,if((`t`.`bucked_weight` = 0),0,((`t`.`bucked_weight` - ((((`t`.`tzero_a` + `t`.`tzero_b`) + `t`.`tzero_c`) + `t`.`tzero_trim`) + `t`.`tzero_shake`)) / `t`.`bucked_weight`)) AS `tzero_total_loss_pct`,if((`t`.`planted_count` = 0),0,((`t`.`tzero_trim` / `t`.`planted_count`) * 16)) AS `tzero_trim_oz_plant`,if((`t`.`harvested_count` = 0),0,((`t`.`tzero_trim` / `t`.`harvested_count`) * 16)) AS `tzero_trim_oz_plant_h`,if((`t`.`bucked_weight` = 0),0,(`t`.`tzero_trim` / `t`.`bucked_weight`)) AS `total_batch_trim_pct`,if((`t`.`wet_weight` = 0),0,(1 - (((((`t`.`tzero_a` + `t`.`tzero_b`) + `t`.`tzero_c`) + `t`.`tzero_trim`) + `t`.`tzero_shake`) / `t`.`wet_weight`))) AS `total_batch_weight_loss_pct` from (`harvest_base_processing_sorter` `t` left join `pacstone`.`plant_strain` `ps` on((`ps`.`id` = `t`.`strain_id`))) where (`t`.`harvest_status` = 'Completed');

-- View: process_drying_details
CREATE ALGORITHM=UNDEFINED DEFINER=`lizeth`@`%` SQL SECURITY DEFINER VIEW `process_drying_details` AS select `pd`.`processing_metrc_id` AS `processing_metrc_id`,`pd`.`harvest_id` AS `harvest_id`,`pd`.`harvest_base_name` AS `harvest_base_name`,`pd`.`strain_id` AS `strain_id`,`pd`.`strain_name` AS `strain_name`,`pd`.`property_id` AS `property_id`,`pd`.`harvest_date` AS `harvest_date`,`pd`.`harvest_week` AS `harvest_week`,`pd`.`harvest_year` AS `harvest_year`,`pd`.`harvest_year_week` AS `harvest_year_week`,`pd`.`license_id` AS `license_id`,`pd`.`test_id` AS `test_id`,`pd`.`planted_count` AS `planted_count`,`pd`.`plants_lost` AS `plants_lost`,`pd`.`harvested_count` AS `harvested_count`,`pd`.`wet_weight` AS `wet_weight`,`pd`.`dry_weight` AS `dry_weight`,`pd`.`drying_loss` AS `drying_loss`,`pd`.`drying_loss_pct` AS `drying_loss_pct`,`pd`.`dry_weight_oz_plant` AS `dry_weight_oz_plant`,`pd`.`dry_weight_oz_plant_h` AS `dry_weight_oz_plant_h`,`pd`.`bucked_weight` AS `bucked_weight` from `process_details_metrics_MV` `pd` where (`pd`.`dry_weight` > 0);

-- View: process_harvest_details
CREATE ALGORITHM=UNDEFINED DEFINER=`lizeth`@`%` SQL SECURITY DEFINER VIEW `process_harvest_details` AS select `pd`.`processing_metrc_id` AS `processing_metrc_id`,`pd`.`harvest_id` AS `harvest_id`,`pd`.`harvest_base_name` AS `harvest_base_name`,`pd`.`strain_id` AS `strain_id`,`pd`.`strain_name` AS `strain_name`,`pd`.`property_id` AS `property_id`,`pd`.`harvest_date` AS `harvest_date`,`pd`.`harvest_week` AS `harvest_week`,`pd`.`harvest_year` AS `harvest_year`,`pd`.`harvest_year_week` AS `harvest_year_week`,`pd`.`license_id` AS `license_id`,`pd`.`test_id` AS `test_id`,`pd`.`planted_count` AS `planted_count`,`pd`.`plants_lost` AS `plants_lost`,`pd`.`harvested_count` AS `harvested_count`,`pd`.`wet_weight` AS `wet_weight`,`pd`.`wet_waste_weight` AS `wet_waste_weight`,`pd`.`wet_waste_pct` AS `wet_waste_pct`,`pd`.`wet_weight_oz_plant` AS `wet_weight_oz_plant`,`pd`.`wet_weight_oz_plant_h` AS `wet_weight_oz_plant_h`,`pd`.`dry_weight` AS `dry_weight` from `process_details_metrics_MV` `pd`;

-- View: process_metrics
CREATE ALGORITHM=UNDEFINED DEFINER=`lizeth`@`%` SQL SECURITY DEFINER VIEW `process_metrics` AS select `t`.`harvest_base_name` AS `harvest_base_name`,`t`.`strain_id` AS `strain_id`,`ps`.`name` AS `strain_name`,`t`.`property_id` AS `property_id`,`t`.`harvest_date` AS `harvest_date`,`t`.`harvest_week` AS `harvest_week`,`t`.`harvest_year` AS `harvest_year`,`t`.`harvest_year_week` AS `harvest_year_week`,`t`.`license_id` AS `license_id`,`t`.`planted_count` AS `planted_count`,(`t`.`planted_count` - `t`.`harvested_count`) AS `plants_lost`,`t`.`harvested_count` AS `harvested_count`,`t`.`wet_weight` AS `wet_weight`,`t`.`wet_waste_weight` AS `wet_waste_weight`,if((`t`.`wet_weight` = 0),0,(`t`.`wet_waste_weight` / `t`.`wet_weight`)) AS `wet_waste_pct`,if((`t`.`planted_count` = 0),0,((`t`.`wet_weight` / `t`.`planted_count`) * 16)) AS `wet_weight_oz_plant`,if((`t`.`harvested_count` = 0),0,((`t`.`wet_weight` / `t`.`harvested_count`) * 16)) AS `wet_weight_oz_plant_h`,`t`.`dry_weight` AS `dry_weight`,(`t`.`wet_weight` - `t`.`dry_weight`) AS `drying_loss`,if((`t`.`wet_weight` = 0),0,(1 - (`t`.`dry_weight` / `t`.`wet_weight`))) AS `drying_loss_pct`,if((`t`.`planted_count` = 0),0,((`t`.`dry_weight` / `t`.`planted_count`) * 16)) AS `dry_weight_oz_plant`,if((`t`.`harvested_count` = 0),0,((`t`.`dry_weight` / `t`.`harvested_count`) * 16)) AS `dry_weight_oz_plant_h`,`t`.`bucked_weight` AS `bucked_weight`,(`t`.`dry_weight` - `t`.`bucked_weight`) AS `bucked_waste`,if((`t`.`dry_weight` = 0),0,(1 - (`t`.`bucked_weight` / `t`.`dry_weight`))) AS `bucked_waste_pct`,if((`t`.`planted_count` = 0),0,((`t`.`bucked_weight` / `t`.`planted_count`) * 16)) AS `bucked_weight_oz_plant`,if((`t`.`harvested_count` = 0),0,((`t`.`bucked_weight` / `t`.`harvested_count`) * 16)) AS `bucked_weight_oz_plant_h`,`t`.`tzero_a` AS `tzero_a`,`t`.`tzero_b` AS `tzero_b`,(`t`.`tzero_a` + `t`.`tzero_b`) AS `tzero_ab`,if((`t`.`bucked_weight` = 0),0,((`t`.`tzero_a` + `t`.`tzero_b`) / `t`.`bucked_weight`)) AS `tzero_ab_yield_pct`,if((`t`.`planted_count` = 0),0,(((`t`.`tzero_a` + `t`.`tzero_b`) / `t`.`planted_count`) * 16)) AS `tzero_ab_oz_plant`,if((`t`.`harvested_count` = 0),0,(((`t`.`tzero_a` + `t`.`tzero_b`) / `t`.`harvested_count`) * 16)) AS `tzero_ab_oz_plant_h`,`t`.`tzero_c` AS `tzero_c`,((`t`.`tzero_a` + `t`.`tzero_b`) + `t`.`tzero_c`) AS `tzero_abc`,if((`t`.`bucked_weight` = 0),0,(((`t`.`tzero_a` + `t`.`tzero_b`) + `t`.`tzero_c`) / `t`.`bucked_weight`)) AS `tzero_abc_yield_pct`,if((`t`.`planted_count` = 0),0,((((`t`.`tzero_a` + `t`.`tzero_b`) + `t`.`tzero_c`) / `t`.`planted_count`) * 16)) AS `tzero_abc_oz_plant`,if((`t`.`harvested_count` = 0),0,((((`t`.`tzero_a` + `t`.`tzero_b`) + `t`.`tzero_c`) / `t`.`harvested_count`) * 16)) AS `tzero_abc_oz_plant_h`,`t`.`tzero_trim` AS `tzero_trim`,`t`.`tzero_shake` AS `tzero_shake`,((((`t`.`tzero_a` + `t`.`tzero_b`) + `t`.`tzero_c`) + `t`.`tzero_trim`) + `t`.`tzero_shake`) AS `tzero_abc_trim_shake`,`t`.`tzero_waste` AS `tzero_waste`,(((((`t`.`tzero_a` + `t`.`tzero_b`) + `t`.`tzero_c`) + `t`.`tzero_trim`) + `t`.`tzero_shake`) + `t`.`tzero_waste`) AS `tzero_total`,(`t`.`bucked_weight` - (((((`t`.`tzero_a` + `t`.`tzero_b`) + `t`.`tzero_c`) + `t`.`tzero_trim`) + `t`.`tzero_shake`) + `t`.`tzero_waste`)) AS `tzero_misc_loss`,if((`t`.`bucked_weight` = 0),0,((`t`.`bucked_weight` - (((((`t`.`tzero_a` + `t`.`tzero_b`) + `t`.`tzero_c`) + `t`.`tzero_trim`) + `t`.`tzero_shake`) + `t`.`tzero_waste`)) / `t`.`bucked_weight`)) AS `tzero_misc_loss_pct`,(`t`.`bucked_weight` - ((((`t`.`tzero_a` + `t`.`tzero_b`) + `t`.`tzero_c`) + `t`.`tzero_trim`) + `t`.`tzero_shake`)) AS `tzero_total_loss`,if((`t`.`bucked_weight` = 0),0,((`t`.`bucked_weight` - ((((`t`.`tzero_a` + `t`.`tzero_b`) + `t`.`tzero_c`) + `t`.`tzero_trim`) + `t`.`tzero_shake`)) / `t`.`bucked_weight`)) AS `tzero_total_loss_pct`,if((`t`.`planted_count` = 0),0,((`t`.`tzero_trim` / `t`.`planted_count`) * 16)) AS `tzero_trim_oz_plant`,if((`t`.`harvested_count` = 0),0,((`t`.`tzero_trim` / `t`.`harvested_count`) * 16)) AS `tzero_trim_oz_plant_h`,if((`t`.`bucked_weight` = 0),0,(`t`.`tzero_trim` / `t`.`bucked_weight`)) AS `total_batch_trim_pct`,if((`t`.`wet_weight` = 0),0,(((((`t`.`tzero_a` + `t`.`tzero_b`) + `t`.`tzero_c`) + `t`.`tzero_trim`) + `t`.`tzero_shake`) / `t`.`wet_weight`)) AS `total_batch_weight_loss_pct`,if((`t`.`planted_count` = 0),0,least(4,ceiling((abs((((`t`.`wet_weight` / `t`.`planted_count`) * 16) - (select `crop_metric_threshold`.`m` from `crop_metric_threshold` where (`crop_metric_threshold`.`id` = 'wet_oz')))) / (select `crop_metric_threshold`.`mad` from `crop_metric_threshold` where (`crop_metric_threshold`.`id` = 'wet_oz')))))) AS `wet_oz_deviation`,if((`t`.`planted_count` = 0),0,least(4,ceiling((abs((((`t`.`dry_weight` / `t`.`planted_count`) * 16) - (select `crop_metric_threshold`.`m` from `crop_metric_threshold` where (`crop_metric_threshold`.`id` = 'dry_oz')))) / (select `crop_metric_threshold`.`mad` from `crop_metric_threshold` where (`crop_metric_threshold`.`id` = 'dry_oz')))))) AS `dry_oz_deviation`,if((`t`.`planted_count` = 0),0,least(4,ceiling((abs((((`t`.`bucked_weight` / `t`.`planted_count`) * 16) - (select `crop_metric_threshold`.`m` from `crop_metric_threshold` where (`crop_metric_threshold`.`id` = 'buck_oz')))) / (select `crop_metric_threshold`.`mad` from `crop_metric_threshold` where (`crop_metric_threshold`.`id` = 'buck_oz')))))) AS `buck_oz_deviation`,if((`t`.`planted_count` = 0),0,least(4,ceiling((abs(((((`t`.`tzero_a` + `t`.`tzero_b`) / `t`.`planted_count`) * 16) - (select `crop_metric_threshold`.`m` from `crop_metric_threshold` where (`crop_metric_threshold`.`id` = 'flower_ab_oz')))) / (select `crop_metric_threshold`.`mad` from `crop_metric_threshold` where (`crop_metric_threshold`.`id` = 'flower_ab_oz')))))) AS `flower_ab_oz_deviation`,if((`t`.`planted_count` = 0),0,least(4,ceiling((abs((((((`t`.`tzero_a` + `t`.`tzero_b`) + `t`.`tzero_c`) / `t`.`planted_count`) * 16) - (select `crop_metric_threshold`.`m` from `crop_metric_threshold` where (`crop_metric_threshold`.`id` = 'flower_abc_oz')))) / (select `crop_metric_threshold`.`mad` from `crop_metric_threshold` where (`crop_metric_threshold`.`id` = 'flower_abc_oz')))))) AS `flower_abc_oz_deviation`,if((`t`.`planted_count` = 0),0,least(4,ceiling((abs((((`t`.`tzero_trim` / `t`.`planted_count`) * 16) - (select `crop_metric_threshold`.`m` from `crop_metric_threshold` where (`crop_metric_threshold`.`id` = 'trim_oz')))) / (select `crop_metric_threshold`.`mad` from `crop_metric_threshold` where (`crop_metric_threshold`.`id` = 'trim_oz')))))) AS `trim_oz_deviation`,if((`t`.`wet_weight` = 0),0,least(4,ceiling((abs(((1 - (`t`.`dry_weight` / `t`.`wet_weight`)) - (select `crop_metric_threshold`.`m` from `crop_metric_threshold` where (`crop_metric_threshold`.`id` = 'dry_loss_pct')))) / (select `crop_metric_threshold`.`mad` from `crop_metric_threshold` where (`crop_metric_threshold`.`id` = 'dry_loss_pct')))))) AS `dry_loss_pct_deviation`,if((`t`.`dry_weight` = 0),0,least(4,ceiling((abs(((1 - (`t`.`bucked_weight` / `t`.`dry_weight`)) - (select `crop_metric_threshold`.`m` from `crop_metric_threshold` where (`crop_metric_threshold`.`id` = 'buck_loss_pct')))) / (select `crop_metric_threshold`.`mad` from `crop_metric_threshold` where (`crop_metric_threshold`.`id` = 'buck_loss_pct')))))) AS `buck_loss_pct_deviation`,if((`t`.`bucked_weight` = 0),0,least(4,ceiling((abs((((`t`.`bucked_weight` - ((((`t`.`tzero_a` + `t`.`tzero_b`) + `t`.`tzero_c`) + `t`.`tzero_trim`) + `t`.`tzero_shake`)) / `t`.`bucked_weight`) - (select `crop_metric_threshold`.`m` from `crop_metric_threshold` where (`crop_metric_threshold`.`id` = 'trim_loss_pct')))) / (select `crop_metric_threshold`.`mad` from `crop_metric_threshold` where (`crop_metric_threshold`.`id` = 'trim_loss_pct')))))) AS `trim_loss_pct_deviation` from (`crop_rollup` `t` left join `pacstone`.`plant_strain` `ps` on((`ps`.`id` = `t`.`strain_id`)));

-- View: process_trimming_details
CREATE ALGORITHM=UNDEFINED DEFINER=`lizeth`@`%` SQL SECURITY DEFINER VIEW `process_trimming_details` AS select `pd`.`processing_metrc_id` AS `processing_metrc_id`,`pd`.`harvest_id` AS `harvest_id`,`pd`.`harvest_base_name` AS `harvest_base_name`,`pd`.`strain_id` AS `strain_id`,`pd`.`strain_name` AS `strain_name`,`pd`.`property_id` AS `property_id`,`pd`.`harvest_date` AS `harvest_date`,`pd`.`harvest_week` AS `harvest_week`,`pd`.`harvest_year` AS `harvest_year`,`pd`.`harvest_year_week` AS `harvest_year_week`,`pd`.`license_id` AS `license_id`,`pd`.`test_id` AS `test_id`,`pd`.`planted_count` AS `planted_count`,`pd`.`harvested_count` AS `harvested_count`,`pd`.`bucked_weight` AS `bucked_weight`,`pd`.`tzero_a` AS `tzero_a`,`pd`.`tzero_b` AS `tzero_b`,`pd`.`tzero_ab` AS `tzero_ab`,`pd`.`tzero_ab_yield_pct` AS `tzero_ab_yield_pct`,`pd`.`tzero_ab_oz_plant` AS `tzero_ab_oz_plant`,`pd`.`tzero_ab_oz_plant_h` AS `tzero_ab_oz_plant_h`,`pd`.`tzero_c` AS `tzero_c`,`pd`.`tzero_abc` AS `tzero_abc`,`pd`.`tzero_abc_yield_pct` AS `tzero_abc_yield_pct`,`pd`.`tzero_abc_oz_plant` AS `tzero_abc_oz_plant`,`pd`.`tzero_abc_oz_plant_h` AS `tzero_abc_oz_plant_h`,`pd`.`tzero_trim` AS `tzero_trim`,`pd`.`tzero_shake` AS `tzero_shake`,`pd`.`tzero_abc_trim_shake` AS `tzero_abc_trim_shake`,`pd`.`tzero_waste` AS `tzero_waste`,`pd`.`tzero_total` AS `tzero_total`,`pd`.`tzero_misc_loss` AS `tzero_misc_loss`,`pd`.`tzero_misc_loss_pct` AS `tzero_misc_loss_pct`,`pd`.`tzero_total_loss` AS `tzero_total_loss`,`pd`.`tzero_total_loss_pct` AS `tzero_total_loss_pct`,`pd`.`tzero_trim_oz_plant` AS `tzero_trim_oz_plant`,`pd`.`tzero_trim_oz_plant_h` AS `tzero_trim_oz_plant_h`,`pd`.`total_batch_trim_pct` AS `total_batch_trim_pct`,`pd`.`total_batch_weight_loss_pct` AS `total_batch_weight_loss_pct`,`pd`.`trim_loss_pct_deviation` AS `trim_loss_pct_deviation` from `process_details_metrics_MV` `pd`;

-- View: processing_aggregation_test_v2
CREATE ALGORITHM=UNDEFINED DEFINER=`marc`@`%` SQL SECURITY DEFINER VIEW `processing_aggregation_test_v2` AS select max(`cultivation`.`harvesting`.`harvest_id`) AS `HarvestID`,`cultivation`.`harvesting`.`processing_metrc_id` AS `processing_metrc_id`,sum(`cultivation`.`harvesting`.`wet`) AS `WetWeight`,max(`cultivation`.`harvesting`.`strain_id`) AS `strain`,sum(`cultivation`.`harvesting`.`plant_count_harvested`) AS `plant_count` from `cultivation`.`harvesting` group by `cultivation`.`harvesting`.`harvest_id`,`cultivation`.`harvesting`.`processing_metrc_id`;

-- View: processing_delta_view
CREATE ALGORITHM=UNDEFINED DEFINER=`lizeth`@`%` SQL SECURITY DEFINER VIEW `processing_delta_view` AS select `p`.`strain_id` AS `strain_id`,`p`.`harvest_week` AS `week_num`,`p`.`harvest_year` AS `year_num`,`p`.`year_week` AS `year_week`,`p`.`harvest_date` AS `harvest_date`,`p`.`property` AS `property_id`,`p`.`harvest_id` AS `harvest_id`,`p`.`plant_count` AS `plant_count`,(((((`p`.`big_a_flower_output` + `p`.`reg_a_flower_output`) + `p`.`sml_a_flower_output`) + `p`.`b_flower_output`) + `p`.`retrim_a_output`) + `p`.`retrim_b_output`) AS `tzero_a_b_retrim`,(`p`.`c_flower_output` + `p`.`retrim_c_output`) AS `tzero_c`,`p`.`trim_output` AS `tzero_trim`,`p`.`sugar_shake_output` AS `tzero_shake`,`p`.`total_waste_output` AS `tzero_waste`,((`p`.`input_qty` - `p`.`output_qty`) / `p`.`input_qty`) AS `tzero_shrink`,`p`.`process_action` AS `tzero_flower_status`,if((`p`.`harvest_year` = 2021),((((((`p`.`big_a_flower_output` + `p`.`reg_a_flower_output`) + `p`.`sml_a_flower_output`) + `p`.`b_flower_output`) + `p`.`retrim_a_output`) + `p`.`retrim_b_output`) * 16),0) AS `2021_total_oz`,if((`p`.`harvest_year` = 2021),`p`.`plant_count`,0) AS `2021_plants`,if((`p`.`harvest_year` = 2022),((((((`p`.`big_a_flower_output` + `p`.`reg_a_flower_output`) + `p`.`sml_a_flower_output`) + `p`.`b_flower_output`) + `p`.`retrim_a_output`) + `p`.`retrim_b_output`) * 16),0) AS `2022_total_oz`,if((`p`.`harvest_year` = 2022),`p`.`plant_count`,0) AS `2022_plants`,if((`p`.`harvest_year` = 2023),((((((`p`.`big_a_flower_output` + `p`.`reg_a_flower_output`) + `p`.`sml_a_flower_output`) + `p`.`b_flower_output`) + `p`.`retrim_a_output`) + `p`.`retrim_b_output`) * 16),0) AS `2023_total_oz`,if((`p`.`harvest_year` = 2023),`p`.`plant_count`,0) AS `2023_plants`,if((`p`.`harvest_year` = 2024),((((((`p`.`big_a_flower_output` + `p`.`reg_a_flower_output`) + `p`.`sml_a_flower_output`) + `p`.`b_flower_output`) + `p`.`retrim_a_output`) + `p`.`retrim_b_output`) * 16),0) AS `2024_total_oz`,if((`p`.`harvest_year` = 2024),`p`.`plant_count`,0) AS `2024_plants` from `processing`.`trimming_t0_report` `p` where (`p`.`harvest_week` in (select `trimming_t0_report`.`harvest_week` from `processing`.`trimming_t0_report` group by `trimming_t0_report`.`harvest_week`) and (right(`p`.`harvest_id`,2) <> '-M'));

-- View: processing_finished_weeks
CREATE ALGORITHM=UNDEFINED DEFINER=`marc`@`%` SQL SECURITY DEFINER VIEW `processing_finished_weeks` AS select `processing`.`week_num` AS `week_num`,`processing`.`year_num` AS `year_num`,concat(`processing`.`year_num`,'-',`processing`.`week_num`) AS `year_week` from `processing` group by `processing`.`week_num`,`processing`.`year_num` having (sum(if(((`processing`.`tzero_flower_status` <> 'Finished') and (right(`processing`.`harvest_id`,2) <> '-M')),1,0)) = 0) order by `processing`.`year_num` desc,`processing`.`week_num` desc;

-- View: processing_last_completed_week
CREATE ALGORITHM=UNDEFINED DEFINER=`lizeth`@`%` SQL SECURITY DEFINER VIEW `processing_last_completed_week` AS select `processing_delta_view`.`strain_id` AS `strain_id`,`processing_delta_view`.`week_num` AS `week_num`,`processing_delta_view`.`year_num` AS `year_num`,`processing_delta_view`.`year_week` AS `year_week`,`processing_delta_view`.`harvest_date` AS `harvest_date`,`processing_delta_view`.`harvest_id` AS `harvest_id`,`processing_delta_view`.`plant_count` AS `planted_count`,`processing_delta_view`.`property_id` AS `property_id` from `processing_delta_view` where ((select max(`processing_delta_view`.`year_week`) from `processing_delta_view`) in (`processing_delta_view`.`year_week`,(`processing_delta_view`.`year_week` + 100),(`processing_delta_view`.`year_week` + 200)));

-- View: processing_latest_week
CREATE ALGORITHM=UNDEFINED DEFINER=`root`@`%` SQL SECURITY DEFINER VIEW `processing_latest_week` AS select `processing_delta_view`.`strain_id` AS `strain_id`,`processing_delta_view`.`week_num` AS `week_num`,`processing_delta_view`.`year_num` AS `year_num`,`processing_delta_view`.`year_week` AS `year_week`,`processing_delta_view`.`harvest_date` AS `harvest_date`,`processing_delta_view`.`harvest_id` AS `harvest_id`,`processing_delta_view`.`plant_count` AS `plant_count`,`processing_delta_view`.`tzero_a_b_retrim` AS `tzero_a_b_retrim`,`processing_delta_view`.`tzero_c` AS `tzero_c`,`processing_delta_view`.`tzero_trim` AS `tzero_trim`,`processing_delta_view`.`tzero_waste` AS `tzero_waste`,`processing_delta_view`.`tzero_shrink` AS `tzero_shrink`,`processing_delta_view`.`tzero_flower_status` AS `tzero_flower_status`,`processing_delta_view`.`2021_total_oz` AS `2021_total_oz`,`processing_delta_view`.`2022_total_oz` AS `2022_total_oz`,`processing_delta_view`.`2023_total_oz` AS `2023_total_oz`,`processing_delta_view`.`2021_plants` AS `2021_plants`,`processing_delta_view`.`2022_plants` AS `2022_plants`,`processing_delta_view`.`2023_plants` AS `2023_plants`,`processing_delta_view`.`property_id` AS `property_id` from `processing_delta_view` where ((select max(`processing_delta_view`.`year_week`) from `processing_delta_view`) in (`processing_delta_view`.`year_week`,(`processing_delta_view`.`year_week` + 100),(`processing_delta_view`.`year_week` + 200)));

-- View: processing_view
CREATE ALGORITHM=UNDEFINED DEFINER=`marc`@`%` SQL SECURITY DEFINER VIEW `processing_view` AS select `processing`.`id` AS `id`,`processing`.`test_id` AS `test_id`,`processing`.`harvest_id` AS `HarvestID`,`processing`.`flowering_id` AS `flowering_id`,`processing`.`property_id` AS `Property`,`processing`.`date` AS `HarvestDate`,`processing`.`week_num` AS `HarvestWeek`,`processing`.`year_num` AS `HarvestYear`,`processing`.`license_id` AS `License`,`processing`.`strain_id` AS `Strain`,`processing`.`plant_count` AS `plant_count`,`processing`.`wet_weight` AS `Wet_Weight`,`processing`.`dry_weight` AS `Dry`,`processing`.`bucked_weight` AS `Bucked`,`processing`.`tzero_a` AS `TzeroA`,`processing`.`tzero_b` AS `TzeroB`,`processing`.`retrim_in` AS `TZeroA_Retrim`,`processing`.`tzero_a_b_retrim` AS `Tzero_A+B_Retrim`,`processing`.`tzero_c` AS `TzeroC`,`processing`.`tzero_waste` AS `Tzero_Waste`,`processing`.`tzero_trim` AS `Tzero_Trim`,`processing`.`tzero_oz_plant` AS `TZero_oz/plant`,`processing`.`tzero_shrink` AS `TZero_Shrink`,`processing`.`retrim_a` AS `RetrimA`,`processing`.`retrim_b` AS `RetrimB`,`processing`.`retrim_c` AS `RetrimC`,`processing`.`b_revision_in` AS `b_revision_in`,`processing`.`c_revision_in` AS `c_revision_in`,`processing`.`b_revision_a` AS `b_revision_a`,`processing`.`b_revision_b` AS `b_revision_b`,`processing`.`b_revision_c` AS `b_revision_c`,`processing`.`c_revision_a` AS `c_revision_a`,`processing`.`c_revision_b` AS `c_revision_b`,`processing`.`c_revision_c` AS `c_revision_c`,`processing`.`grade_a` AS `GradeA`,`processing`.`grade_b` AS `GradeB`,`processing`.`grade_c` AS `GradeC`,`processing`.`shake` AS `Shake`,`processing`.`waste_batch` AS `Waste`,`processing`.`ratio_tzero_flower` AS `Ratio_Tzero_A+B`,`processing`.`ratio_retrim_in` AS `Ratio_Retrim`,`processing`.`ratio_tzero_trim` AS `Ratio_Tzero_Trim`,`processing`.`ratio_tzero_mold` AS `Ratio_Tzero_C`,`processing`.`ratio_tzero_waste` AS `Ratio_Tzero_Waste`,`processing`.`oz_per_plant` AS `oz/plant`,`processing`.`ratio_grade_a_b` AS `ratio_grade_a_b`,`processing`.`ratio_grade_c` AS `ratio_grade_c`,`processing`.`ratio_waste` AS `ratio_waste`,`processing`.`ratio_shake` AS `ratio_shake`,`processing`.`processing_shrink` AS `Processing_Shrink`,`processing`.`dry_status` AS `dry_status`,`processing`.`bucked_status` AS `bucked_status`,`processing`.`tzero_flower_status` AS `tzero_flower_status`,`processing`.`tzero_trim_status` AS `tzero_trim_status`,`processing`.`retrim_status` AS `retrim_status`,`processing`.`revisions_status` AS `revisions_status`,`processing`.`batch_status` AS `batch_status`,`processing`.`post_drying_loss` AS `post_drying_loss`,`processing`.`post_bucking_loss` AS `post_bucking_loss`,`processing`.`post_tzero_loss` AS `post_tzero_loss`,`processing`.`overall_loss` AS `overall_loss`,`processing`.`post_drying_loss_percent` AS `post_drying_loss_percent`,`processing`.`post_bucking_loss_percent` AS `post_bucking_loss_percent`,`processing`.`overall_bucking_loss_percent` AS `overall_bucking_loss_percent`,`processing`.`post_tzero_loss_percent` AS `post_tzero_loss_percent`,`processing`.`overall_loss_percent` AS `overall_loss_percent`,`processing`.`overall_post_tzero_loss_percent` AS `overall_post_tzero_loss_percent`,`processing`.`batch_m2` AS `batch_m2`,`processing`.`plant_m2` AS `plant_m2`,`processing`.`oz_m2` AS `oz_m2`,`processing`.`temp` AS `temp` from `processing`;

-- View: production_summary
CREATE ALGORITHM=UNDEFINED DEFINER=`lizeth`@`%` SQL SECURITY DEFINER VIEW `production_summary` AS select `bp`.`flowering_batch` AS `flowering_batch`,`bp`.`harvest_batch` AS `harvest_batch`,`bp`.`test_id` AS `test_id`,`bp`.`harvest_batch_test_id` AS `harvest_batch_test_id`,`bp`.`property_id` AS `property_id`,`bp`.`strain_id` AS `strain_id`,`bp`.`strain_name` AS `strain_name`,`bp`.`core_strain` AS `core_strain`,`bp`.`harvest_date` AS `harvest_date`,`bp`.`harvest_week` AS `harvest_week`,`bp`.`harvest_quarter` AS `harvest_quarter`,`bp`.`harvest_year` AS `harvest_year`,`bp`.`harvested_count` AS `harvested_count`,`bp`.`input_date_tzero` AS `input_date_tzero`,`bp`.`input_tzero` AS `input_tzero`,`bp`.`output_tzero` AS `output_tzero`,`bp`.`total_a_bigs` AS `total_a_bigs`,`bp`.`total_a_mids` AS `total_a_mids`,`bp`.`total_a_smalls` AS `total_a_smalls`,`bp`.`total_a_micros` AS `total_a_micros`,`bp`.`total_a_regs` AS `total_a_regs`,`bp`.`total_b` AS `total_b`,`bp`.`total_c` AS `total_c`,`bp`.`total_shake` AS `total_shake`,`bp`.`total_trim` AS `total_trim`,`bp`.`total_kief` AS `total_kief`,`bp`.`total_waste` AS `total_waste`,`bp`.`total` AS `total`,`bp`.`pct_completed` AS `pct_completed`,`bp`.`oz_plant_h` AS `ab_oz_plant`,round(((`bp`.`total_a_bigs` * 16) / nullif(`bp`.`harvested_count`,0)),3) AS `bigs_a_oz_plant`,round(((`bp`.`total_a_mids` * 16) / nullif(`bp`.`harvested_count`,0)),3) AS `mids_a_oz_plant`,round(((`bp`.`total_a_smalls` * 16) / nullif(`bp`.`harvested_count`,0)),3) AS `smalls_a_oz_plant`,round(((`bp`.`total_a_micros` * 16) / nullif(`bp`.`harvested_count`,0)),3) AS `micros_a_oz_plant`,round(((`bp`.`total_a_regs` * 16) / nullif(`bp`.`harvested_count`,0)),3) AS `regs_a_oz_plant`,round(((`bp`.`total_b` * 16) / nullif(`bp`.`harvested_count`,0)),3) AS `b_oz_plant`,round(((`bp`.`total_c` * 16) / nullif(`bp`.`harvested_count`,0)),3) AS `c_oz_plant`,round(((`bp`.`total_shake` * 16) / nullif(`bp`.`harvested_count`,0)),3) AS `shake_oz_plant`,round(((`bp`.`total_a_bigs` * 100) / `bp`.`total`),2) AS `bigs_a_pct`,round(((`bp`.`total_a_mids` * 100) / `bp`.`total`),2) AS `mids_a_pct`,round(((`bp`.`total_a_smalls` * 100) / `bp`.`total`),2) AS `smalls_a_pct`,round(((`bp`.`total_a_micros` * 100) / `bp`.`total`),2) AS `micros_a_pct`,round(((`bp`.`total_a_regs` * 100) / `bp`.`total`),2) AS `regs_a_pct`,round(((`bp`.`total_b` * 100) / `bp`.`total`),2) AS `b_pct`,round(((`bp`.`total_c` * 100) / `bp`.`total`),2) AS `c_pct`,round(((`bp`.`total_trim` * 100) / `bp`.`total`),2) AS `trim_pct`,round(((`bp`.`total_shake` * 100) / `bp`.`total`),2) AS `shake_pct`,round(((`bp`.`total_kief` * 100) / `bp`.`total`),2) AS `kief_pct`,round(((`bp`.`total_waste` * 100) / `bp`.`total`),2) AS `waste_pct` from `processing`.`batch_production_harvest_flat_MV` `bp` where (`bp`.`pct_completed` > 92.5) order by `bp`.`harvest_year` desc,`bp`.`harvest_week` desc,`bp`.`strain_id`,`bp`.`harvest_batch`;

-- View: production_summary_2022
CREATE ALGORITHM=UNDEFINED DEFINER=`lizeth`@`%` SQL SECURITY DEFINER VIEW `production_summary_2022` AS select `bp`.`flowering_batch` AS `flowering_batch`,`bp`.`harvest_batch` AS `harvest_batch`,`bp`.`test_id` AS `test_id`,`bp`.`harvest_batch_test_id` AS `harvest_batch_test_id`,`bp`.`property_id` AS `property_id`,`bp`.`strain_id` AS `strain_id`,`bp`.`strain_name` AS `strain_name`,`bp`.`core_strain` AS `core_strain`,`bp`.`harvest_week` AS `harvest_week`,`bp`.`harvest_quarter` AS `harvest_quarter`,`bp`.`harvest_year` AS `harvest_year`,`bp`.`harvested_count` AS `harvested_count`,`bp`.`input_date_tzero` AS `input_date_tzero`,`bp`.`input_tzero` AS `input_tzero`,`bp`.`output_tzero` AS `output_tzero`,`bp`.`total_a_bigs` AS `total_a_bigs`,`bp`.`total_a_mids` AS `total_a_mids`,`bp`.`total_a_smalls` AS `total_a_smalls`,`bp`.`total_a_micros` AS `total_a_micros`,`bp`.`total_a_regs` AS `total_a_regs`,`bp`.`total_b` AS `total_b`,`bp`.`total_c` AS `total_c`,`bp`.`total_shake` AS `total_shake`,`bp`.`total_trim` AS `total_trim`,`bp`.`total_kief` AS `total_kief`,`bp`.`total_waste` AS `total_waste`,`bp`.`total` AS `total`,`bp`.`pct_completed` AS `pct_completed`,`bp`.`oz_plant_h` AS `ab_oz_plant`,round(((`bp`.`total_a_bigs` * 16) / nullif(`bp`.`harvested_count`,0)),3) AS `bigs_a_oz_plant`,round(((`bp`.`total_a_mids` * 16) / nullif(`bp`.`harvested_count`,0)),3) AS `mids_a_oz_plant`,round(((`bp`.`total_a_smalls` * 16) / nullif(`bp`.`harvested_count`,0)),3) AS `smalls_a_oz_plant`,round(((`bp`.`total_a_micros` * 16) / nullif(`bp`.`harvested_count`,0)),3) AS `micros_a_oz_plant`,round(((`bp`.`total_a_regs` * 16) / nullif(`bp`.`harvested_count`,0)),3) AS `regs_a_oz_plant`,round(((`bp`.`total_b` * 16) / nullif(`bp`.`harvested_count`,0)),3) AS `b_oz_plant`,round(((`bp`.`total_c` * 16) / nullif(`bp`.`harvested_count`,0)),3) AS `c_oz_plant`,round(((`bp`.`total_shake` * 16) / nullif(`bp`.`harvested_count`,0)),3) AS `shake_oz_plant`,round(((`bp`.`total_a_bigs` * 100) / `bp`.`total`),2) AS `bigs_a_pct`,round(((`bp`.`total_a_mids` * 100) / `bp`.`total`),2) AS `mids_a_pct`,round(((`bp`.`total_a_smalls` * 100) / `bp`.`total`),2) AS `smalls_a_pct`,round(((`bp`.`total_a_micros` * 100) / `bp`.`total`),2) AS `micros_a_pct`,round(((`bp`.`total_a_regs` * 100) / `bp`.`total`),2) AS `regs_a_pct`,round(((`bp`.`total_b` * 100) / `bp`.`total`),2) AS `b_pct`,round(((`bp`.`total_c` * 100) / `bp`.`total`),2) AS `c_pct`,round(((`bp`.`total_trim` * 100) / `bp`.`total`),2) AS `trim_pct`,round(((`bp`.`total_shake` * 100) / `bp`.`total`),2) AS `shake_pct`,round(((`bp`.`total_kief` * 100) / `bp`.`total`),2) AS `kief_pct`,round(((`bp`.`total_waste` * 100) / `bp`.`total`),2) AS `waste_pct` from `processing`.`batch_production_harvest_2022` `bp` where ((`bp`.`pct_completed` > 92.5) and (`bp`.`pct_completed` < 121)) order by `bp`.`harvest_year` desc,`bp`.`harvest_week` desc,`bp`.`harvest_batch`;

-- View: production_summary_2023
CREATE ALGORITHM=UNDEFINED DEFINER=`lizeth`@`%` SQL SECURITY DEFINER VIEW `production_summary_2023` AS select `bp`.`flowering_batch` AS `flowering_batch`,`bp`.`harvest_batch` AS `harvest_batch`,`bp`.`test_id` AS `test_id`,`bp`.`harvest_batch_test_id` AS `harvest_batch_test_id`,`bp`.`property_id` AS `property_id`,`bp`.`strain_id` AS `strain_id`,`bp`.`strain_name` AS `strain_name`,`bp`.`core_strain` AS `core_strain`,`bp`.`harvest_week` AS `harvest_week`,`bp`.`harvest_quarter` AS `harvest_quarter`,`bp`.`harvest_year` AS `harvest_year`,`bp`.`harvested_count` AS `harvested_count`,`bp`.`input_date_tzero` AS `input_date_tzero`,`bp`.`input_tzero` AS `input_tzero`,`bp`.`output_tzero` AS `output_tzero`,`bp`.`total_a_bigs` AS `total_a_bigs`,`bp`.`total_a_mids` AS `total_a_mids`,`bp`.`total_a_smalls` AS `total_a_smalls`,`bp`.`total_a_micros` AS `total_a_micros`,`bp`.`total_a_regs` AS `total_a_regs`,`bp`.`total_b` AS `total_b`,`bp`.`total_c` AS `total_c`,`bp`.`total_shake` AS `total_shake`,`bp`.`total_trim` AS `total_trim`,`bp`.`total_kief` AS `total_kief`,`bp`.`total_waste` AS `total_waste`,`bp`.`total` AS `total`,`bp`.`pct_completed` AS `pct_completed`,`bp`.`oz_plant_h` AS `ab_oz_plant`,round(((`bp`.`total_a_bigs` * 16) / nullif(`bp`.`harvested_count`,0)),3) AS `bigs_a_oz_plant`,round(((`bp`.`total_a_mids` * 16) / nullif(`bp`.`harvested_count`,0)),3) AS `mids_a_oz_plant`,round(((`bp`.`total_a_smalls` * 16) / nullif(`bp`.`harvested_count`,0)),3) AS `smalls_a_oz_plant`,round(((`bp`.`total_a_micros` * 16) / nullif(`bp`.`harvested_count`,0)),3) AS `micros_a_oz_plant`,round(((`bp`.`total_a_regs` * 16) / nullif(`bp`.`harvested_count`,0)),3) AS `regs_a_oz_plant`,round(((`bp`.`total_b` * 16) / nullif(`bp`.`harvested_count`,0)),3) AS `b_oz_plant`,round(((`bp`.`total_c` * 16) / nullif(`bp`.`harvested_count`,0)),3) AS `c_oz_plant`,round(((`bp`.`total_shake` * 16) / nullif(`bp`.`harvested_count`,0)),3) AS `shake_oz_plant`,round(((`bp`.`total_a_bigs` * 100) / `bp`.`total`),2) AS `bigs_a_pct`,round(((`bp`.`total_a_mids` * 100) / `bp`.`total`),2) AS `mids_a_pct`,round(((`bp`.`total_a_smalls` * 100) / `bp`.`total`),2) AS `smalls_a_pct`,round(((`bp`.`total_a_micros` * 100) / `bp`.`total`),2) AS `micros_a_pct`,round(((`bp`.`total_a_regs` * 100) / `bp`.`total`),2) AS `regs_a_pct`,round(((`bp`.`total_b` * 100) / `bp`.`total`),2) AS `b_pct`,round(((`bp`.`total_c` * 100) / `bp`.`total`),2) AS `c_pct`,round(((`bp`.`total_trim` * 100) / `bp`.`total`),2) AS `trim_pct`,round(((`bp`.`total_shake` * 100) / `bp`.`total`),2) AS `shake_pct`,round(((`bp`.`total_kief` * 100) / `bp`.`total`),2) AS `kief_pct`,round(((`bp`.`total_waste` * 100) / `bp`.`total`),2) AS `waste_pct` from `processing`.`batch_production_harvest_flat_MV` `bp` where ((`bp`.`harvest_year` = 2023) and (`bp`.`pct_completed` > 92.5) and (`bp`.`pct_completed` < 121)) order by `bp`.`harvest_year` desc,`bp`.`harvest_week` desc,`bp`.`harvest_batch`;

-- View: production_summary_last_12weeks
CREATE ALGORITHM=UNDEFINED DEFINER=`lizeth`@`%` SQL SECURITY DEFINER VIEW `production_summary_last_12weeks` AS select `bp`.`flowering_batch` AS `flowering_batch`,`bp`.`harvest_batch` AS `harvest_batch`,`bp`.`test_id` AS `test_id`,`bp`.`harvest_batch_test_id` AS `harvest_batch_test_id`,`bp`.`property_id` AS `property_id`,`bp`.`strain_id` AS `strain_id`,`bp`.`strain_name` AS `strain_name`,`bp`.`core_strain` AS `core_strain`,`bp`.`harvest_date` AS `harvest_date`,`bp`.`harvest_week` AS `harvest_week`,`bp`.`harvest_quarter` AS `harvest_quarter`,`bp`.`harvest_year` AS `harvest_year`,`bp`.`harvested_count` AS `harvested_count`,`bp`.`input_date_tzero` AS `input_date_tzero`,`bp`.`input_tzero` AS `input_tzero`,`bp`.`output_tzero` AS `output_tzero`,`bp`.`total_a_bigs` AS `total_a_bigs`,`bp`.`total_a_mids` AS `total_a_mids`,`bp`.`total_a_smalls` AS `total_a_smalls`,`bp`.`total_a_micros` AS `total_a_micros`,`bp`.`total_a_regs` AS `total_a_regs`,`bp`.`total_b` AS `total_b`,`bp`.`total_c` AS `total_c`,`bp`.`total_shake` AS `total_shake`,`bp`.`total_trim` AS `total_trim`,`bp`.`total_kief` AS `total_kief`,`bp`.`total_waste` AS `total_waste`,`bp`.`total` AS `total`,`bp`.`pct_completed` AS `pct_completed`,`bp`.`oz_plant_h` AS `ab_oz_plant`,round(((`bp`.`total_a_bigs` * 16) / nullif(`bp`.`harvested_count`,0)),3) AS `bigs_a_oz_plant`,round(((`bp`.`total_a_mids` * 16) / nullif(`bp`.`harvested_count`,0)),3) AS `mids_a_oz_plant`,round(((`bp`.`total_a_smalls` * 16) / nullif(`bp`.`harvested_count`,0)),3) AS `smalls_a_oz_plant`,round(((`bp`.`total_a_micros` * 16) / nullif(`bp`.`harvested_count`,0)),3) AS `micros_a_oz_plant`,round(((`bp`.`total_a_regs` * 16) / nullif(`bp`.`harvested_count`,0)),3) AS `regs_a_oz_plant`,round(((`bp`.`total_b` * 16) / nullif(`bp`.`harvested_count`,0)),3) AS `b_oz_plant`,round(((`bp`.`total_c` * 16) / nullif(`bp`.`harvested_count`,0)),3) AS `c_oz_plant`,round(((`bp`.`total_shake` * 16) / nullif(`bp`.`harvested_count`,0)),3) AS `shake_oz_plant`,round(((`bp`.`total_a_bigs` * 100) / `bp`.`total`),2) AS `bigs_a_pct`,round(((`bp`.`total_a_mids` * 100) / `bp`.`total`),2) AS `migs_a_pct`,round(((`bp`.`total_a_smalls` * 100) / `bp`.`total`),2) AS `smalls_a_pct`,round(((`bp`.`total_a_micros` * 100) / `bp`.`total`),2) AS `micros_a_pct`,round(((`bp`.`total_a_regs` * 100) / `bp`.`total`),2) AS `regs_a_pct`,round(((`bp`.`total_b` * 100) / `bp`.`total`),2) AS `b_pct`,round(((`bp`.`total_c` * 100) / `bp`.`total`),2) AS `c_pct`,round(((`bp`.`total_trim` * 100) / `bp`.`total`),2) AS `trim_pct`,round(((`bp`.`total_shake` * 100) / `bp`.`total`),2) AS `shake_pct`,round(((`bp`.`total_kief` * 100) / `bp`.`total`),2) AS `kief_pct`,round(((`bp`.`total_waste` * 100) / `bp`.`total`),2) AS `waste_pct` from `processing`.`batch_production_harvest_flat_MV` `bp` where (`bp`.`harvest_date` >= (select (max(`processing`.`batch_production_harvest_flat_MV`.`harvest_date`) - interval 12 week) from `processing`.`batch_production_harvest_flat_MV`)) order by `bp`.`harvest_year` desc,`bp`.`harvest_week` desc,`bp`.`harvest_batch`;

-- View: veg_active
CREATE ALGORITHM=UNDEFINED DEFINER=`lizeth`@`%` SQL SECURITY DEFINER VIEW `veg_active` AS select `v`.`id` AS `id`,`v`.`source_id` AS `source_id`,`v`.`hardening_id` AS `hardening_id`,`v`.`batch_id` AS `batch_id`,`v`.`batch_name` AS `batch_name`,`v`.`test_id` AS `test_id`,`v`.`date` AS `date`,`v`.`location_id` AS `location_id`,`v`.`location_string` AS `location_string`,`v`.`metrc_plant_tag_first` AS `metrc_plant_tag_first`,`v`.`metrc_plant_tag_last` AS `metrc_plant_tag_last`,`v`.`plant_count` AS `plant_count`,`v`.`flat_plant_count` AS `flat_plant_count`,`v`.`flats` AS `flats`,`v`.`trays` AS `trays`,`v`.`flowering_date` AS `flowering_date`,`v`.`flowering_batch_name` AS `flowering_batch_name`,`v`.`note` AS `note`,`v`.`status` AS `status`,`v`.`action` AS `action`,`v`.`modified_type` AS `modified_type`,`v`.`created_on` AS `created_on`,`v`.`created_by` AS `created_by`,`v`.`modified_on` AS `modified_on`,`v`.`modified_by` AS `modified_by`,`v`.`flag` AS `flag`,`v`.`trigger` AS `trigger` from `cultivation`.`veg` `v` where (`v`.`status` = 'Active');

-- View: wholesale_order_view
CREATE ALGORITHM=UNDEFINED DEFINER=`lizeth`@`%` SQL SECURITY DEFINER VIEW `wholesale_order_view` AS select `wi`.`metrc_id` AS `metrc_id`,`wi`.`harvest_id` AS `harvest_id`,`wi`.`strain_id` AS `strain_id`,`wi`.`product_category` AS `product_category`,`wi`.`product_type` AS `product_type`,`wi`.`color` AS `color`,`wi`.`weight` AS `weight`,`wi`.`action` AS `action`,`ws`.`vendor_id` AS `vendor_id`,`ws`.`unique_id` AS `unique_id`,`ws`.`est_pickup_date` AS `est_pickup_date`,`ws`.`manifest_id` AS `manifest_id`,`co`.`name` AS `name` from ((`wholesale`.`wholesale_order_item` `wi` left join `wholesale`.`wholesale_order` `ws` on((`ws`.`id` = `wi`.`id_sales_order`))) left join `crm`.`company_org` `co` on((`ws`.`vendor_id` = convert(`co`.`id` using utf8mb4)))) where ((`wi`.`action` = 'Sold') or (`wi`.`action` = 'Accepted'));

