-- View: CustomerSalesHistory
CREATE ALGORITHM=UNDEFINED DEFINER=`mark`@`%` SQL SECURITY DEFINER VIEW `CustomerSalesHistory` AS with `sku_view` as (select `product_sku`.`sku`.`kss_id` AS `kss_id`,max(`b`.`name`) AS `brand`,max(`c`.`name`) AS `category`,max(`p`.`name`) AS `package`,max(`ps`.`size`) AS `package_size`,max(`product_sku`.`sku`.`class`) AS `class`,max((case when (`b`.`code` = 'PS') then `s`.`pacific_stone_label` when (`b`.`code` = 'TM') then `s`.`time_machine_label` end)) AS `strain`,max(`product_sku`.`sku`.`source_sku`) AS `source_sku` from ((((((`product_sku`.`sku` left join `pacstone`.`brand` `b` on((`product_sku`.`sku`.`brand` = `b`.`id`))) left join `product_sku`.`category` `c` on((`product_sku`.`sku`.`category` = `c`.`id`))) left join `product_sku`.`package` `p` on((`product_sku`.`sku`.`package` = `p`.`id`))) left join `product_sku`.`package_size` `ps` on((`product_sku`.`sku`.`package_size` = `ps`.`id`))) left join `pacstone`.`plant_strain` `s` on((`product_sku`.`sku`.`plant_strain` = `s`.`id`))) left join `product_sku`.`packing_group` `pg` on((`pg`.`id` = `product_sku`.`sku`.`packing_group`))) group by `product_sku`.`sku`.`kss_id`) select `i`.`InvoiceID` AS `Invoice`,`i`.`InvoiceTransID` AS `InvoiceTransID`,`i`.`Date` AS `Date`,`i`.`CustomerID` AS `CustomerID`,`c`.`Company` AS `Company`,`c`.`Chain - Customer` AS `Company Chain`,`i`.`ProductID` AS `ProductID`,regexp_replace(`i`.`ProductNumName`,'^[0-9]{4} ','') AS `ProductName`,`s`.`brand` AS `Brand`,`s`.`strain` AS `Strain`,`s`.`category` AS `Category`,`s`.`package` AS `Package`,`s`.`package_size` AS `Weight`,`s`.`class` AS `Class`,`s`.`source_sku` AS `Parent SKU`,`c`.`Address` AS `Address`,`c`.`City` AS `City`,`c`.`PostalCode` AS `ZipCode`,`c`.`CountyID` AS `County`,`c`.`PrimaryUserID` AS `Buyer`,`c`.`SalesmanUserID` AS `KSS Sales`,`c`.`IndVolume` AS `Volume`,`c`.`EthnicityID` AS `EthnicityID`,`c`.`StateLicenseNum` AS `License`,`c`.`AR Account Limit` AS `AR Limit`,`i`.`Units` AS `Units`,`i`.`FullPrice` AS `FullPrice`,`i`.`Discount` AS `Discount`,`i`.`Participation` AS `Participation`,`i`.`Vol` AS `Total`,`i`.`Status` AS `Invoice Status` from ((`sales`.`kss_invoice` `i` join `sales`.`kss_customer` `c` on((`i`.`CustomerID` = `c`.`id`))) left join `sku_view` `s` on((`i`.`ProductID` = `s`.`kss_id`))) where (`i`.`Date` >= (curdate() - interval 6 month));

-- View: CustomerSalesHistoryDetail
CREATE ALGORITHM=UNDEFINED DEFINER=`mark`@`%` SQL SECURITY DEFINER VIEW `CustomerSalesHistoryDetail` AS with `sku_view` as (select `product_sku`.`sku`.`kss_id` AS `kss_id`,max(`b`.`name`) AS `brand`,max(`c`.`name`) AS `category`,max(`p`.`name`) AS `package`,max(`ps`.`size`) AS `package_size`,max(`product_sku`.`sku`.`class`) AS `class`,if((max(`product_sku`.`sku`.`class`) = 'Retail'),max(`pg`.`quantity`),1) AS `quantity`,max((case when (`b`.`code` = 'PS') then `s`.`pacific_stone_label` when (`b`.`code` = 'TM') then `s`.`time_machine_label` end)) AS `strain`,max(`product_sku`.`sku`.`plant_strain`) AS `strain_code`,max(`product_sku`.`sku`.`source_sku`) AS `source_sku` from ((((((`product_sku`.`sku` left join `pacstone`.`brand` `b` on((`product_sku`.`sku`.`brand` = `b`.`id`))) left join `product_sku`.`category` `c` on((`product_sku`.`sku`.`category` = `c`.`id`))) left join `product_sku`.`package` `p` on((`product_sku`.`sku`.`package` = `p`.`id`))) left join `product_sku`.`package_size` `ps` on((`product_sku`.`sku`.`package_size` = `ps`.`id`))) left join `pacstone`.`plant_strain` `s` on((`product_sku`.`sku`.`plant_strain` = `s`.`id`))) left join `product_sku`.`packing_group` `pg` on((`pg`.`id` = `product_sku`.`sku`.`packing_group`))) group by `product_sku`.`sku`.`kss_id`) select `i`.`InvoiceID` AS `Invoice`,`i`.`InvoiceTransID` AS `InvoiceTransID`,`i`.`Date` AS `Date`,`i`.`CustomerID` AS `CustomerID`,`c`.`Company` AS `Company`,`c`.`Chain - Customer` AS `Company Chain`,`i`.`ProductID` AS `ProductID`,regexp_replace(`i`.`ProductNumName`,'^[0-9]{4} ','') AS `ProductName`,`s`.`brand` AS `Brand`,`s`.`strain` AS `Strain`,`s`.`strain_code` AS `StrainCode`,`s`.`category` AS `Category`,`s`.`package` AS `Package`,`s`.`package_size` AS `Weight`,`s`.`class` AS `Class`,`s`.`quantity` AS `DisplayQty`,`s`.`source_sku` AS `Parent SKU`,`c`.`Address` AS `Address`,`c`.`City` AS `City`,`c`.`PostalCode` AS `ZipCode`,`c`.`CountyID` AS `County`,`c`.`PrimaryUserID` AS `Buyer`,`c`.`SalesmanUserID` AS `KSS Sales`,`c`.`IndVolume` AS `Volume`,`c`.`EthnicityID` AS `EthnicityID`,`c`.`StateLicenseNum` AS `License`,`c`.`AR Account Limit` AS `AR Limit`,((`i`.`Units` * `s`.`package_size`) * 0.035274) AS `TotalOz`,((`i`.`Units` * `s`.`package_size`) * 0.00220462) AS `TotalLbs`,`i`.`Units` AS `Units`,`i`.`FullPrice` AS `FullPrice`,`i`.`Discount` AS `Discount`,`i`.`Participation` AS `Participation`,`i`.`Vol` AS `Total`,`i`.`Status` AS `Invoice Status` from ((`sales`.`kss_invoice` `i` join `sales`.`kss_customer` `c` on((`i`.`CustomerID` = `c`.`id`))) left join `sku_view` `s` on((`i`.`ProductID` = `s`.`kss_id`))) where (`i`.`Date` >= (curdate() - interval 6 week));

-- View: MonthlySalesPerCustomerPerProduct
CREATE ALGORITHM=UNDEFINED DEFINER=`mark`@`%` SQL SECURITY DEFINER VIEW `MonthlySalesPerCustomerPerProduct` AS select `si`.`Chain - Customer` AS `Chain - Customer`,`si`.`ProductNumName` AS `ProductNumName`,sum((case when (`si`.`YearMonth` = last_day((convert_tz(now(),'+00:00','-07:00') - interval 1 month))) then `si`.`TotalSales` else 0 end)) AS `Sales Last Month`,sum((case when (`si`.`YearMonth` = last_day((convert_tz(now(),'+00:00','-07:00') - interval 1 month))) then abs(`si`.`TotalSales`) else 0 end)) AS `Volume Last Month`,sum((case when (`si`.`YearMonth` = last_day((convert_tz(now(),'+00:00','-07:00') - interval 0 month))) then `si`.`TotalSales` else 0 end)) AS `Sales This Month`,sum((case when (`si`.`YearMonth` = last_day((convert_tz(now(),'+00:00','-07:00') - interval 7 month))) then abs(`si`.`TotalSales`) else 0 end)) AS `Volume This Month` from `sales`.`InvoiceSalesPerYearMonthPerCustomerPerProduct` `si` group by `si`.`Chain - Customer`,`si`.`ProductNumName`;

-- View: MonthlySalesPerProduct
CREATE ALGORITHM=UNDEFINED DEFINER=`mark`@`%` SQL SECURITY DEFINER VIEW `MonthlySalesPerProduct` AS select `si`.`ProductNumName` AS `ProductNumName`,sum((case when (`si`.`YearMonth` = last_day((convert_tz(now(),'+00:00','-07:00') - interval 7 month))) then `si`.`TotalSales` else 0 end)) AS `Sales 7 Months Ago`,count(distinct (case when (`si`.`YearMonth` = last_day((convert_tz(now(),'+00:00','-07:00') - interval 7 month))) then `si`.`Chain - Customer` else 0 end)) AS `Unique Customers 7 Months Ago`,sum((case when (`si`.`YearMonth` = last_day((convert_tz(now(),'+00:00','-07:00') - interval 6 month))) then `si`.`TotalSales` else 0 end)) AS `Sales 6 Months Ago`,count(distinct (case when (`si`.`YearMonth` = last_day((convert_tz(now(),'+00:00','-07:00') - interval 6 month))) then `si`.`Chain - Customer` else 0 end)) AS `Unique Customers 6 Months Ago`,sum((case when (`si`.`YearMonth` = last_day((convert_tz(now(),'+00:00','-07:00') - interval 5 month))) then `si`.`TotalSales` else 0 end)) AS `Sales 5 Months Ago`,count(distinct (case when (`si`.`YearMonth` = last_day((convert_tz(now(),'+00:00','-07:00') - interval 5 month))) then `si`.`Chain - Customer` else 0 end)) AS `Unique Customers 5 Months Ago`,sum((case when (`si`.`YearMonth` = last_day((convert_tz(now(),'+00:00','-07:00') - interval 4 month))) then `si`.`TotalSales` else 0 end)) AS `Sales 4 Months Ago`,count(distinct (case when (`si`.`YearMonth` = last_day((convert_tz(now(),'+00:00','-07:00') - interval 4 month))) then `si`.`Chain - Customer` else 0 end)) AS `Unique Customers 4 Months Ago`,sum((case when (`si`.`YearMonth` = last_day((convert_tz(now(),'+00:00','-07:00') - interval 3 month))) then `si`.`TotalSales` else 0 end)) AS `Sales 3 Months Ago`,count(distinct (case when (`si`.`YearMonth` = last_day((convert_tz(now(),'+00:00','-07:00') - interval 3 month))) then `si`.`Chain - Customer` else 0 end)) AS `Unique Customers 3 Months Ago`,sum((case when (`si`.`YearMonth` = last_day((convert_tz(now(),'+00:00','-07:00') - interval 2 month))) then `si`.`TotalSales` else 0 end)) AS `Sales 2 Months Ago`,count(distinct (case when (`si`.`YearMonth` = last_day((convert_tz(now(),'+00:00','-07:00') - interval 2 month))) then `si`.`Chain - Customer` else 0 end)) AS `Unique Customers 2 Months Ago`,sum((case when (`si`.`YearMonth` = last_day((convert_tz(now(),'+00:00','-07:00') - interval 1 month))) then `si`.`TotalSales` else 0 end)) AS `Sales Last Month`,count(distinct (case when (`si`.`YearMonth` = last_day((convert_tz(now(),'+00:00','-07:00') - interval 1 month))) then `si`.`Chain - Customer` else 0 end)) AS `Unique Customers Last Month`,sum((case when (`si`.`YearMonth` = last_day((convert_tz(now(),'+00:00','-07:00') - interval 0 month))) then `si`.`TotalSales` else 0 end)) AS `Sales This Month`,count(distinct (case when (`si`.`YearMonth` = last_day((convert_tz(now(),'+00:00','-07:00') - interval 0 month))) then `si`.`Chain - Customer` else 0 end)) AS `Unique Customers This Month` from `sales`.`InvoiceSalesPerYearMonthPerCustomerPerProduct` `si` group by `si`.`ProductNumName`;

-- View: account
CREATE ALGORITHM=UNDEFINED DEFINER=`mark`@`%` SQL SECURITY DEFINER VIEW `account` AS select `role`.`id` AS `id`,`role`.`email` AS `email`,`role`.`employee` AS `employee`,`role`.`user_type` AS `user_type`,`role`.`note` AS `note`,`role`.`status` AS `status`,`role`.`trigger` AS `trigger`,`role`.`flag` AS `flag`,`role`.`created_on` AS `created_on`,`role`.`created_by` AS `created_by`,`role`.`modified_by` AS `modified_by`,`role`.`f1` AS `f1`,`role`.`f2` AS `f2`,`role`.`f3` AS `f3`,`role`.`f4` AS `f4`,`role`.`f5` AS `f5`,`role`.`first_name` AS `first_name`,`role`.`last_name` AS `last_name`,`role`.`employee_id` AS `employee_id`,`role`.`account_type` AS `account_type`,`role`.`mail_groups` AS `mail_groups`,`role`.`is_in_workspace` AS `is_in_workspace`,`role`.`server_ts` AS `server_ts`,`role`.`account_status` AS `account_status`,`role`.`app_status` AS `app_status` from `pacstone`.`account` `role`;

-- View: active_veg_batch
CREATE ALGORITHM=UNDEFINED DEFINER=`mark`@`%` SQL SECURITY DEFINER VIEW `active_veg_batch` AS select `vb`.`metrc_plant_tag` AS `metrc_plant_tag`,`vb`.`plant_count` AS `plant_count`,`b`.`name` AS `batch_name`,`b`.`property_id` AS `property_id`,`b`.`date` AS `date`,`b`.`week` AS `week`,`b`.`year` AS `year`,`b`.`year_week` AS `year_week`,`b`.`license_id` AS `license_id`,`b`.`strain_id` AS `strain_id`,`b`.`test_id` AS `test_id`,`c`.`name` AS `canopy_name`,`vb`.`plant_class` AS `plant_class`,`v`.`location_string` AS `location_string` from (((`cultivation`.`veg_batch` `vb` left join `cultivation`.`veg` `v` on((`v`.`id` = `vb`.`veg_id`))) left join `pacstone`.`batch` `b` on((convert(`b`.`id` using utf8mb4) = `v`.`batch_id`))) left join `pacstone`.`canopy` `c` on((`b`.`location_id` = convert(`c`.`location_id` using utf8mb4)))) where (`vb`.`status` = 'Active');

-- View: batch_production
CREATE ALGORITHM=UNDEFINED DEFINER=`mark`@`%` SQL SECURITY DEFINER VIEW `batch_production` AS select `drying_prod_view`.`flowering_id` AS `flowering_id`,`drying_prod_view`.`harvesting_id` AS `harvesting_id`,`drying_prod_view`.`metrc_tag` AS `metrc_tag`,`drying_prod_view`.`process` AS `process`,`drying_prod_view`.`batch_id` AS `batch_id`,`drying_prod_view`.`date` AS `date`,`drying_prod_view`.`batch_status` AS `batch_status`,`drying_prod_view`.`flowering_id_name` AS `flowering_id_name`,`drying_prod_view`.`harvest_id` AS `harvest_id`,`drying_prod_view`.`test_id` AS `test_id`,if((`drying_prod_view`.`test_id` is null),`drying_prod_view`.`flowering_id_name`,concat(`drying_prod_view`.`flowering_id_name`,'-',`drying_prod_view`.`test_id`)) AS `flowering_crop`,if((`drying_prod_view`.`test_id` is null),`drying_prod_view`.`harvest_id`,concat(`drying_prod_view`.`harvest_id`,'-',`drying_prod_view`.`test_id`)) AS `harvest_name`,`drying_prod_view`.`property_id` AS `property_id`,`drying_prod_view`.`harvest_date` AS `harvest_date`,`drying_prod_view`.`harvest_week` AS `harvest_week`,`drying_prod_view`.`harvest_year` AS `harvest_year`,`drying_prod_view`.`harvest_year_week` AS `harvest_year_week`,`drying_prod_view`.`harvest_type` AS `harvest_type`,`drying_prod_view`.`flower_plant_count` AS `flower_plant_count`,`drying_prod_view`.`harvest_plant_count` AS `harvest_plant_count`,`drying_prod_view`.`strain_code` AS `strain_code`,`drying_prod_view`.`strain_name` AS `strain_name`,`drying_prod_view`.`category` AS `input_category`,`drying_prod_view`.`category_type` AS `input_category_type`,`drying_prod_view`.`product_size` AS `input_product_size`,`drying_prod_view`.`product_grade` AS `input_product_grade`,`drying_prod_view`.`input_quantity` AS `input_quantity`,`drying_prod_view`.`output_category` AS `output_category`,`drying_prod_view`.`output_category_type` AS `output_category_type`,NULL AS `output_size`,NULL AS `output_grade`,`drying_prod_view`.`output_quantity` AS `output_quantity` from `processing`.`drying_prod_view` where (`drying_prod_view`.`harvest_year_week` > 202253) union all select `harvest_prod_view`.`flowering_id` AS `flowering_id`,`harvest_prod_view`.`harvesting_id` AS `harvesting_id`,`harvest_prod_view`.`metrc_tag` AS `metrc_tag`,`harvest_prod_view`.`process` AS `process`,`harvest_prod_view`.`batch_id` AS `batch_id`,`harvest_prod_view`.`date` AS `date`,`harvest_prod_view`.`batch_status` AS `batch_status`,`harvest_prod_view`.`flowering_id_name` AS `flowering_id_name`,`harvest_prod_view`.`harvest_id` AS `harvest_id`,`harvest_prod_view`.`test_id` AS `test_id`,if((`harvest_prod_view`.`test_id` is null),`harvest_prod_view`.`flowering_id_name`,concat(`harvest_prod_view`.`flowering_id_name`,'-',`harvest_prod_view`.`test_id`)) AS `flowering_crop`,if((`harvest_prod_view`.`test_id` is null),`harvest_prod_view`.`harvest_id`,concat(`harvest_prod_view`.`harvest_id`,'-',`harvest_prod_view`.`test_id`)) AS `harvest_name`,`harvest_prod_view`.`property_id` AS `property_id`,`harvest_prod_view`.`harvest_date` AS `harvest_date`,`harvest_prod_view`.`harvest_week` AS `harvest_week`,`harvest_prod_view`.`harvest_year` AS `harvest_year`,`harvest_prod_view`.`harvest_year_week` AS `harvest_year_week`,`harvest_prod_view`.`harvest_type` AS `harvest_type`,`harvest_prod_view`.`flower_plant_count` AS `flower_plant_count`,`harvest_prod_view`.`harvest_plant_count` AS `harvest_plant_count`,`harvest_prod_view`.`strain_code` AS `strain_code`,`harvest_prod_view`.`strain_name` AS `strain_name`,`harvest_prod_view`.`category` AS `input_category`,`harvest_prod_view`.`category_type` AS `input_category_type`,NULL AS `input_product_size`,NULL AS `input_product_grade`,NULL AS `input_quantity`,NULL AS `output_category`,NULL AS `output_category_type`,NULL AS `output_size`,NULL AS `output_grade`,`harvest_prod_view`.`output_quantity` AS `output_quantity` from `cultivation`.`harvest_prod_view` where (`harvest_prod_view`.`harvest_year_week` > 202253) union all select `bucking_prod_view`.`flowering_id` AS `flowering_id`,`bucking_prod_view`.`harvesting_id` AS `harvesting_id`,`bucking_prod_view`.`metrc_tag` AS `metrc_tag`,`bucking_prod_view`.`process` AS `process`,`bucking_prod_view`.`batch_id` AS `batch_id`,`bucking_prod_view`.`date` AS `date`,`bucking_prod_view`.`batch_status` AS `batch_status`,`bucking_prod_view`.`flowering_id_name` AS `flowering_id_name`,`bucking_prod_view`.`harvest_id` AS `harvest_id`,`bucking_prod_view`.`test_id` AS `test_id`,if((`bucking_prod_view`.`test_id` is null),`bucking_prod_view`.`flowering_id_name`,concat(`bucking_prod_view`.`flowering_id_name`,'-',`bucking_prod_view`.`test_id`)) AS `flowering_crop`,if((`bucking_prod_view`.`test_id` is null),`bucking_prod_view`.`harvest_id`,concat(`bucking_prod_view`.`harvest_id`,'-',`bucking_prod_view`.`test_id`)) AS `harvest_name`,`bucking_prod_view`.`property_id` AS `property_id`,`bucking_prod_view`.`harvest_date` AS `harvest_date`,`bucking_prod_view`.`harvest_week` AS `harvest_week`,`bucking_prod_view`.`harvest_year` AS `harvest_year`,`bucking_prod_view`.`harvest_year_week` AS `harvest_year_week`,`bucking_prod_view`.`harvest_type` AS `harvest_type`,`bucking_prod_view`.`flower_plant_count` AS `flower_plant_count`,`bucking_prod_view`.`harvest_plant_count` AS `harvest_plant_count`,`bucking_prod_view`.`strain_code` AS `strain_code`,`bucking_prod_view`.`strain_name` AS `strain_name`,`bucking_prod_view`.`category` AS `input_category`,`bucking_prod_view`.`category_type` AS `input_category_type`,`bucking_prod_view`.`product_size` AS `input_product_size`,`bucking_prod_view`.`product_grade` AS `input_product_grade`,`bucking_prod_view`.`input_quantity` AS `input_quantity`,`bucking_prod_view`.`output_category` AS `output_category`,`bucking_prod_view`.`output_category_type` AS `output_category_type`,NULL AS `output_size`,NULL AS `output_grade`,`bucking_prod_view`.`output_quantity` AS `output_quantity` from `processing`.`bucking_prod_view` where (`bucking_prod_view`.`harvest_year_week` > 202253) union all select `trimming_prod_view`.`flowering_id` AS `flowering_id`,`trimming_prod_view`.`harvesting_id` AS `harvesting_id`,`trimming_prod_view`.`metrc_tag` AS `metrc_tag`,`trimming_prod_view`.`process` AS `process`,`trimming_prod_view`.`batch_id` AS `batch_id`,`trimming_prod_view`.`date` AS `date`,`trimming_prod_view`.`batch_status` AS `batch_status`,`trimming_prod_view`.`flowering_id_name` AS `flowering_id_name`,`trimming_prod_view`.`harvest_id` AS `harvest_id`,`trimming_prod_view`.`test_id` AS `test_id`,if((`trimming_prod_view`.`test_id` is null),`trimming_prod_view`.`flowering_id_name`,concat(`trimming_prod_view`.`flowering_id_name`,'-',`trimming_prod_view`.`test_id`)) AS `flowering_crop`,if((`trimming_prod_view`.`test_id` is null),`trimming_prod_view`.`harvest_id`,concat(`trimming_prod_view`.`harvest_id`,'-',`trimming_prod_view`.`test_id`)) AS `harvest_name`,`trimming_prod_view`.`property_id` AS `property_id`,`trimming_prod_view`.`harvest_date` AS `harvest_date`,`trimming_prod_view`.`harvest_week` AS `harvest_week`,`trimming_prod_view`.`harvest_year` AS `harvest_year`,`trimming_prod_view`.`harvest_year_week` AS `harvest_year_week`,`trimming_prod_view`.`harvest_type` AS `harvest_type`,`trimming_prod_view`.`flower_plant_count` AS `flower_plant_count`,`trimming_prod_view`.`harvest_plant_count` AS `harvest_plant_count`,`trimming_prod_view`.`strain_code` AS `strain_code`,`trimming_prod_view`.`strain_name` AS `strain_name`,`trimming_prod_view`.`input_category` AS `input_category`,`trimming_prod_view`.`input_category_type` AS `input_category_type`,`trimming_prod_view`.`input_product_size` AS `input_product_size`,`trimming_prod_view`.`input_product_grade` AS `input_product_grade`,`trimming_prod_view`.`input_quantity` AS `input_quantity`,`trimming_prod_view`.`output_category` AS `output_category`,`trimming_prod_view`.`output_category_type` AS `output_category_type`,`trimming_prod_view`.`output_size` AS `output_size`,`trimming_prod_view`.`output_grade` AS `output_grade`,`trimming_prod_view`.`output_quantity` AS `output_quantity` from `processing`.`trimming_prod_view` where (`trimming_prod_view`.`harvest_year_week` > 202253) union all select `sorting_prod_view`.`flowering_id` AS `flowering_id`,`sorting_prod_view`.`harvesting_id` AS `harvesting_id`,`sorting_prod_view`.`metrc_tag` AS `metrc_tag`,`sorting_prod_view`.`process` AS `process`,`sorting_prod_view`.`batch_id` AS `batch_id`,`sorting_prod_view`.`date` AS `date`,`sorting_prod_view`.`batch_status` AS `batch_status`,`sorting_prod_view`.`flowering_id_name` AS `flowering_id_name`,`sorting_prod_view`.`harvest_id` AS `harvest_id`,`sorting_prod_view`.`test_id` AS `test_id`,if((`sorting_prod_view`.`test_id` is null),`sorting_prod_view`.`flowering_id_name`,concat(`sorting_prod_view`.`flowering_id_name`,'-',`sorting_prod_view`.`test_id`)) AS `flowering_crop`,if((`sorting_prod_view`.`test_id` is null),`sorting_prod_view`.`harvest_id`,concat(`sorting_prod_view`.`harvest_id`,'-',`sorting_prod_view`.`test_id`)) AS `harvest_name`,`sorting_prod_view`.`property_id` AS `property_id`,`sorting_prod_view`.`harvest_date` AS `harvest_date`,`sorting_prod_view`.`harvest_week` AS `harvest_week`,`sorting_prod_view`.`harvest_year` AS `harvest_year`,`sorting_prod_view`.`harvest_year_week` AS `harvest_year_week`,`sorting_prod_view`.`harvest_type` AS `harvest_type`,`sorting_prod_view`.`flower_plant_count` AS `flower_plant_count`,`sorting_prod_view`.`harvest_plant_count` AS `harvest_plant_count`,`sorting_prod_view`.`strain_code` AS `strain_code`,`sorting_prod_view`.`strain_name` AS `strain_name`,`sorting_prod_view`.`input_category` AS `input_category`,`sorting_prod_view`.`input_category_type` AS `input_category_type`,`sorting_prod_view`.`input_product_size` AS `input_product_size`,`sorting_prod_view`.`input_product_grade` AS `input_product_grade`,`sorting_prod_view`.`input_quantity` AS `input_quantity`,`sorting_prod_view`.`output_category` AS `output_category`,`sorting_prod_view`.`output_category_type` AS `output_category_type`,`sorting_prod_view`.`output_size` AS `output_size`,`sorting_prod_view`.`output_grade` AS `output_grade`,`sorting_prod_view`.`output_quantity` AS `output_quantity` from `processing`.`sorting_prod_view` where (`sorting_prod_view`.`harvest_year_week` > 202253) union all select `processing_prod_view`.`flowering_id` AS `flowering_id`,`processing_prod_view`.`harvesting_id` AS `harvesting_id`,`processing_prod_view`.`metrc_tag` AS `metrc_tag`,`processing_prod_view`.`process` AS `process`,`processing_prod_view`.`batch_id` AS `batch_id`,`processing_prod_view`.`date` AS `date`,`processing_prod_view`.`batch_status` AS `batch_status`,`processing_prod_view`.`flowering_id_name` AS `flowering_id_name`,`processing_prod_view`.`harvest_id` AS `harvest_id`,`processing_prod_view`.`test_id` AS `test_id`,if((`processing_prod_view`.`test_id` is null),`processing_prod_view`.`flowering_id_name`,concat(`processing_prod_view`.`flowering_id_name`,'-',`processing_prod_view`.`test_id`)) AS `flowering_crop`,if((`processing_prod_view`.`test_id` is null),`processing_prod_view`.`harvest_id`,concat(`processing_prod_view`.`harvest_id`,'-',`processing_prod_view`.`test_id`)) AS `harvest_name`,`processing_prod_view`.`property_id` AS `property_id`,`processing_prod_view`.`harvest_date` AS `harvest_date`,`processing_prod_view`.`harvest_week` AS `harvest_week`,`processing_prod_view`.`harvest_year` AS `harvest_year`,`processing_prod_view`.`harvest_year_week` AS `harvest_year_week`,`processing_prod_view`.`harvest_type` AS `harvest_type`,`processing_prod_view`.`flower_plant_count` AS `flower_plant_count`,`processing_prod_view`.`harvest_plant_count` AS `harvest_plant_count`,`processing_prod_view`.`strain_code` AS `strain_code`,`processing_prod_view`.`strain_name` AS `strain_name`,`processing_prod_view`.`input_category` AS `input_category`,`processing_prod_view`.`input_category_type` AS `input_category_type`,`processing_prod_view`.`input_product_size` AS `input_product_size`,`processing_prod_view`.`input_product_grade` AS `input_product_grade`,`processing_prod_view`.`input_quantity` AS `input_quantity`,`processing_prod_view`.`output_category` AS `output_category`,`processing_prod_view`.`output_category_type` AS `output_category_type`,`processing_prod_view`.`output_size` AS `output_size`,`processing_prod_view`.`output_grade` AS `output_grade`,`processing_prod_view`.`output_quantity` AS `output_quantity` from `processing`.`processing_prod_view` order by `harvest_year_week` desc,`harvest_name`;

-- View: cannabis_license
CREATE ALGORITHM=UNDEFINED DEFINER=`mark`@`%` SQL SECURITY DEFINER VIEW `cannabis_license` AS select `cl`.`id` AS `id`,`cl`.`property` AS `property`,`cl`.`category` AS `category`,`cl`.`type` AS `type`,`cl`.`license_term` AS `license_term`,`cl`.`license_designation` AS `license_designation`,`cl`.`business_entity` AS `business_entity`,`cl`.`number` AS `number`,`cl`.`short_number` AS `short_number`,`cl`.`date_start` AS `date_start`,`cl`.`date_end` AS `date_end`,`cl`.`date_renew` AS `date_renew`,`cl`.`license_status` AS `license_status`,`cl`.`apn` AS `apn`,`cl`.`main_premises` AS `main_premises`,`cl`.`file_license` AS `file_license`,`cl`.`purchase_order` AS `purchase_order`,`cl`.`file_po` AS `file_po`,`cl`.`status` AS `status`,`cl`.`license_size` AS `license_size`,`cl`.`created_on` AS `created_on`,`cl`.`created_by` AS `created_by`,`cl`.`modified_on` AS `modified_on`,`cl`.`modified_by` AS `modified_by`,`cl`.`trigger` AS `trigger`,`cl`.`flag` AS `flag`,`cl`.`notes` AS `notes`,`cl`.`f1` AS `f1`,`cl`.`f2` AS `f2`,`cl`.`f3` AS `f3`,`cl`.`f4` AS `f4`,`cl`.`f5` AS `f5` from `pacstone`.`cannabis_license` `cl` where (`cl`.`status` = 'Active');

-- View: category
CREATE ALGORITHM=UNDEFINED DEFINER=`mark`@`%` SQL SECURITY DEFINER VIEW `category` AS select `c`.`code` AS `category_code`,`c`.`name` AS `category_name`,`ct`.`name` AS `category_type_name`,`ct`.`description` AS `category_type_description`,`c`.`id` AS `Category ID`,`ct`.`id` AS `Category Type ID` from ((`product_sku`.`category` `c` left join `product_sku`.`product_combination` `prod` on((`c`.`id` = `prod`.`category`))) left join `product_sku`.`category_type` `ct` on((`ct`.`id` = `prod`.`category_type`)));

-- View: category_type
CREATE ALGORITHM=UNDEFINED DEFINER=`mark`@`%` SQL SECURITY DEFINER VIEW `category_type` AS select `ct`.`id` AS `Category Type ID`,`ct`.`name` AS `category_type_name`,`ct`.`description` AS `category_type_description` from `product_sku`.`category_type` `ct`;

-- View: clone_cutting_view
CREATE ALGORITHM=UNDEFINED DEFINER=`mark`@`%` SQL SECURITY DEFINER VIEW `clone_cutting_view` AS select `cultivation`.`clone_cutting`.`id` AS `id`,`cultivation`.`clone_cutting`.`schedule_detail_id` AS `schedule_detail_id`,`cultivation`.`clone_cutting`.`batch_id` AS `batch_id`,`cultivation`.`clone_cutting`.`date` AS `date`,`cultivation`.`clone_cutting`.`location_id` AS `location_id`,`cultivation`.`clone_cutting`.`strain_id` AS `strain_id`,`cultivation`.`clone_cutting`.`metrc_plant_tag` AS `metrc_plant_tag`,`cultivation`.`clone_cutting`.`metrc_package_tag` AS `metrc_package_tag`,`cultivation`.`clone_cutting`.`source_metrc_id` AS `source_metrc_id`,`cultivation`.`clone_cutting`.`quantity` AS `quantity`,`cultivation`.`clone_cutting`.`notes` AS `notes`,`cultivation`.`clone_cutting`.`metrc_item_id` AS `metrc_item_id`,`cultivation`.`clone_cutting`.`metrc_item_name` AS `metrc_item_name`,`cultivation`.`clone_cutting`.`trade_sample` AS `trade_sample`,`cultivation`.`clone_cutting`.`donation` AS `donation`,`cultivation`.`clone_cutting`.`metrc_location` AS `metrc_location`,`cultivation`.`clone_cutting`.`metrc_blank` AS `metrc_blank`,`cultivation`.`clone_cutting`.`metrc_note` AS `metrc_note`,`cultivation`.`clone_cutting`.`status` AS `status`,`cultivation`.`clone_cutting`.`action` AS `action`,`cultivation`.`clone_cutting`.`user` AS `user`,`cultivation`.`clone_cutting`.`created_by` AS `created_by`,`cultivation`.`clone_cutting`.`created_on` AS `created_on`,`cultivation`.`clone_cutting`.`modified_by` AS `modified_by`,`cultivation`.`clone_cutting`.`modified_on` AS `modified_on`,`cultivation`.`clone_cutting`.`flag` AS `flag`,`cultivation`.`clone_cutting`.`trigger` AS `trigger`,`cultivation`.`clone_cutting`.`source_id` AS `source_id`,`cultivation`.`clone_cutting`.`clone_id` AS `clone_id` from `cultivation`.`clone_cutting`;

-- View: clone_inventory
CREATE ALGORITHM=UNDEFINED DEFINER=`mark`@`%` SQL SECURITY DEFINER VIEW `clone_inventory` AS select `cl`.`metrc_package_tag` AS `metrc_package_tag`,`cl`.`quantity` AS `quantity`,`b`.`name` AS `batch_name`,`b`.`property_id` AS `property_id`,`b`.`date` AS `date`,`b`.`week` AS `week`,`b`.`year` AS `year`,`b`.`year_week` AS `year_week`,`b`.`license_id` AS `license_id`,`b`.`strain_id` AS `strain_id`,`b`.`test_id` AS `test_id`,`l`.`location_string` AS `location_string`,`cl`.`location_name` AS `room`,`cl`.`hardening_date` AS `hardening_date` from ((`cultivation`.`clones` `cl` left join `pacstone`.`batch` `b` on((convert(`b`.`id` using utf8mb4) = `cl`.`batch_id`))) left join `pacstone`.`location` `l` on((`cl`.`location_id` = convert(`l`.`id` using utf8mb4)))) where (`cl`.`status` = 'Active');

-- View: crop_totals
CREATE ALGORITHM=UNDEFINED DEFINER=`mark`@`%` SQL SECURITY DEFINER VIEW `crop_totals` AS with `cte` as (select `cultivation`.`harvesting`.`crop_id` AS `crop_id`,sum(if(regexp_like(`cultivation`.`harvesting`.`harvest_id`,'-M$'),0,`cultivation`.`harvesting`.`plant_count_harvested`)) AS `plant_count_harvested_sum`,sum(if(regexp_like(`cultivation`.`harvesting`.`harvest_id`,'-M$'),0,`cultivation`.`harvesting`.`plant_count_received`)) AS `plant_count_received_sum`,sum(`cultivation`.`harvesting`.`wet`) AS `wet_sum`,sum(`cultivation`.`harvesting`.`waste`) AS `waste_sum`,count(0) AS `harvesting_record_count`,sum(if(regexp_like(`cultivation`.`harvesting`.`harvest_id`,'-M$'),0,1)) AS `harvesting_full_record_count`,sum(if(regexp_like(`cultivation`.`harvesting`.`harvest_id`,'-M$'),1,0)) AS `harvesting_manicure_record_count` from `cultivation`.`harvesting` group by `cultivation`.`harvesting`.`crop_id`) select `c`.`id` AS `crop_id`,`c`.`label` AS `label`,`c`.`strain` AS `strain`,`c`.`harvest_year` AS `harvest_year`,`c`.`harvest_week` AS `harvest_week`,`c`.`harvest_year_week` AS `harvest_year_week`,`c`.`property` AS `property`,`cte`.`plant_count_harvested_sum` AS `plant_count_harvested_sum`,`cte`.`plant_count_received_sum` AS `plant_count_received_sum`,`cte`.`wet_sum` AS `wet_sum`,`cte`.`waste_sum` AS `waste_sum`,`cte`.`harvesting_record_count` AS `harvesting_record_count`,`cte`.`harvesting_full_record_count` AS `harvesting_full_record_count`,`cte`.`harvesting_manicure_record_count` AS `harvesting_manicure_record_count` from (`cultivation`.`crop` `c` join `cte` on((`c`.`id` = `cte`.`crop_id`)));

-- View: cultivation_waste
CREATE ALGORITHM=UNDEFINED DEFINER=`mark`@`%` SQL SECURITY DEFINER VIEW `cultivation_waste` AS select `cultivation`.`cultivation_waste`.`id` AS `id`,`cultivation`.`cultivation_waste`.`source_id` AS `source_id`,`cultivation`.`cultivation_waste`.`date` AS `date`,`cultivation`.`cultivation_waste`.`metrc_id` AS `metrc_id`,`cultivation`.`cultivation_waste`.`stage_id` AS `stage_id`,`cultivation`.`cultivation_waste`.`source_metrc_id` AS `source_metrc_id`,`cultivation`.`cultivation_waste`.`metrc_item_id` AS `metrc_item_id`,`cultivation`.`cultivation_waste`.`metrc_item_name` AS `metrc_item_name`,`cultivation`.`cultivation_waste`.`waste_method_name` AS `waste_method_name`,`cultivation`.`cultivation_waste`.`mixed_material` AS `mixed_material`,`cultivation`.`cultivation_waste`.`uom` AS `uom`,`cultivation`.`cultivation_waste`.`quantity` AS `quantity`,`cultivation`.`cultivation_waste`.`reason_name` AS `reason_name`,`cultivation`.`cultivation_waste`.`note` AS `note`,`cultivation`.`cultivation_waste`.`status` AS `status`,`cultivation`.`cultivation_waste`.`action` AS `action`,`cultivation`.`cultivation_waste`.`user` AS `user`,`cultivation`.`cultivation_waste`.`created_by` AS `created_by`,`cultivation`.`cultivation_waste`.`created_on` AS `created_on`,`cultivation`.`cultivation_waste`.`modified_by` AS `modified_by`,`cultivation`.`cultivation_waste`.`modified_on` AS `modified_on`,`cultivation`.`cultivation_waste`.`flag` AS `flag`,`cultivation`.`cultivation_waste`.`trigger` AS `trigger`,`cultivation`.`cultivation_waste`.`reason_detail` AS `reason_detail`,`cultivation`.`cultivation_waste`.`clone_id` AS `clone_id`,`cultivation`.`cultivation_waste`.`veg_id` AS `veg_id`,`cultivation`.`cultivation_waste`.`flowering_id` AS `flowering_id`,`cultivation`.`cultivation_waste`.`harvest_id` AS `harvest_id`,`cultivation`.`cultivation_waste`.`batch_id` AS `batch_id`,`cultivation`.`cultivation_waste`.`strain_id` AS `strain_id`,`cultivation`.`cultivation_waste`.`plant_transfer_id` AS `plant_transfer_id` from `cultivation`.`cultivation_waste`;

-- View: dcc_license
CREATE ALGORITHM=UNDEFINED DEFINER=`mark`@`%` SQL SECURITY DEFINER VIEW `dcc_license` AS select `sales`.`dcc_license`.`licenseNumber` AS `licenseNumber`,`sales`.`dcc_license`.`licenseType` AS `licenseType`,`sales`.`dcc_license`.`issuedDate` AS `issuedDate`,`sales`.`dcc_license`.`addressLine1` AS `addressLine1`,`sales`.`dcc_license`.`addressLine2` AS `addressLine2`,`sales`.`dcc_license`.`premiseCity` AS `premiseCity`,`sales`.`dcc_license`.`premiseState` AS `premiseState`,`sales`.`dcc_license`.`premiseZip` AS `premiseZip`,`sales`.`dcc_license`.`premiseCounty` AS `premiseCounty`,`sales`.`dcc_license`.`licenseStatus` AS `licenseStatus`,`sales`.`dcc_license`.`businessStructure` AS `businessStructure`,`sales`.`dcc_license`.`medicinal` AS `medicinal`,`sales`.`dcc_license`.`adultUse` AS `adultUse`,`sales`.`dcc_license`.`microActivityRetailerNonStorefront` AS `microActivityRetailerNonStorefront`,`sales`.`dcc_license`.`microActivityRetailer` AS `microActivityRetailer`,`sales`.`dcc_license`.`microActivityDistributor` AS `microActivityDistributor`,`sales`.`dcc_license`.`microActivityDistributorTransportOnly` AS `microActivityDistributorTransportOnly`,`sales`.`dcc_license`.`microActivityLevel1Manufacturer` AS `microActivityLevel1Manufacturer`,`sales`.`dcc_license`.`microActivityCultivator` AS `microActivityCultivator`,`sales`.`dcc_license`.`expiryDate` AS `expiryDate`,`sales`.`dcc_license`.`businessName` AS `businessName`,`sales`.`dcc_license`.`businessDBA` AS `businessDBA`,`sales`.`dcc_license`.`businessOwner` AS `businessOwner`,`sales`.`dcc_license`.`website` AS `website`,`sales`.`dcc_license`.`phone` AS `phone`,`sales`.`dcc_license`.`email` AS `email` from `sales`.`dcc_license`;

-- View: distributor_order_items
CREATE ALGORITHM=UNDEFINED DEFINER=`mark`@`%` SQL SECURITY DEFINER VIEW `distributor_order_items` AS select `di`.`id` AS `id`,`od`.`uid` AS `order_id`,`sku`.`sku` AS `sku_id`,`sku`.`name` AS `sku_name`,`sku`.`kss_id` AS `kss_id`,`di`.`strain_id` AS `strain_id`,`b`.`name` AS `brand`,`cat`.`name` AS `product_category`,`ct`.`name` AS `product_type`,`p`.`name` AS `package`,`ps`.`code` AS `package_size`,`pacstone`.`uom`.`name` AS `uom`,`di`.`quantity` AS `quantity`,`di`.`thc_result` AS `thc_label`,`di`.`product_batch_number` AS `product_batch_number`,`di`.`metrc_id` AS `metrc_id`,`pi`.`source_metrc_id` AS `source_metrc_id`,`od`.`location_id` AS `location_id`,`c`.`name` AS `vendor_name`,`od`.`ship_date` AS `ship_date`,`od`.`metrc_manifest` AS `metrc_manifest`,`od`.`action` AS `order_status` from (((((((((((`transfers`.`order_distributor_item` `di` left join `transfers`.`order_distributor` `od` on((`di`.`id_order` = `od`.`id`))) left join `crm`.`company_org` `c` on((`od`.`vendor_id` = convert(`c`.`id` using utf8mb4)))) left join `product_sku`.`sku_view` `sku` on((`di`.`product_sku` = `sku`.`id`))) left join `product_sku`.`category` `cat` on((`di`.`product_category` = `cat`.`id`))) left join `product_sku`.`category_type` `ct` on((`di`.`product_type` = convert(`ct`.`id` using utf8mb4)))) left join `product_sku`.`package` `p` on((`di`.`package_id` = `p`.`id`))) left join `product_sku`.`package_size` `ps` on((`di`.`package_weight` = `ps`.`id`))) left join `pacstone`.`brand` `b` on((`di`.`brand` = convert(`b`.`id` using utf8mb4)))) left join `pacstone`.`uom` on((`di`.`uom_id` = convert(`pacstone`.`uom`.`id` using utf8mb4)))) left join `packing`.`product_inventory` `pi` on((`di`.`packing_id` = `pi`.`id`))) left join `cultivation`.`harvesting_ref` `h` on((`di`.`harvest_id` = `h`.`id`))) where ((`od`.`action` <> 'Deleted') and (`di`.`action` <> 'Deleted'));

-- View: doi_inventory
CREATE ALGORITHM=UNDEFINED DEFINER=`mark`@`%` SQL SECURITY DEFINER VIEW `doi_inventory` AS select `i`.`id` AS `id`,`i`.`Location` AS `Location`,`sku`.`SupplierID` AS `Brand`,`i`.`ProductID` AS `ProductID`,`sku`.`ProductName` AS `ProductName`,`sv`.`strain_code` AS `strain_id`,`sv`.`strain_name` AS `strain_name`,`i`.`ExpirationDate` AS `ExpirationDate`,`i`.`BatchCode` AS `BatchCode`,`i`.`Inventory` AS `Inventory`,`i`.`BinLotID` AS `BinLotID`,`d`.`UnitsCase` AS `UnitsCase`,`d`.`SalesTrend` AS `SalesTrend`,`d`.`UpcomingOrders` AS `UpcomingOrders`,`d`.`ALAvail` AS `ALAvail`,`d`.`ALDOI` AS `ALDOI`,`d`.`SVAvail` AS `SVAvail`,`d`.`SVDOI` AS `SVDOI`,`d`.`TotalAvailableUnits` AS `TotalAvailableUnits`,`d`.`MonthlySalesUnits` AS `MonthlySalesUnits`,`d`.`SalesHist` AS `SalesHist`,`d`.`KSSDOI` AS `KSSDOI`,`d`.`KSSMonthsofInv` AS `KSSMonthsofInv`,`d`.`TargetDOI` AS `TargetDOI`,`d`.`TargetUnits` AS `TargetUnits`,`d`.`ToBuyorSell` AS `ToBuyorSell`,`sku`.`CaseEquiv` AS `CaseEquiv`,`sku`.`CasePrice` AS `CasePrice`,`sku`.`CasesperLayer` AS `CasesPerLayer`,`sku`.`CasesperPallet` AS `CasesPerPallet`,`sku`.`Ounces` AS `Ounces`,`sku`.`PackageID` AS `PackageID`,`sku`.`Price` AS `Price`,`sku`.`ProductTypeID` AS `ProductTypeID`,`sku`.`Rank` AS `Rank`,`sku`.`SellByCaseOnly` AS `SellByCaseOnly`,`sku`.`ShelfLifeDays` AS `ShelfLifeDays`,`sku`.`Status` AS `Status`,`sku`.`Weight` AS `Weight` from (((`sales`.`kss_inventory` `i` left join `sales`.`kss_sku` `sku` on((`i`.`ProductID` = `sku`.`id`))) left join `sales`.`kss_doi` `d` on((`i`.`ProductID` = `d`.`ProductID`))) left join `product_sku`.`sku_view` `sv` on((`i`.`ProductID` = `sv`.`kss_id`))) where (`i`.`Inventory` > 0.00);

-- View: employee
CREATE ALGORITHM=UNDEFINED DEFINER=`mark`@`%` SQL SECURITY DEFINER VIEW `employee` AS select `ploy`.`first_name` AS `First Name`,`ploy`.`last_name` AS `last name`,`ploy`.`employee_id` AS `Employee ID`,`role`.`email` AS `Email Account`,`ploy`.`primary_property` AS `Organization`,left(`ploy`.`primary_org`,locate(' ',`ploy`.`primary_org`)) AS `Department Number`,right(`ploy`.`primary_org`,(length(`ploy`.`primary_org`) - locate(' ',`ploy`.`primary_org`))) AS `Department`,`ploy`.`position` AS `Position`,`ploy`.`supervisor` AS `Supervisor`,if((`ploy`.`phone` is null),`ploy`.`mobile_phone`,`ploy`.`phone`) AS `Phone Number` from (`pacstone`.`employee` `ploy` left join `pacstone`.`account` `role` on((`ploy`.`id` = `role`.`employee`))) where (`ploy`.`status` = 'ACTIVE');

-- View: flower_historical_records
CREATE ALGORITHM=UNDEFINED DEFINER=`mark`@`%` SQL SECURITY DEFINER VIEW `flower_historical_records` AS select `f`.`flowering_id` AS `flowering_id`,`c`.`name` AS `canopy`,`c`.`location_string` AS `location_string`,`f`.`property_id` AS `property_id`,`f`.`test_id` AS `test_id`,`f`.`date` AS `date`,`f`.`week_num` AS `week_num`,`f`.`year_num` AS `year_num`,`f`.`license_id` AS `license_id`,`f`.`strain_id` AS `strain_id`,`f`.`location_3` AS `location_3`,`f`.`location_5` AS `location_5`,`f`.`plant_count` AS `plant_count`,`f`.`harvest_date` AS `harvest_date`,`f`.`harvest_id` AS `harvest_id`,`f`.`status` AS `status` from (`cultivation`.`flowering` `f` left join `pacstone`.`canopy` `c` on((`f`.`canopy_id` = convert(`c`.`id` using utf8mb4)))) where (year(`f`.`date`) > 2020);

-- View: flower_schedule
CREATE ALGORITHM=UNDEFINED DEFINER=`mark`@`%` SQL SECURITY DEFINER VIEW `flower_schedule` AS select `f`.`flowering_id` AS `flowering_id`,`f`.`canopy_id` AS `canopy_id`,`f`.`property_id` AS `property_id`,`f`.`test_id` AS `test_id`,`f`.`date` AS `date`,`f`.`week_num` AS `week_num`,`f`.`year_num` AS `year_num`,`f`.`license_id` AS `license_id`,`f`.`strain_id` AS `strain_id`,`f`.`location_3` AS `location_3`,`f`.`location_5` AS `location_5`,`f`.`plant_count` AS `plant_count`,`f`.`harvest_date` AS `harvest_date`,week(`f`.`harvest_date`,0) AS `harvest_week`,`f`.`harvest_id` AS `harvest_id`,`f`.`status` AS `status` from `cultivation`.`flowering` `f` where (((year(`f`.`date`) > 2021) and (`f`.`harvest_date` > now())) or (`f`.`harvest_date` is null));

-- View: flower_view
CREATE ALGORITHM=UNDEFINED DEFINER=`mark`@`%` SQL SECURITY DEFINER VIEW `flower_view` AS select `f`.`flowering_id` AS `flowering_id`,`c`.`name` AS `canopy`,`c`.`location_string` AS `location_string`,`f`.`property_id` AS `property_id`,`f`.`test_id` AS `test_id`,`f`.`date` AS `date`,`f`.`week_num` AS `week_num`,`f`.`year_num` AS `year_num`,`f`.`license_id` AS `license_id`,`f`.`strain_id` AS `strain_id`,`f`.`location_3` AS `location_3`,`f`.`location_5` AS `location_5`,`f`.`plant_count` AS `plant_count`,`f`.`harvest_date` AS `harvest_date`,`f`.`harvest_id` AS `harvest_id`,`f`.`status` AS `status` from (`cultivation`.`flowering` `f` left join `pacstone`.`canopy` `c` on((`f`.`canopy_id` = convert(`c`.`id` using utf8mb4)))) where ((year(`f`.`date`) > 2019) and (`f`.`status` = 'Active'));

-- View: harvest_metrc_packages
CREATE ALGORITHM=UNDEFINED DEFINER=`mark`@`%` SQL SECURITY DEFINER VIEW `harvest_metrc_packages` AS select `cultivation`.`harvest_metrc_packages`.`id` AS `id`,`cultivation`.`harvest_metrc_packages`.`harvesting_id` AS `harvesting_id`,`cultivation`.`harvest_metrc_packages`.`metrc_id` AS `metrc_id`,`cultivation`.`harvest_metrc_packages`.`weight` AS `weight`,`cultivation`.`harvest_metrc_packages`.`bin_quantity` AS `bin_quantity`,`cultivation`.`harvest_metrc_packages`.`notes` AS `notes`,`cultivation`.`harvest_metrc_packages`.`status` AS `status`,`cultivation`.`harvest_metrc_packages`.`action` AS `action`,`cultivation`.`harvest_metrc_packages`.`created_on` AS `created_on`,`cultivation`.`harvest_metrc_packages`.`created_by` AS `created_by`,`cultivation`.`harvest_metrc_packages`.`modified_on` AS `modified_on`,`cultivation`.`harvest_metrc_packages`.`modified_by` AS `modified_by`,`cultivation`.`harvest_metrc_packages`.`flag` AS `flag`,`cultivation`.`harvest_metrc_packages`.`trigger` AS `trigger`,`cultivation`.`harvest_metrc_packages`.`plant_count_harvested` AS `plant_count_harvested` from `cultivation`.`harvest_metrc_packages`;

-- View: harvest_prod_view
CREATE ALGORITHM=UNDEFINED DEFINER=`mark`@`%` SQL SECURITY DEFINER VIEW `harvest_prod_view` AS select `h`.`flowering_id` AS `flowering_id`,`h`.`id` AS `harvesting_id`,`h`.`processing_metrc_id` AS `metrc_tag`,'Harvest' AS `process`,`h`.`id` AS `batch_id`,`h`.`date` AS `date`,'Finished' AS `batch_status`,`f`.`flowering_id` AS `flowering_id_name`,`h`.`harvest_id` AS `harvest_id`,`h`.`test_id` AS `test_id`,`h`.`property_id` AS `property_id`,`h`.`date` AS `harvest_date`,`h`.`week_num` AS `harvest_week`,`h`.`year_num` AS `harvest_year`,concat(`h`.`year_num`,right(concat('0',`h`.`week_num`),2)) AS `harvest_year_week`,`h`.`harvest_type` AS `harvest_type`,`h`.`license_id` AS `license_id`,`s`.`strain_code` AS `strain_code`,`s`.`name` AS `strain_name`,'Fresh Cannabis Plant' AS `category`,if(((`h`.`harvest_type` = 'Manicure') or (`h`.`harvest_type` = 'Fresh Frozen')),'Buds','Plants') AS `category_type`,NULL AS `product_size`,NULL AS `product_grade`,if(((`h`.`harvest_type` = 'Manicure') or (`h`.`harvest_type` = 'Fresh Frozen')),NULL,sum(`f`.`plant_count`)) AS `flower_plant_count`,if(((`h`.`harvest_type` = 'Manicure') or (`h`.`harvest_type` = 'Fresh Frozen')),NULL,sum(`h`.`plant_count_harvested`)) AS `harvest_plant_count`,NULL AS `input_quantity`,sum(`h`.`wet`) AS `output_quantity` from ((`cultivation`.`harvesting` `h` left join `pacstone`.`plant_strain` `s` on((`s`.`id` = `h`.`strain_id`))) left join `cultivation`.`flowering` `f` on((`f`.`id` = `h`.`flowering_id`))) where (`h`.`wet` > 0) group by `h`.`id`,`h`.`processing_metrc_id`,`h`.`test_id`,`h`.`harvest_id`,`h`.`date`,`h`.`property_id`,`h`.`date`,`h`.`week_num`,`h`.`year_num`,`h`.`harvest_type`,`s`.`strain_code`,`s`.`name`,`h`.`id`,`h`.`flowering_id`,`f`.`flowering_id` order by `h`.`date`;

-- View: harvest_view
CREATE ALGORITHM=UNDEFINED DEFINER=`mark`@`%` SQL SECURITY DEFINER VIEW `harvest_view` AS select `h`.`flowering_id` AS `flowering_id`,`h`.`harvest_id` AS `harvest_id`,`h`.`property_id` AS `property_id`,`h`.`test_id` AS `test_id`,`h`.`date` AS `date`,`h`.`week_num` AS `week_num`,`h`.`year_num` AS `year_num`,`h`.`license_id` AS `license_id`,`h`.`strain_id` AS `strain_id`,`h`.`plant_count_harvested` AS `plant_count_harvested`,`h`.`plant_count_received` AS `plant_count_received`,`h`.`wet` AS `wet`,`h`.`waste` AS `waste`,`h`.`harvest_metrc_id` AS `harvest_metrc_id`,`h`.`processing_metrc_id` AS `processing_metrc_id`,`h`.`metrc_harvest_name` AS `metrc_name`,`f`.`plant_count` AS `planted_count` from (`cultivation`.`harvesting` `h` left join `cultivation`.`flowering` `f` on((`h`.`flowering_id` = `f`.`id`))) where (year(`h`.`date`) > 2019);

-- View: iap_view
CREATE ALGORITHM=UNDEFINED DEFINER=`nieko`@`%` SQL SECURITY DEFINER VIEW `iap_view` AS select `item`.`name` AS `Item`,`item`.`version` AS `version`,sum(if((`ial`.`location` = 'prop02'),`ial`.`qty_base`,0)) AS `EB_inventory`,sum(if((`ial`.`location` = 'prop01'),`ial`.`qty_base`,0)) AS `CS_inventory`,sum(if((`ial`.`location` = '124e6f02'),`ial`.`qty_base`,0)) AS `DR_inventory`,sum(if((`ial`.`location` = 'prop10'),`ial`.`qty_base`,0)) AS `IV_inventory`,sum(if((`ial`.`location` = 'prop03'),`ial`.`qty_base`,0)) AS `MV_inventory`,sum(if((`ial`.`location` = 'prop04'),`ial`.`qty_base`,0)) AS `SP_inventory`,sum(if((`ial`.`location` = 'invVendor'),`ial`.`qty_base`,0)) AS `Vendor_inventory`,sum(if((`ial`.`location` = 'invVehicle'),`ial`.`qty_base`,0)) AS `Intransit_inventory`,(sum(if((`ial`.`location` in ('prop02','prop01','124e6f02','prop10','prop03','prop04','invVehicle')),`ial`.`qty_base`,0)) + sum(if((`ial`.`location` = 'invVendor'),`ial`.`qty_base`,0))) AS `total_Inventory`,max(`item`.`cat1`) AS `cat1`,max(`item`.`cat2`) AS `cat2`,max(`item`.`cat3`) AS `cat3`,max(`item`.`cat4`) AS `cat4`,max(`item`.`cat5`) AS `cat5`,max(`item`.`cat6`) AS `cat6`,max(`item`.`cat7`) AS `cat7`,`item`.`id` AS `item_id` from (`pacstone_inventory`.`inventory_item` `item` left join `pacstone_inventory`.`inventory_at_location` `ial` on((`item`.`id` = `ial`.`inventory_item`))) group by `item`.`id` order by `item`.`name`;

-- View: iap_view_office_supplies
CREATE ALGORITHM=UNDEFINED DEFINER=`mark`@`%` SQL SECURITY DEFINER VIEW `iap_view_office_supplies` AS select `item`.`id` AS `ID`,`item`.`name` AS `Item`,`item`.`version` AS `Version`,`item`.`status` AS `Status`,max(if((`ial`.`location_level1` = 'prop02'),`ial`.`qty_base`,0)) AS `EB`,max(if((`ial`.`location` = 'prop01'),`ial`.`qty_base`,0)) AS `CS`,max(if((`ial`.`location` = 'prop04'),`ial`.`qty_base`,0)) AS `SP`,max(if((`ial`.`location` = '124e6f02'),`ial`.`qty_base`,0)) AS `DR`,max(if((`ial`.`location` = 'prop10'),`ial`.`qty_base`,0)) AS `IV`,max(if((`ial`.`location` = 'prop03'),`ial`.`qty_base`,0)) AS `MV`,max(if((`ial`.`location` = 'invVehicle'),`ial`.`qty_base`,0)) AS `Vehicle`,max(if((`ial`.`location` = 'invVendor'),`ial`.`qty_base`,0)) AS `Vendor`,sum(if((`ial`.`location_level1` in ('prop02','prop01','124e6f02','prop10','prop03','prop04','invVehicle')),`ial`.`qty_base`,0)) AS `Inventory On Hand`,(sum(if((`ial`.`location_level1` in ('prop02','prop01','124e6f02','prop10','prop03','prop04','invVehicle')),`ial`.`qty_base`,0)) + sum(if((`ial`.`location` = 'invVendor'),`ial`.`qty_base`,0))) AS `Total Inventory`,max(`item`.`cat1`) AS `cat1`,max(`item`.`cat2`) AS `cat2`,max(`item`.`cat3`) AS `cat3`,max(`item`.`cat4`) AS `cat4`,max(`item`.`cat5`) AS `cat5`,max(`item`.`cat6`) AS `cat6`,max(`item`.`cat7`) AS `cat7`,`item`.`created_on` AS `Created On` from (`pacstone_inventory`.`inventory_item` `item` left join `pacstone_inventory`.`inventory_at_location` `ial` on((`item`.`id` = `ial`.`inventory_item`))) where ((`item`.`inventory_item_type` = 'officesupplies01') and (`ial`.`status` = 'Active') and (`ial`.`qty_base` <> 0) and (`item`.`status` in ('Active','Pending Deactivation'))) group by `item`.`id` order by `item`.`created_on`;

-- View: iap_view_ppe_uniforms
CREATE ALGORITHM=UNDEFINED DEFINER=`mark`@`%` SQL SECURITY DEFINER VIEW `iap_view_ppe_uniforms` AS select `item`.`id` AS `ID`,`item`.`name` AS `Item`,`item`.`version` AS `Version`,`item`.`status` AS `Status`,max(if((`ial`.`location_level1` = 'prop02'),`ial`.`qty_base`,0)) AS `EB`,max(if((`ial`.`location` = 'prop01'),`ial`.`qty_base`,0)) AS `CS`,max(if((`ial`.`location` = 'prop04'),`ial`.`qty_base`,0)) AS `SP`,max(if((`ial`.`location` = '124e6f02'),`ial`.`qty_base`,0)) AS `DR`,max(if((`ial`.`location` = 'prop10'),`ial`.`qty_base`,0)) AS `IV`,max(if((`ial`.`location` = 'prop03'),`ial`.`qty_base`,0)) AS `MV`,max(if((`ial`.`location` = 'invVehicle'),`ial`.`qty_base`,0)) AS `Vehicle`,max(if((`ial`.`location` = 'invVendor'),`ial`.`qty_base`,0)) AS `Vendor`,sum(if((`ial`.`location_level1` in ('prop02','prop01','124e6f02','prop10','prop03','prop04','invVehicle')),`ial`.`qty_base`,0)) AS `Inventory On Hand`,(sum(if((`ial`.`location_level1` in ('prop02','prop01','124e6f02','prop10','prop03','prop04','invVehicle')),`ial`.`qty_base`,0)) + sum(if((`ial`.`location` = 'invVendor'),`ial`.`qty_base`,0))) AS `Total Inventory`,max(`item`.`cat1`) AS `cat1`,max(`item`.`cat2`) AS `cat2`,max(`item`.`cat3`) AS `cat3`,max(`item`.`cat4`) AS `cat4`,max(`item`.`cat5`) AS `cat5`,max(`item`.`cat6`) AS `cat6`,max(`item`.`cat7`) AS `cat7`,`item`.`created_on` AS `Created On` from (`pacstone_inventory`.`inventory_item` `item` left join `pacstone_inventory`.`inventory_at_location` `ial` on((`item`.`id` = `ial`.`inventory_item`))) where ((`item`.`inventory_item_type` = 'prodUniPPE01') and (`ial`.`status` = 'Active') and (`ial`.`qty_base` <> 0) and (`item`.`status` <> 'Inactive')) group by `item`.`id` order by `item`.`created_on`;

-- View: iap_view_prodmaterials
CREATE ALGORITHM=UNDEFINED DEFINER=`mark`@`%` SQL SECURITY DEFINER VIEW `iap_view_prodmaterials` AS select `item`.`id` AS `ID`,`item`.`name` AS `Item`,`item`.`version` AS `Version`,`item`.`status` AS `Status`,max(if((`ial`.`location_level1` = 'prop02'),`ial`.`qty_base`,0)) AS `EB`,max(if((`ial`.`location` = 'prop01'),`ial`.`qty_base`,0)) AS `CS`,max(if((`ial`.`location` = 'prop04'),`ial`.`qty_base`,0)) AS `SP`,max(if((`ial`.`location` = '124e6f02'),`ial`.`qty_base`,0)) AS `DR`,max(if((`ial`.`location` = 'prop10'),`ial`.`qty_base`,0)) AS `IV`,max(if((`ial`.`location` = 'prop03'),`ial`.`qty_base`,0)) AS `MV`,max(if((`ial`.`location` = 'invVehicle'),`ial`.`qty_base`,0)) AS `Vehicle`,max(if((`ial`.`location` = 'invVendor'),`ial`.`qty_base`,0)) AS `Vendor`,sum(if((`ial`.`location_level1` in ('prop02','prop01','124e6f02','prop10','prop03','prop04','invVehicle')),`ial`.`qty_base`,0)) AS `Inventory On Hand`,(sum(if((`ial`.`location_level1` in ('prop02','prop01','124e6f02','prop10','prop03','prop04','invVehicle')),`ial`.`qty_base`,0)) + sum(if((`ial`.`location` = 'invVendor'),`ial`.`qty_base`,0))) AS `Total Inventory`,max(`item`.`cat1`) AS `cat1`,max(`item`.`cat2`) AS `cat2`,max(`item`.`cat3`) AS `cat3`,max(`item`.`cat4`) AS `cat4`,max(`item`.`cat5`) AS `cat5`,max(`item`.`cat6`) AS `cat6`,max(`item`.`cat7`) AS `cat7`,`item`.`created_on` AS `Created On` from (`pacstone_inventory`.`inventory_item` `item` left join `pacstone_inventory`.`inventory_at_location` `ial` on((`item`.`id` = `ial`.`inventory_item`))) where ((`item`.`inventory_item_type` = 'prodMat01') and (`ial`.`status` = 'Active') and (`ial`.`qty_base` <> 0) and (`item`.`status` in ('Active','Pending Deactivation'))) group by `item`.`id` order by `item`.`created_on`;

-- View: iap_view_prodmaterials2
CREATE ALGORITHM=UNDEFINED DEFINER=`mark`@`%` SQL SECURITY DEFINER VIEW `iap_view_prodmaterials2` AS select `item`.`id` AS `ID`,`item`.`name` AS `Item`,`item`.`version` AS `Version`,`item`.`status` AS `Status`,max(if((`ial`.`location` = 'prop02'),`ial`.`qty_base`,0)) AS `EB`,max(if((`ial`.`location` = 'prop01'),`ial`.`qty_base`,0)) AS `CS`,max(if((`ial`.`location` = 'prop04'),`ial`.`qty_base`,0)) AS `SP`,max(if((`ial`.`location` = '124e6f02'),`ial`.`qty_base`,0)) AS `DR`,max(if((`ial`.`location` = 'prop10'),`ial`.`qty_base`,0)) AS `IV`,max(if((`ial`.`location` = 'prop03'),`ial`.`qty_base`,0)) AS `MV`,max(if((`ial`.`location` = 'invVehicle'),`ial`.`qty_base`,0)) AS `Vehicle`,max(if((`ial`.`location` = 'invVendor'),`ial`.`qty_base`,0)) AS `Vendor`,round(max(`prod`.`average use since October 2023`),0) AS `30 day use`,max(`item`.`cat1`) AS `cat1`,max(`item`.`cat2`) AS `cat2`,max(`item`.`cat3`) AS `cat3`,max(`item`.`cat4`) AS `cat4`,max(`item`.`cat5`) AS `cat5`,max(`item`.`cat6`) AS `cat6`,max(`item`.`cat7`) AS `cat7`,`item`.`created_on` AS `Created On` from ((((`pacstone_inventory`.`inventory_item` `item` left join `pacstone_inventory`.`inventory_at_location` `ial` on((`item`.`id` = `ial`.`inventory_item`))) left join `pacstone_inventory`.`inventory_transaction` `pi` on((`item`.`id` = `pi`.`inventory_item`))) left join `iap_view_prodmaterials_months` `prod` on((`item`.`name` = `prod`.`name`))) left join `iap_view_prodmaterials_months2` `prod2` on((`item`.`name` = `prod2`.`name`))) where ((`item`.`inventory_item_type` = 'prodMat01') and (`ial`.`status` = 'Active') and (`ial`.`qty_base` <> 0) and (`item`.`status` in ('Active','Pending Deactivation'))) group by `item`.`id` order by `item`.`created_on`;

-- View: iap_view_prodmaterials_months
CREATE ALGORITHM=UNDEFINED DEFINER=`mark`@`%` SQL SECURITY DEFINER VIEW `iap_view_prodmaterials_months` AS select `item`.`name` AS `name`,count(`pi`.`base_qty`) AS `counts`,sum(`pi`.`base_qty`) AS `totalsum`,(sum(`pi`.`base_qty`) / (((to_days('2023-10-01') - to_days(now())) * -(1)) / 30)) AS `average use since October 2023`,(((to_days('2023-10-16') - to_days(now())) * -(1)) / 30) AS `month_factorial`,sum((case when (month(`pi`.`created_on`) = 1) then `pi`.`base_qty` else 0 end)) AS `January_usecase`,concat((round((sum((case when (month(`pi`.`created_on`) = 1) then `pi`.`base_qty` else 0 end)) / sum(`pi`.`base_qty`)),2) * 100),'%') AS `January_%`,sum((case when (month(`pi`.`created_on`) = 2) then `pi`.`base_qty` else 0 end)) AS `Feb_usecase`,concat((round((sum((case when (month(`pi`.`created_on`) = 2) then `pi`.`base_qty` else 0 end)) / sum(`pi`.`base_qty`)),2) * 100),'%') AS `Feb_%`,sum((case when (month(`pi`.`created_on`) = 3) then `pi`.`base_qty` else 0 end)) AS `March_usecase`,concat((round((sum((case when (month(`pi`.`created_on`) = 3) then `pi`.`base_qty` else 0 end)) / sum(`pi`.`base_qty`)),2) * 100),'%') AS `March_%`,sum((case when (month(`pi`.`created_on`) = 4) then `pi`.`base_qty` else 0 end)) AS `April_usecase`,concat((round((sum((case when (month(`pi`.`created_on`) = 4) then `pi`.`base_qty` else 0 end)) / sum(`pi`.`base_qty`)),2) * 100),'%') AS `April_%`,sum((case when (month(`pi`.`created_on`) = 5) then `pi`.`base_qty` else 0 end)) AS `May_usecase`,concat((round((sum((case when (month(`pi`.`created_on`) = 5) then `pi`.`base_qty` else 0 end)) / sum(`pi`.`base_qty`)),2) * 100),'%') AS `May_%`,sum((case when (month(`pi`.`created_on`) = 6) then `pi`.`base_qty` else 0 end)) AS `June_usecase`,concat((round((sum((case when (month(`pi`.`created_on`) = 6) then `pi`.`base_qty` else 0 end)) / sum(`pi`.`base_qty`)),2) * 100),'%') AS `June_%`,sum((case when (month(`pi`.`created_on`) = 7) then `pi`.`base_qty` else 0 end)) AS `July_usecase`,concat((round((sum((case when (month(`pi`.`created_on`) = 7) then `pi`.`base_qty` else 0 end)) / sum(`pi`.`base_qty`)),2) * 100),'%') AS `July_%`,sum((case when (month(`pi`.`created_on`) = 8) then `pi`.`base_qty` else 0 end)) AS `August_usecase`,concat((round((sum((case when (month(`pi`.`created_on`) = 8) then `pi`.`base_qty` else 0 end)) / sum(`pi`.`base_qty`)),2) * 100),'%') AS `August_%`,sum((case when (month(`pi`.`created_on`) = 9) then `pi`.`base_qty` else 0 end)) AS `September_usecase`,concat((round((sum((case when (month(`pi`.`created_on`) = 9) then `pi`.`base_qty` else 0 end)) / sum(`pi`.`base_qty`)),2) * 100),'%') AS `September_%`,sum((case when (month(`pi`.`created_on`) = 10) then `pi`.`base_qty` else 0 end)) AS `October_usecase`,concat((round((sum((case when (month(`pi`.`created_on`) = 10) then `pi`.`base_qty` else 0 end)) / sum(`pi`.`base_qty`)),2) * 100),'%') AS `October_%`,sum((case when (month(`pi`.`created_on`) = 11) then `pi`.`base_qty` else 0 end)) AS `November_usecase`,concat((round((sum((case when (month(`pi`.`created_on`) = 11) then `pi`.`base_qty` else 0 end)) / sum(`pi`.`base_qty`)),2) * 100),'%') AS `November_%`,sum((case when (month(`pi`.`created_on`) = 12) then `pi`.`base_qty` else 0 end)) AS `December_usecase`,concat((round((sum((case when (month(`pi`.`created_on`) = 12) then `pi`.`base_qty` else 0 end)) / sum(`pi`.`base_qty`)),2) * 100),'%') AS `December_%` from (`pacstone_inventory`.`inventory_transaction` `pi` left join `pacstone_inventory`.`inventory_item` `item` on((`item`.`id` = `pi`.`inventory_item`))) where ((`pi`.`transaction_type` = 'transType001') and (((year(`pi`.`created_on`) >= 2023) and (month(`pi`.`created_on`) >= 10)) or (year(`pi`.`created_on`) > 2023))) group by `pi`.`inventory_item` order by `item`.`name`;

-- View: iap_view_prodmaterials_months2
CREATE ALGORITHM=UNDEFINED DEFINER=`mark`@`%` SQL SECURITY DEFINER VIEW `iap_view_prodmaterials_months2` AS select `item`.`name` AS `name`,count(`pi`.`base_qty`) AS `counts`,sum(`pi`.`base_qty`) AS `totalsum`,(sum(`pi`.`base_qty`) / (((to_days('2023-10-01') - to_days(now())) * -(1)) / 30)) AS `average use since October 2023`,(((to_days('2023-10-16') - to_days(now())) * -(1)) / 30) AS `month_factorial`,sum((case when (month(`pi`.`created_on`) = 1) then `pi`.`base_qty` else 0 end)) AS `January_usecase`,concat((round((sum((case when (month(`pi`.`created_on`) = 1) then `pi`.`base_qty` else 0 end)) / sum(`pi`.`base_qty`)),2) * 100),'%') AS `January_%`,sum((case when (month(`pi`.`created_on`) = 2) then `pi`.`base_qty` else 0 end)) AS `Feb_usecase`,concat((round((sum((case when (month(`pi`.`created_on`) = 2) then `pi`.`base_qty` else 0 end)) / sum(`pi`.`base_qty`)),2) * 100),'%') AS `Feb_%`,sum((case when (month(`pi`.`created_on`) = 3) then `pi`.`base_qty` else 0 end)) AS `March_usecase`,concat((round((sum((case when (month(`pi`.`created_on`) = 3) then `pi`.`base_qty` else 0 end)) / sum(`pi`.`base_qty`)),2) * 100),'%') AS `March_%`,sum((case when (month(`pi`.`created_on`) = 4) then `pi`.`base_qty` else 0 end)) AS `April_usecase`,concat((round((sum((case when (month(`pi`.`created_on`) = 4) then `pi`.`base_qty` else 0 end)) / sum(`pi`.`base_qty`)),2) * 100),'%') AS `April_%`,sum((case when (month(`pi`.`created_on`) = 5) then `pi`.`base_qty` else 0 end)) AS `May_usecase`,concat((round((sum((case when (month(`pi`.`created_on`) = 5) then `pi`.`base_qty` else 0 end)) / sum(`pi`.`base_qty`)),2) * 100),'%') AS `May_%`,sum((case when (month(`pi`.`created_on`) = 6) then `pi`.`base_qty` else 0 end)) AS `June_usecase`,concat((round((sum((case when (month(`pi`.`created_on`) = 6) then `pi`.`base_qty` else 0 end)) / sum(`pi`.`base_qty`)),2) * 100),'%') AS `June_%`,sum((case when (month(`pi`.`created_on`) = 7) then `pi`.`base_qty` else 0 end)) AS `July_usecase`,concat((round((sum((case when (month(`pi`.`created_on`) = 7) then `pi`.`base_qty` else 0 end)) / sum(`pi`.`base_qty`)),2) * 100),'%') AS `July_%`,sum((case when (month(`pi`.`created_on`) = 8) then `pi`.`base_qty` else 0 end)) AS `August_usecase`,concat((round((sum((case when (month(`pi`.`created_on`) = 8) then `pi`.`base_qty` else 0 end)) / sum(`pi`.`base_qty`)),2) * 100),'%') AS `August_%`,sum((case when (month(`pi`.`created_on`) = 9) then `pi`.`base_qty` else 0 end)) AS `September_usecase`,concat((round((sum((case when (month(`pi`.`created_on`) = 9) then `pi`.`base_qty` else 0 end)) / sum(`pi`.`base_qty`)),2) * 100),'%') AS `September_%`,sum((case when (month(`pi`.`created_on`) = 10) then `pi`.`base_qty` else 0 end)) AS `October_usecase`,concat((round((sum((case when (month(`pi`.`created_on`) = 10) then `pi`.`base_qty` else 0 end)) / sum(`pi`.`base_qty`)),2) * 100),'%') AS `October_%`,sum((case when (month(`pi`.`created_on`) = 11) then `pi`.`base_qty` else 0 end)) AS `November_usecase`,concat((round((sum((case when (month(`pi`.`created_on`) = 11) then `pi`.`base_qty` else 0 end)) / sum(`pi`.`base_qty`)),2) * 100),'%') AS `November_%`,sum((case when (month(`pi`.`created_on`) = 12) then `pi`.`base_qty` else 0 end)) AS `December_usecase`,concat((round((sum((case when (month(`pi`.`created_on`) = 12) then `pi`.`base_qty` else 0 end)) / sum(`pi`.`base_qty`)),2) * 100),'%') AS `December_%` from (`pacstone_inventory`.`inventory_transaction` `pi` left join `pacstone_inventory`.`inventory_item` `item` on((`item`.`id` = `pi`.`inventory_item`))) where ((`pi`.`transaction_type` = 'transTypeAddRem') and (((year(`pi`.`created_on`) >= 2023) and (month(`pi`.`created_on`) >= 10)) or (year(`pi`.`created_on`) > 2023))) group by `pi`.`inventory_item` order by `item`.`name`;

-- View: iap_view_prodmaterials_sub_view
CREATE ALGORITHM=UNDEFINED DEFINER=`mark`@`%` SQL SECURITY DEFINER VIEW `iap_view_prodmaterials_sub_view` AS select `item`.`name` AS `name`,sum(`pi`.`base_qty`) AS `totalsum`,if((`pi`.`transaction_type` = 'transType001'),sum(`pi`.`base_qty`),0) AS `usecase`,if((`pi`.`transaction_type` = 'transType001'),count(`pi`.`base_qty`),0) AS `usecasecount`,if((`pi`.`transaction_type` = 'transType001'),round((sum(`pi`.`base_qty`) / count(`pi`.`base_qty`)),2),0) AS `usecaseaverage`,if((`pi`.`transaction_type` = 'transType001'),round(((sum(`pi`.`base_qty`) + count(`pi`.`base_qty`)) / count(`pi`.`base_qty`)),2),0) AS `usecaseweightedaverage`,if((`pi`.`transaction_type` = 'transType002'),sum(`pi`.`base_qty`),0) AS `locationtolocation2` from (`pacstone_inventory`.`inventory_transaction` `pi` left join `pacstone_inventory`.`inventory_item` `item` on((`item`.`id` = `pi`.`inventory_item`))) group by `item`.`name`,`pi`.`transaction_type`;

-- View: iap_view_promo_items
CREATE ALGORITHM=UNDEFINED DEFINER=`mark`@`%` SQL SECURITY DEFINER VIEW `iap_view_promo_items` AS select `item`.`id` AS `ID`,`item`.`name` AS `Item`,`item`.`version` AS `Version`,`item`.`status` AS `Status`,max(if((`ial`.`location_level1` = 'prop02'),`ial`.`qty_base`,0)) AS `EB`,max(if((`ial`.`location` = 'prop01'),`ial`.`qty_base`,0)) AS `CS`,max(if((`ial`.`location` = 'prop04'),`ial`.`qty_base`,0)) AS `SP`,max(if((`ial`.`location` = '124e6f02'),`ial`.`qty_base`,0)) AS `DR`,max(if((`ial`.`location` = 'prop10'),`ial`.`qty_base`,0)) AS `IV`,max(if((`ial`.`location` = 'prop03'),`ial`.`qty_base`,0)) AS `MV`,max(if((`ial`.`location` = 'invVehicle'),`ial`.`qty_base`,0)) AS `Vehicle`,max(if((`ial`.`location` = 'invVendor'),`ial`.`qty_base`,0)) AS `Vendor`,sum(if((`ial`.`location_level1` in ('prop02','prop01','124e6f02','prop10','prop03','prop04','invVehicle')),`ial`.`qty_base`,0)) AS `Inventory On Hand`,(sum(if((`ial`.`location_level1` in ('prop02','prop01','124e6f02','prop10','prop03','prop04','invVehicle')),`ial`.`qty_base`,0)) + sum(if((`ial`.`location` = 'invVendor'),`ial`.`qty_base`,0))) AS `Total Inventory`,max(`item`.`cat1`) AS `cat1`,max(`item`.`cat2`) AS `cat2`,max(`item`.`cat3`) AS `cat3`,max(`item`.`cat4`) AS `cat4`,max(`item`.`cat5`) AS `cat5`,max(`item`.`cat6`) AS `cat6`,max(`item`.`cat7`) AS `cat7`,`item`.`created_on` AS `Created On` from (`pacstone_inventory`.`inventory_item` `item` left join `pacstone_inventory`.`inventory_at_location` `ial` on((`item`.`id` = `ial`.`inventory_item`))) where ((`item`.`inventory_item_type` = 'promoMat01') and (`ial`.`status` = 'Active') and (`ial`.`qty_base` <> 0) and (`item`.`status` in ('Active','Pending Deactivation'))) group by `item`.`id` order by `item`.`created_on`;

-- View: iap_view_promos
CREATE ALGORITHM=UNDEFINED DEFINER=`mark`@`%` SQL SECURITY DEFINER VIEW `iap_view_promos` AS select `item`.`id` AS `ID`,`item`.`name` AS `Item`,`item`.`version` AS `Version`,`item`.`status` AS `Status`,max(if((`ial`.`location` = 'prop02'),`ial`.`qty_base`,0)) AS `EB`,max(if((`ial`.`location` = 'prop01'),`ial`.`qty_base`,0)) AS `CS`,max(if((`ial`.`location` = 'prop04'),`ial`.`qty_base`,0)) AS `SP`,max(if((`ial`.`location` = '124e6f02'),`ial`.`qty_base`,0)) AS `DR`,max(if((`ial`.`location` = 'prop10'),`ial`.`qty_base`,0)) AS `IV`,max(if((`ial`.`location` = 'prop03'),`ial`.`qty_base`,0)) AS `MV`,max(if((`ial`.`location` = 'invVehicle'),`ial`.`qty_base`,0)) AS `Vehicle`,max(if((`ial`.`location` = 'invVendor'),`ial`.`qty_base`,0)) AS `Vendor`,(sum(if((`ial`.`location` in ('prop02','prop01','124e6f02','prop10','prop03','prop04','invVehicle')),`ial`.`qty_base`,0)) + sum(if((`ial`.`location` = 'invVendor'),`ial`.`qty_base`,0))) AS `Total Inventory`,max(`item`.`cat1`) AS `cat1`,max(`item`.`cat2`) AS `cat2`,max(`item`.`cat3`) AS `cat3`,max(`item`.`cat4`) AS `cat4`,max(`item`.`cat5`) AS `cat5`,max(`item`.`cat6`) AS `cat6`,max(`item`.`cat7`) AS `cat7`,`item`.`created_on` AS `Created On` from (`pacstone_inventory`.`inventory_item` `item` left join `pacstone_inventory`.`inventory_at_location` `ial` on((`item`.`id` = `ial`.`inventory_item`))) where ((`item`.`inventory_item_type` = 'promoMat01') and (`ial`.`status` <> 'Inactive') and (`item`.`status` in ('Active','Pending Deactivation'))) group by `item`.`id` order by `item`.`created_on`;

-- View: iap_view_sums
CREATE ALGORITHM=UNDEFINED DEFINER=`nieko`@`%` SQL SECURITY DEFINER VIEW `iap_view_sums` AS select `item`.`name` AS `Item`,`item`.`version` AS `version`,max(if((`ial`.`location` = 'prop02'),`ial`.`qty_base`,0)) AS `EB`,max(if((`ial`.`location` = 'prop01'),`ial`.`qty_base`,0)) AS `CS`,max(if((`ial`.`location` = '124e6f02'),`ial`.`qty_base`,0)) AS `DR`,max(if((`ial`.`location` = 'prop10'),`ial`.`qty_base`,0)) AS `IV`,max(if((`ial`.`location` = 'prop03'),`ial`.`qty_base`,0)) AS `MV`,max(if((`ial`.`location` = 'prop04'),`ial`.`qty_base`,0)) AS `SP`,max(if((`ial`.`location` = 'invVendor'),`ial`.`qty_base`,0)) AS `Vendor`,max(if((`ial`.`location` = 'invVehicle'),`ial`.`qty_base`,0)) AS `Vehicle`,max(`item`.`cat1`) AS `cat1`,max(`item`.`cat2`) AS `cat2`,max(`item`.`cat3`) AS `cat3`,max(`item`.`cat4`) AS `cat4`,max(`item`.`cat5`) AS `cat5`,max(`item`.`cat6`) AS `cat6`,max(`item`.`cat7`) AS `cat7`,`item`.`id` AS `item_id` from (((`pacstone_inventory`.`inventory_item` `item` left join `pacstone_inventory`.`inventory_at_location` `ial` on((`item`.`id` = `ial`.`inventory_item`))) left join `pacstone_inventory`.`inventory_pile` `p` on((`p`.`inventory_item` = `item`.`id`))) left join `pacstone`.`location` `l` on((`ial`.`location` = `l`.`id`))) group by `item`.`name`,`item`.`id` order by `item`.`name`;

-- View: inventory_sku
CREATE ALGORITHM=UNDEFINED DEFINER=`mark`@`%` SQL SECURITY DEFINER VIEW `inventory_sku` AS select `kss_i`.`id` AS `id`,`kss_i`.`Location` AS `Location`,`kss_i`.`ProductID` AS `ProductID`,`kss_i`.`ProductNumName` AS `ProductNumName`,`kss_i`.`BatchCode` AS `BatchCode`,`kss_i`.`Inventory` AS `Inventory`,`kss_i`.`ExpirationDate` AS `Expires`,(to_days(curdate()) - to_days(`kss_i`.`ExpirationDate`)) AS `DaysExpire`,`ps_sku`.`strain_code` AS `strain_id`,`ps_sku`.`strain_name` AS `strain_name`,`ps_sku`.`sku` AS `sku`,`ps_sku`.`name` AS `ps_name`,`ps_sku`.`category_name` AS `ps_category`,`ps_sku`.`package_size_code` AS `package_size`,`ps_sku`.`strain_category` AS `strain_type`,`sales`.`kss_sku`.`id` AS `Product_ID`,`sales`.`kss_sku`.`BrandID` AS `BrandID`,`sales`.`kss_sku`.`ProductName` AS `ProductName`,`sales`.`kss_sku`.`ProductTypeID` AS `ProductTypeID`,`sales`.`kss_sku`.`PackageID` AS `PackageID`,`sales`.`kss_sku`.`SupplierID` AS `SupplierID`,`sales`.`kss_sku`.`Price` AS `Price`,`sales`.`kss_sku`.`Class` AS `Class`,`sales`.`kss_sku`.`Unit Net Weight` AS `Weight`,`sales`.`kss_sku`.`Status` AS `Status`,`sales`.`kss_sku`.`WholesaleUnitsperCase` AS `CaseUnits` from ((`sales`.`kss_inventory` `kss_i` left join `sales`.`kss_sku` on((`kss_i`.`ProductID` = `sales`.`kss_sku`.`id`))) left join `product_sku`.`sku_view` `ps_sku` on((`kss_i`.`ProductID` = `ps_sku`.`kss_id`))) where (`kss_i`.`Inventory` > 0.00) order by `ps_sku`.`sku`;

-- View: kss_Invoice
CREATE ALGORITHM=UNDEFINED DEFINER=`mark`@`%` SQL SECURITY DEFINER VIEW `kss_Invoice` AS select `sales`.`kss_invoice`.`InvoiceID` AS `Invoice`,`sales`.`kss_invoice`.`InvoiceTransID` AS `InvoiceTransID`,`sales`.`kss_invoice`.`Date` AS `Date`,`sales`.`kss_invoice`.`Status` AS `Invoice Status`,`sales`.`kss_invoice`.`CustomerID` AS `CustomerID`,`sales`.`kss_invoice`.`ProductID` AS `ProductID`,`sales`.`kss_invoice`.`Units` AS `Units`,`sales`.`kss_invoice`.`FullPrice` AS `FullPrice`,`sales`.`kss_invoice`.`Discount` AS `Discount`,`sales`.`kss_invoice`.`Vol` AS `Total`,`sales`.`kss_invoice`.`Participation` AS `Participation` from (((`sales`.`kss_invoice` join `sales`.`kss_customer` on((`sales`.`kss_invoice`.`CustomerID` = `sales`.`kss_customer`.`CustomerID`))) join `sales`.`kss_sku` on((`sales`.`kss_invoice`.`ProductID` = `sales`.`kss_sku`.`ProductID`))) join `product_sku`.`sku_view` on((`sales`.`kss_invoice`.`ProductID` = `sku_view`.`kss_id`))) order by `sales`.`kss_invoice`.`InvoiceID`;

-- View: kss_customer_table
CREATE ALGORITHM=UNDEFINED DEFINER=`mark`@`%` SQL SECURITY DEFINER VIEW `kss_customer_table` AS select `sales`.`kss_customer`.`id` AS `id`,`sales`.`kss_customer`.`CustomerID` AS `CustomerID`,`sales`.`kss_customer`.`Company` AS `Company`,`sales`.`kss_customer`.`ChainID` AS `ChainID`,`sales`.`kss_customer`.`Phone` AS `Phone`,`sales`.`kss_customer`.`Email` AS `Email`,`sales`.`kss_customer`.`CountyID` AS `CountyID`,`sales`.`kss_customer`.`TerritoryID` AS `TerritoryID`,`sales`.`kss_customer`.`AccountStatus` AS `AccountStatus`,`sales`.`kss_customer`.`SalesmanUserID` AS `SalesmanUserID`,`sales`.`kss_customer`.`Chain - Customer` AS `Chain - Customer`,`sales`.`kss_customer`.`PrimaryUserID` AS `PrimaryUserID`,`sales`.`kss_customer`.`Address` AS `Address`,`sales`.`kss_customer`.`City` AS `City`,`sales`.`kss_customer`.`PostalCode` AS `PostalCode`,`sales`.`kss_customer`.`IndVolume` AS `IndVolume`,`sales`.`kss_customer`.`EthnicityID` AS `EthnicityID`,`sales`.`kss_customer`.`CustomerAccountType` AS `CustomerAccountType`,`sales`.`kss_customer`.`CustomerTypeID` AS `CustomerTypeID`,`sales`.`kss_customer`.`OpenDate` AS `OpenDate`,`sales`.`kss_customer`.`LocationID` AS `LocationID`,`sales`.`kss_customer`.`AreaID` AS `AreaID`,`sales`.`kss_customer`.`JurisdictionID` AS `JurisdictionID`,`sales`.`kss_customer`.`StateLicenseNum` AS `StateLicenseNum`,`sales`.`kss_customer`.`AR Account Limit` AS `AR Account Limit`,`sales`.`kss_customer`.`Distro Accounts Count of Doors` AS `Distro Accounts Count of Doors`,`sales`.`kss_customer`.`CustomerName` AS `CustomerName`,`sales`.`kss_customer`.`Chain` AS `Chain`,`sales`.`kss_customer`.`Independent` AS `Independent`,`sales`.`kss_customer`.`ARAccountID` AS `ARAccountID`,`sales`.`kss_customer`.`ARAccount` AS `ARAccount`,`sales`.`kss_customer`.`ShippingAddress` AS `ShippingAddress`,`sales`.`kss_customer`.`County` AS `County`,`sales`.`kss_customer`.`Territory` AS `Territory`,`sales`.`kss_customer`.`StateLicensee` AS `StateLicensee`,`sales`.`kss_customer`.`DistributionAreaID` AS `DistributionAreaID`,`sales`.`kss_customer`.`DistributionArea` AS `DistributionArea`,`sales`.`kss_customer`.`Location` AS `Location`,`sales`.`kss_customer`.`SalesRepID` AS `SalesRepID`,`sales`.`kss_customer`.`SalesRepFullName` AS `SalesRepFullName`,`sales`.`kss_customer`.`Route` AS `Route`,`sales`.`kss_customer`.`RouteDayOfWeek` AS `RouteDayOfWeek`,`sales`.`kss_customer`.`RouteFrequency` AS `RouteFrequency`,`sales`.`kss_customer`.`StopPhase` AS `StopPhase`,`sales`.`kss_customer`.`NextScheduledDate` AS `NextScheduledDate`,`sales`.`kss_customer`.`ARAccountLimit` AS `ARAccountLimit`,`sales`.`kss_customer`.`Terms` AS `Terms`,`sales`.`kss_customer`.`AccountOnHold` AS `AccountOnHold`,`sales`.`kss_customer`.`LastPurchaseDate` AS `LastPurchaseDate` from `sales`.`kss_customer`;

-- View: kss_customer_view
CREATE ALGORITHM=UNDEFINED DEFINER=`mark`@`%` SQL SECURITY DEFINER VIEW `kss_customer_view` AS select `kc`.`id` AS `id`,`kc`.`Company` AS `name`,`kc`.`Address` AS `Address`,`kc`.`PostalCode` AS `Zip`,`kc`.`City` AS `City`,'CA' AS `State`,'US' AS `Country`,`kc`.`TerritoryID` AS `Territory`,`kc`.`SalesRepFullName` AS `Representative`,`kc`.`Email` AS `email`,`kc`.`Phone` AS `Phone`,`kc`.`PrimaryUserID` AS `PrimaryUserID`,`kc`.`RouteDayOfWeek` AS `Delviery Day`,`kc`.`AccountStatus` AS `Active`,`kc`.`CustomerAccountType` AS `Tags`,max(`ki`.`Date`) AS `last invoice`,sum(`ki`.`FullPrice`) AS `account` from (`sales`.`kss_customer` `kc` left join `sales`.`kss_invoice` `ki` on((`kc`.`id` = `ki`.`CustomerID`))) group by `kc`.`id`;

-- View: kss_promotion
CREATE ALGORITHM=UNDEFINED DEFINER=`mark`@`%` SQL SECURITY DEFINER VIEW `kss_promotion` AS select `sales`.`kss_promotion`.`PromotionID` AS `PromotionID`,`sales`.`kss_promotion`.`PromotionName` AS `PromotionName`,`sales`.`kss_promotion`.`PromotionType` AS `PromotionType`,`sales`.`kss_promotion`.`StartDate` AS `StartDate`,`sales`.`kss_promotion`.`EndDate` AS `EndDate`,`sales`.`kss_promotion`.`Active` AS `Active`,`sales`.`kss_promotion`.`Amount` AS `Amount`,`sales`.`kss_promotion`.`Participation` AS `Participation`,`sales`.`kss_promotion`.`Condition` AS `Condition`,`sales`.`kss_promotion`.`Market` AS `Market`,`sales`.`kss_promotion`.`Memo` AS `Memo`,`sales`.`kss_promotion`.`id` AS `id` from `sales`.`kss_promotion`;

-- View: kss_promotion_product_view
CREATE ALGORITHM=UNDEFINED DEFINER=`mark`@`%` SQL SECURITY DEFINER VIEW `kss_promotion_product_view` AS select `sales`.`kss_promotion_product`.`PromotionID` AS `PromotionID`,`sales`.`kss_promotion_product`.`ProductID` AS `ProductID`,`sales`.`kss_promotion_product`.`Type` AS `Type`,`sales`.`kss_promotion_product`.`StartDate` AS `StartDate`,`sales`.`kss_promotion_product`.`EndDate` AS `EndDate`,`sales`.`kss_promotion_product`.`Active` AS `Active`,`sales`.`kss_promotion_product`.`ContributestoQtyDiscount` AS `ContributestoQtyDiscount`,`sales`.`kss_promotion_product`.`Amount` AS `Amount`,`sales`.`kss_promotion_product`.`CaseAmount` AS `CaseAmount`,`sales`.`kss_promotion_product`.`Participation` AS `Participation`,`sales`.`kss_promotion_product`.`CaseParticipation` AS `CaseParticipation`,`sales`.`kss_promotion_product`.`Condition` AS `Condition`,`sales`.`kss_promotion_product`.`FreeUnits` AS `FreeUnits`,`sales`.`kss_promotion_product`.`id` AS `id` from `sales`.`kss_promotion_product`;

-- View: kss_sales
CREATE ALGORITHM=UNDEFINED DEFINER=`mark`@`%` SQL SECURITY DEFINER VIEW `kss_sales` AS select `sales`.`kss_invoice`.`InvoiceID` AS `Invoice`,`sales`.`kss_invoice`.`InvoiceTransID` AS `InvoiceTransID`,`sales`.`kss_invoice`.`Date` AS `Date`,`sales`.`kss_invoice`.`Status` AS `Invoice Status`,`sales`.`kss_invoice`.`CustomerID` AS `CustomerID`,`sales`.`kss_invoice`.`ProductID` AS `ProductID`,`sales`.`kss_invoice`.`Units` AS `Units`,`sales`.`kss_invoice`.`FullPrice` AS `FullPrice`,`sales`.`kss_invoice`.`Discount` AS `Discount`,`sales`.`kss_invoice`.`Vol` AS `Total`,`sales`.`kss_invoice`.`Participation` AS `Participation` from (((`sales`.`kss_invoice` join `sales`.`kss_customer` on((`sales`.`kss_invoice`.`CustomerID` = `sales`.`kss_customer`.`CustomerID`))) join `sales`.`kss_sku` on((`sales`.`kss_invoice`.`ProductID` = `sales`.`kss_sku`.`ProductID`))) join `product_sku`.`sku_view` on((`sales`.`kss_invoice`.`ProductID` = `sku_view`.`kss_id`)));

-- View: kss_sku_basic_view
CREATE ALGORITHM=UNDEFINED DEFINER=`mark`@`%` SQL SECURITY DEFINER VIEW `kss_sku_basic_view` AS select `sales`.`kss_sku`.`id` AS `KSS id`,`sales`.`kss_sku`.`SupplierName` AS `Brand Name`,`sales`.`kss_sku`.`Brand` AS `BrandStrainPackage`,`sales`.`kss_sku`.`Package` AS `CaseQTY&PackageSizeType`,`sales`.`kss_sku`.`ProductType` AS `Category & Size`,`sales`.`kss_sku`.`ProductName` AS `ProductName`,`sales`.`kss_sku`.`Class` AS `Class`,`sales`.`kss_sku`.`WholesaleUnitsperCase` AS `CaseQTY`,`sales`.`kss_sku`.`Unit Net Weight` AS `UnitWeight`,`sales`.`kss_sku`.`Status` AS `Status`,`sales`.`kss_sku`.`UPC` AS `UPC`,`sales`.`kss_sku`.`Rank` AS `KSS Rank`,`sales`.`kss_sku`.`Price` AS `Price`,`sales`.`kss_sku`.`CasePrice` AS `CasePrice`,`sales`.`kss_sku`.`ProductMasterID` AS `ProductMasterID`,`sales`.`kss_sku`.`modified_on` AS `modified_on`,`sales`.`kss_sku`.`UpdatedBy` AS `UpdatedBy`,`sales`.`kss_sku`.`TimeCreated` AS `TimeCreated`,`sales`.`kss_sku`.`created_on` AS `created_on` from `sales`.`kss_sku` order by `sales`.`kss_sku`.`Brand` desc;

-- View: location
CREATE ALGORITHM=UNDEFINED DEFINER=`mark`@`%` SQL SECURITY DEFINER VIEW `location` AS select `l`.`id` AS `id`,`l`.`location_level1` AS `location_level1`,`l`.`location_level3` AS `location_level2`,`l`.`location_level3` AS `location_level3`,`l`.`location_level3` AS `location_level4`,`l`.`location_level5` AS `location_level5`,`l`.`location_level3` AS `location_level6`,`l`.`location_level3` AS `location_level7`,`l`.`location_string` AS `location_string`,`l`.`location_class` AS `location_class`,`type`.`type` AS `location_type`,`type`.`level1` AS `location_type_level1`,`type`.`level2` AS `location_type_level2`,`type`.`level3` AS `location_type_level3`,`type`.`level4` AS `location_type_level4`,`type`.`level5` AS `location_type_level5` from (`pacstone`.`location` `l` left join `pacstone`.`location_type` `type` on((`l`.`location_type` = `type`.`id`))) where (`l`.`status` = 'active');

-- View: package
CREATE ALGORITHM=UNDEFINED DEFINER=`mark`@`%` SQL SECURITY DEFINER VIEW `package` AS select `p`.`id` AS `id`,`p`.`code` AS `package_code`,`p`.`name` AS `package_name`,`ps`.`code` AS `package_size_code`,`ps`.`name` AS `package_size_name`,`prod`.`status` AS `status` from ((`product_sku`.`product_combination` `prod` left join `product_sku`.`package` `p` on((`prod`.`package` = `p`.`id`))) left join `product_sku`.`package_size` `ps` on((`prod`.`package_size` = `ps`.`id`)));

-- View: packing_temp
CREATE ALGORITHM=UNDEFINED DEFINER=`mark`@`%` SQL SECURITY DEFINER VIEW `packing_temp` AS select `packing`.`packing_temp`.`id` AS `id`,`packing`.`packing_temp`.`transfer_metrc_id` AS `transfer_metrc_id`,`packing`.`packing_temp`.`flower_metrc_id` AS `flower_metrc_id`,`packing`.`packing_temp`.`harvest_id` AS `harvest_id`,`packing`.`packing_temp`.`property` AS `property`,`packing`.`packing_temp`.`harvest_date` AS `harvest_date`,`packing`.`packing_temp`.`harvest_week` AS `harvest_week`,`packing`.`packing_temp`.`harvest_year` AS `harvest_year`,`packing`.`packing_temp`.`strain` AS `strain`,`packing`.`packing_temp`.`short_license` AS `short_license`,`packing`.`packing_temp`.`grade` AS `grade`,`packing`.`packing_temp`.`strain_category` AS `strain_category`,`packing`.`packing_temp`.`batch_flower_size` AS `batch_flower_size`,`packing`.`packing_temp`.`batch_weight` AS `batch_weight`,`packing`.`packing_temp`.`created_on` AS `created_on`,`packing`.`packing_temp`.`created_by` AS `created_by`,`packing`.`packing_temp`.`processor_name` AS `processor_name`,`packing`.`packing_temp`.`processor_license` AS `processor_license`,`packing`.`packing_temp`.`cultivator_name` AS `cultivator_name`,`packing`.`packing_temp`.`cultivator_license` AS `cultivator_license`,`packing`.`packing_temp`.`production_number` AS `production_number`,`packing`.`packing_temp`.`pallet_metrc_id` AS `pallet_metrc_id`,`packing`.`packing_temp`.`prepacking_weight` AS `prepacking_weight`,`packing`.`packing_temp`.`action` AS `action`,`packing`.`packing_temp`.`type` AS `type`,`packing`.`packing_temp`.`weight` AS `weight`,`packing`.`packing_temp`.`kief_metrc_id` AS `kief_metrc_id`,`packing`.`packing_temp`.`kief_weight` AS `kief_weight`,`packing`.`packing_temp`.`thc_result` AS `thc_result`,`packing`.`packing_temp`.`cbd_result` AS `cbd_result`,`packing`.`packing_temp`.`cannalysis_id` AS `cannalysis_id`,`packing`.`packing_temp`.`machine_station` AS `machine_station`,`packing`.`packing_temp`.`packed_date` AS `packed_date`,`packing`.`packing_temp`.`packed_week` AS `packed_week`,`packing`.`packing_temp`.`start_machine_time` AS `start_machine_time`,`packing`.`packing_temp`.`stop_machine_time` AS `stop_machine_time`,`packing`.`packing_temp`.`unit_produced` AS `unit_produced`,`packing`.`packing_temp`.`unit_target` AS `unit_target`,`packing`.`packing_temp`.`final_unit_quantity` AS `final_unit_quantity`,`packing`.`packing_temp`.`final_batch_grams` AS `final_batch_grams`,`packing`.`packing_temp`.`final_batch_pounds` AS `final_batch_pounds`,`packing`.`packing_temp`.`general_notes` AS `general_notes`,`packing`.`packing_temp`.`case_size` AS `case_size`,`packing`.`packing_temp`.`partial_master` AS `partial_master`,`packing`.`packing_temp`.`partial_display` AS `partial_display`,`packing`.`packing_temp`.`shipped_date` AS `shipped_date`,`packing`.`packing_temp`.`shipped_week` AS `shipped_week`,`packing`.`packing_temp`.`shipped_units` AS `shipped_units`,`packing`.`packing_temp`.`manifest_metrc_id` AS `manifest_metrc_id`,`packing`.`packing_temp`.`units_inventory` AS `units_inventory`,`packing`.`packing_temp`.`in_metrc` AS `in_metrc`,`packing`.`packing_temp`.`waste_metrc` AS `waste_metrc`,`packing`.`packing_temp`.`status` AS `status`,`packing`.`packing_temp`.`process_status` AS `process_status`,`packing`.`packing_temp`.`modified_on` AS `modified_on`,`packing`.`packing_temp`.`modified_by` AS `modified_by`,`packing`.`packing_temp`.`trigger` AS `trigger`,`packing`.`packing_temp`.`field_1` AS `field_1`,`packing`.`packing_temp`.`field_2` AS `field_2`,`packing`.`packing_temp`.`field_3` AS `field_3`,`packing`.`packing_temp`.`field_4` AS `field_4`,`packing`.`packing_temp`.`field_5` AS `field_5`,`packing`.`packing_temp`.`field_6` AS `field_6`,`packing`.`packing_temp`.`f7` AS `f7`,`packing`.`packing_temp`.`f8` AS `f8`,`packing`.`packing_temp`.`f9` AS `f9`,`packing`.`packing_temp`.`sku_id` AS `sku_id`,`packing`.`packing_temp`.`packing_group_id` AS `packing_group_id`,`packing`.`packing_temp`.`stage_id` AS `stage_id` from `packing`.`packing_temp`;

-- View: plant_schedule_detailed
CREATE ALGORITHM=UNDEFINED DEFINER=`mark`@`%` SQL SECURITY DEFINER VIEW `plant_schedule_detailed` AS select `cultivation`.`plant_schedule_detail`.`id` AS `id`,`cultivation`.`plant_schedule_detail`.`plant_schedule_id` AS `plant_schedule_id`,`cultivation`.`plant_schedule_detail`.`canopy_id` AS `canopy_id`,`cultivation`.`plant_schedule_detail`.`strain_id` AS `strain_id`,`cultivation`.`plant_schedule_detail`.`date` AS `date`,`cultivation`.`plant_schedule_detail`.`plant_count` AS `plant_count`,`cultivation`.`plant_schedule_detail`.`priority` AS `priority`,`cultivation`.`plant_schedule_detail`.`notes` AS `notes`,`cultivation`.`plant_schedule_detail`.`status` AS `status`,`cultivation`.`plant_schedule_detail`.`action` AS `action`,`cultivation`.`plant_schedule_detail`.`created_by` AS `created_by`,`cultivation`.`plant_schedule_detail`.`created_on` AS `created_on`,`cultivation`.`plant_schedule_detail`.`modified_by` AS `modified_by`,`cultivation`.`plant_schedule_detail`.`modified_on` AS `modified_on`,`cultivation`.`plant_schedule_detail`.`flag` AS `flag`,`cultivation`.`plant_schedule_detail`.`trigger` AS `trigger` from `cultivation`.`plant_schedule_detail` order by `cultivation`.`plant_schedule_detail`.`modified_on` desc;

-- View: plant_strain
CREATE ALGORITHM=UNDEFINED DEFINER=`mark`@`%` SQL SECURITY DEFINER VIEW `plant_strain` AS select `strain`.`id` AS `id`,`strain`.`strain_code` AS `strain_code`,`strain`.`name` AS `name`,`strain`.`version` AS `version`,`strain`.`pacific_stone_label` AS `pacific_stone_label`,`strain`.`time_machine_label` AS `time_machine_label`,`strain`.`category` AS `category`,`strain`.`category_code` AS `category_code`,`strain`.`description` AS `description`,`strain`.`class` AS `class`,if((`strain`.`core_strain` > 0),'Core Strain',`strain`.`gh_status`) AS `Core/Status`,`strain`.`flag` AS `flag`,`strain`.`note` AS `note`,`strain`.`uid` AS `uid`,`strain`.`parent_strain` AS `parent_strain`,if((`strain`.`is_flavor` > 0),'Yes','No') AS `Is Flavor?`,if((`strain`.`is_plant` > 0),'Yes','No') AS `Is Plant?`,if((`strain`.`is_sku` > 0),'Yes','No') AS `Is SKU?` from `pacstone`.`plant_strain` `strain` where (`strain`.`gh_status` is not null);

-- View: processing_active
CREATE ALGORITHM=UNDEFINED DEFINER=`mark`@`%` SQL SECURITY DEFINER VIEW `processing_active` AS select `p`.`date` AS `date`,`p`.`processing_metrc_tag` AS `processing_batch_source_tag`,`p`.`metrc_tag` AS `metrc_tag`,`h`.`harvest_id` AS `harvest_id`,`h`.`test_id` AS `test`,`h`.`property_id` AS `property_id`,`h`.`date` AS `harvest_date`,`h`.`week_num` AS `harvest_week`,`h`.`year_num` AS `harvest_year`,`h`.`year_week` AS `harvest_year_week`,if((right(`h`.`harvest_id`,2) = '-M'),'Manicure','Full') AS `harvest_type`,`s`.`strain_code` AS `strain_code`,`s`.`name` AS `strain_name`,`pacstone`.`uom`.`name` AS `uom`,`p`.`quantity` AS `quantity`,`p`.`bin_count` AS `bin_count`,`c`.`name` AS `category`,`ct`.`name` AS `category_type`,`p`.`product_id` AS `size`,`p`.`grade` AS `grade`,`p`.`process_id` AS `process`,`p`.`process_queue_id` AS `process_queue`,`p`.`process_queue_type` AS `process_queue_type`,`p`.`process_log` AS `process_log`,(case when (`p`.`process_log` like '%Sorting%') then 'Sorted' when ((`p`.`process_log` like '%Trimming%') and (`p`.`process_queue_id` is null) and (`p`.`category_id` = 'SK-CTG-0001') and (not((`p`.`process_log` like '%Sorting%')))) then 'Unsorted' else '-' end) AS `qc_status`,`l`.`name` AS `location` from ((((((`processing`.`processing` `p` left join `pacstone`.`plant_strain` `s` on((convert(`s`.`id` using utf8mb4) = `p`.`strain_id`))) left join `product_sku`.`category` `c` on((`c`.`id` = `p`.`category_id`))) left join `product_sku`.`category_type` `ct` on((convert(`ct`.`id` using utf8mb4) = `p`.`category_type_id`))) left join `cultivation`.`harvesting_ref` `h` on((`h`.`id` = `p`.`harvesting_id`))) left join `pacstone`.`uom` on((convert(`pacstone`.`uom`.`id` using utf8mb4) = `p`.`uom_id`))) left join `pacstone`.`location` `l` on((convert(`l`.`id` using utf8mb4) = `p`.`location_id`))) where (`p`.`status` = 'Active');

-- View: processing_active_combined
CREATE ALGORITHM=UNDEFINED DEFINER=`mark`@`%` SQL SECURITY DEFINER VIEW `processing_active_combined` AS select `processing_active`.`date` AS `date`,`processing_active`.`processing_batch_source_tag` AS `processing_batch_source_tag`,`processing_active`.`metrc_tag` AS `metrc_tag`,`processing_active`.`harvest_id` AS `harvest_id`,`processing_active`.`test` AS `test`,`processing_active`.`property_id` AS `property_id`,`processing_active`.`harvest_date` AS `harvest_date`,`processing_active`.`harvest_week` AS `harvest_week`,`processing_active`.`harvest_year` AS `harvest_year`,`processing_active`.`harvest_year_week` AS `harvest_year_week`,`processing_active`.`harvest_type` AS `harvest_type`,`processing_active`.`strain_code` AS `strain_code`,`processing_active`.`strain_name` AS `strain_name`,`processing_active`.`uom` AS `uom`,`processing_active`.`quantity` AS `quantity`,`processing_active`.`bin_count` AS `bin_count`,`processing_active`.`category` AS `category`,`processing_active`.`category_type` AS `category_type`,`processing_active`.`size` AS `size`,`processing_active`.`grade` AS `grade`,`processing_active`.`process` AS `process`,`processing_active`.`process_queue` AS `process_queue`,`processing_active`.`process_queue_type` AS `process_queue_type`,`processing_active`.`process_log` AS `process_log`,`processing_active`.`qc_status` AS `qc_status`,`processing_active`.`location` AS `location`,'Finished' AS `status` from `processing`.`processing_active` union all select `bucking_active`.`date` AS `date`,`bucking_active`.`metrc_tag` AS `processing_batch_source_tag`,`bucking_active`.`metrc_tag` AS `metrc_tag`,`bucking_active`.`harvest_id` AS `harvest_id`,`bucking_active`.`test_id` AS `test`,`bucking_active`.`property_id` AS `property_id`,`bucking_active`.`harvest_date` AS `harvest_date`,`bucking_active`.`harvest_week` AS `harvest_week`,`bucking_active`.`harvest_year` AS `harvest_year`,`bucking_active`.`harvest_year_week` AS `harvest_year_week`,`bucking_active`.`harvest_type` AS `harvest_type`,`bucking_active`.`strain_code` AS `strain_code`,`bucking_active`.`strain_name` AS `strain_name`,'Pound' AS `uom`,`bucking_active`.`active_quantity` AS `quantity`,`bucking_active`.`bin_count` AS `bin_count`,`bucking_active`.`category` AS `category`,`bucking_active`.`category_type` AS `category_type`,NULL AS `size`,NULL AS `grade`,'Bucking' AS `process`,NULL AS `process_queue`,NULL AS `process_queue_type`,'Drying' AS `process_log`,NULL AS `qc_status`,'Cure Room' AS `location`,'In Progress' AS `status` from `processing`.`bucking_active` union all select `drying_active`.`date` AS `date`,`drying_active`.`metrc_tag` AS `processing_batch_source_tag`,`drying_active`.`metrc_tag` AS `metrc_tag`,`drying_active`.`harvest_id` AS `harvest_id`,`drying_active`.`test_id` AS `test`,`drying_active`.`property_id` AS `property_id`,`drying_active`.`harvest_date` AS `harvest_date`,`drying_active`.`harvest_week` AS `harvest_week`,`drying_active`.`harvest_year` AS `harvest_year`,`drying_active`.`harvest_year_week` AS `harvest_year_week`,`drying_active`.`harvest_type` AS `harvest_type`,`drying_active`.`strain_code` AS `strain_code`,`drying_active`.`strain_name` AS `strain_name`,'Pound' AS `uom`,`drying_active`.`active_quantity` AS `quantity`,`drying_active`.`bin_count` AS `bin_count`,`drying_active`.`category` AS `category`,`drying_active`.`category_type` AS `category_type`,NULL AS `size`,NULL AS `grade`,'Drying' AS `process`,NULL AS `process_queue`,NULL AS `process_queue_type`,NULL AS `process_log`,NULL AS `qc_status`,'Cure Room' AS `location`,'In Progress' AS `status` from `processing`.`drying_active` union all select `trimming_active`.`date` AS `date`,`trimming_active`.`metrc_tag` AS `processing_batch_source_tag`,`trimming_active`.`metrc_tag` AS `metrc_tag`,`trimming_active`.`harvest_id` AS `harvest_id`,`trimming_active`.`test_id` AS `test`,`trimming_active`.`property_id` AS `property_id`,`trimming_active`.`harvest_date` AS `harvest_date`,`trimming_active`.`harvest_week` AS `harvest_week`,`trimming_active`.`harvest_year` AS `harvest_year`,`trimming_active`.`harvest_year_week` AS `harvest_year_week`,`trimming_active`.`harvest_type` AS `harvest_type`,`trimming_active`.`strain_code` AS `strain_code`,`trimming_active`.`strain_name` AS `strain_name`,'Pound' AS `uom`,`trimming_active`.`active_quantity` AS `quantity`,`trimming_active`.`bin_count` AS `bin_count`,`trimming_active`.`category` AS `category`,`trimming_active`.`category_type` AS `category_type`,NULL AS `size`,NULL AS `grade`,'Trimming' AS `process`,NULL AS `process_queue`,NULL AS `process_queue_type`,'Drying,Bucking' AS `process_log`,NULL AS `qc_status`,'Processing Room' AS `location`,'In Progress' AS `status` from `processing`.`trimming_active` union all select `sorting_active`.`date` AS `date`,`sorting_active`.`metrc_tag` AS `processing_batch_source_tag`,`sorting_active`.`metrc_tag` AS `metrc_tag`,`sorting_active`.`harvest_id` AS `harvest_id`,`sorting_active`.`test_id` AS `test`,`sorting_active`.`property_id` AS `property_id`,`sorting_active`.`harvest_date` AS `harvest_date`,`sorting_active`.`harvest_week` AS `harvest_week`,`sorting_active`.`harvest_year` AS `harvest_year`,`sorting_active`.`harvest_year_week` AS `harvest_year_week`,`sorting_active`.`harvest_type` AS `harvest_type`,`sorting_active`.`strain_code` AS `strain_code`,`sorting_active`.`strain_name` AS `strain_name`,'Pound' AS `uom`,`sorting_active`.`active_quantity` AS `quantity`,`sorting_active`.`bin_count` AS `bin_count`,`sorting_active`.`category` AS `category`,`sorting_active`.`category_type` AS `category_type`,NULL AS `size`,NULL AS `grade`,'Sorting' AS `process`,NULL AS `process_queue`,NULL AS `process_queue_type`,'Drying,Bucking,Trimming' AS `process_log`,NULL AS `qc_status`,'QA/QC' AS `location`,'In Progress' AS `status` from `processing`.`sorting_active`;

-- View: processing_active_unsorted
CREATE ALGORITHM=UNDEFINED DEFINER=`nieko`@`%` SQL SECURITY DEFINER VIEW `processing_active_unsorted` AS select `processing_active`.`date` AS `date`,`processing_active`.`processing_batch_source_tag` AS `processing_batch_source_tag`,`processing_active`.`metrc_tag` AS `metrc_tag`,`processing_active`.`harvest_id` AS `harvest_id`,`processing_active`.`test` AS `test`,`processing_active`.`property_id` AS `property_id`,`processing_active`.`harvest_date` AS `harvest_date`,`processing_active`.`harvest_week` AS `harvest_week`,`processing_active`.`harvest_year` AS `harvest_year`,`processing_active`.`harvest_year_week` AS `harvest_year_week`,`processing_active`.`harvest_type` AS `harvest_type`,`processing_active`.`strain_code` AS `strain_code`,`processing_active`.`strain_name` AS `strain_name`,`processing_active`.`uom` AS `uom`,`processing_active`.`quantity` AS `quantity`,`processing_active`.`bin_count` AS `bin_count`,`processing_active`.`category` AS `category`,`processing_active`.`category_type` AS `category_type`,`processing_active`.`size` AS `size`,`processing_active`.`grade` AS `grade`,`processing_active`.`process` AS `process`,`processing_active`.`process_queue` AS `process_queue`,`processing_active`.`process_queue_type` AS `process_queue_type`,`processing_active`.`process_log` AS `process_log`,`processing_active`.`qc_status` AS `qc_status`,`processing_active`.`location` AS `location` from `processing_active` where (`processing_active`.`qc_status` = 'Unsorted');

-- View: processing_batch_last_8_WK
CREATE ALGORITHM=UNDEFINED DEFINER=`mark`@`%` SQL SECURITY DEFINER VIEW `processing_batch_last_8_WK` AS select `mv`.`flowering_id` AS `flowering_id`,`mv`.`harvesting_id` AS `harvesting_id`,`mv`.`metrc_tag` AS `metrc_tag`,`mv`.`process` AS `process`,`mv`.`batch_id` AS `batch_id`,`mv`.`date` AS `date`,`mv`.`batch_status` AS `batch_status`,`mv`.`flowering_id_name` AS `flowering_id_name`,`mv`.`harvest_id` AS `harvest_id`,`mv`.`test_id` AS `test_id`,`mv`.`flowering_crop` AS `flowering_crop`,`mv`.`harvest_name` AS `harvest_name`,`mv`.`property_id` AS `property_id`,`mv`.`harvest_date` AS `harvest_date`,`mv`.`harvest_week` AS `harvest_week`,`mv`.`harvest_year` AS `harvest_year`,`mv`.`harvest_year_week` AS `harvest_year_week`,`mv`.`harvest_type` AS `harvest_type`,`mv`.`flower_plant_count` AS `flower_plant_count`,`mv`.`harvest_plant_count` AS `harvest_plant_count`,`mv`.`strain_code` AS `strain_code`,`mv`.`strain_name` AS `strain_name`,`mv`.`input_category` AS `input_category`,`mv`.`input_category_type` AS `input_category_type`,`mv`.`input_product_size` AS `input_product_size`,`mv`.`input_product_grade` AS `input_product_grade`,`mv`.`input_quantity` AS `input_quantity`,`mv`.`output_category` AS `output_category`,`mv`.`output_category_type` AS `output_category_type`,`mv`.`output_size` AS `output_size`,`mv`.`output_grade` AS `output_grade`,`mv`.`output_quantity` AS `output_quantity` from `processing`.`batch_production_MV` `mv` where (`mv`.`harvest_date` >= (curdate() - interval 8 week));

-- View: product_combination
CREATE ALGORITHM=UNDEFINED DEFINER=`mark`@`%` SQL SECURITY DEFINER VIEW `product_combination` AS select `b`.`name` AS `brand_name`,`c`.`code` AS `category_code`,`c`.`name` AS `category_name`,`ct`.`name` AS `category_type_name`,`p`.`code` AS `package_code`,`p`.`name` AS `package_name`,`ps`.`code` AS `package_size_code`,`ps`.`name` AS `package_size_name`,`prod`.`status` AS `status`,`prod`.`id` AS `id`,`prod`.`brand` AS `brand`,`prod`.`category` AS `category`,`prod`.`category_type` AS `category_type`,`prod`.`package` AS `package`,`prod`.`package_size` AS `package_size` from (((((`product_sku`.`product_combination` `prod` left join `product_sku`.`category` `c` on((`prod`.`category` = `c`.`id`))) left join `pacstone`.`brand` `b` on((`prod`.`brand` = `b`.`id`))) left join `product_sku`.`category_type` `ct` on((`prod`.`category_type` = `ct`.`id`))) left join `product_sku`.`package` `p` on((`prod`.`package` = `p`.`id`))) left join `product_sku`.`package_size` `ps` on((`prod`.`package_size` = `ps`.`id`)));

-- View: production_inv_iap
CREATE ALGORITHM=UNDEFINED DEFINER=`nieko`@`%` SQL SECURITY DEFINER VIEW `production_inv_iap` AS select `s`.`Item` AS `Item`,`s`.`Item_Name` AS `Item_Name`,`s`.`Location` AS `Location`,`s`.`Total_Qty` AS `Total Qty`,concat((trim(round((`s`.`Total_Qty` / `p`.`qty_in_pile`),2)) + 0),' ',`p`.`label_plural`) AS `Qty Display` from ((select `ial`.`inventory_item` AS `Item`,max(`item`.`name`) AS `Item_Name`,sum(`ial`.`qty_base`) AS `Total_Qty`,(case when (`l`.`location_string` = 'VEHICLE') then 'VEHICLE' when (`l`.`location_string` = 'VENDOR') then 'VENDOR' else `l`.`location_level1` end) AS `Location` from ((`pacstone_inventory`.`inventory_at_location` `ial` join `pacstone`.`location` `l` on((`ial`.`location` = `l`.`id`))) join `pacstone_inventory`.`inventory_item` `item` on((`ial`.`inventory_item` = `item`.`id`))) where ((`ial`.`status` = 'Active') and (`ial`.`qty_base` <> 0) and (`item`.`status` in ('Active','Pending Deactivation'))) group by `ial`.`inventory_item`,(case when (`l`.`location_string` = 'VEHICLE') then 'VEHICLE' when (`l`.`location_string` = 'VENDOR') then 'VENDOR' else `l`.`location_level1` end)) `s` join `pacstone_inventory`.`inventory_pile` `p` on(((`p`.`inventory_item` = `s`.`Item`) and (`p`.`is_primary_default` = 1))));

-- View: production_inv_iap2
CREATE ALGORITHM=UNDEFINED DEFINER=`nieko`@`%` SQL SECURITY DEFINER VIEW `production_inv_iap2` AS select `s`.`Item` AS `Item`,`s`.`Item_Name` AS `Item_Name`,sum((case when (`s`.`Location` = 'VEHICLE') then `s`.`Total_Qty` else 0 end)) AS `VEHICLE`,sum((case when (`s`.`Location` = 'VENDOR') then `s`.`Total_Qty` else 0 end)) AS `VENDOR`,sum((case when (`s`.`Location` not in ('VEHICLE','VENDOR')) then `s`.`Total_Qty` else 0 end)) AS `Other_Locations`,concat((trim(round((sum(`s`.`Total_Qty`) / `p`.`qty_in_pile`),2)) + 0),' ',`p`.`label_plural`) AS `Qty Display` from ((select `ial`.`inventory_item` AS `Item`,max(`item`.`name`) AS `Item_Name`,sum(`ial`.`qty_base`) AS `Total_Qty`,(case when (`l`.`location_string` = 'VEHICLE') then 'VEHICLE' when (`l`.`location_string` = 'VENDOR') then 'VENDOR' else `l`.`location_level1` end) AS `Location` from ((`pacstone_inventory`.`inventory_at_location` `ial` join `pacstone`.`location` `l` on((`ial`.`location` = `l`.`id`))) join `pacstone_inventory`.`inventory_item` `item` on((`ial`.`inventory_item` = `item`.`id`))) where ((`ial`.`status` = 'Active') and (`ial`.`qty_base` <> 0) and (`item`.`status` in ('Active','Pending Deactivation'))) group by `ial`.`inventory_item`,(case when (`l`.`location_string` = 'VEHICLE') then 'VEHICLE' when (`l`.`location_string` = 'VENDOR') then 'VENDOR' else `l`.`location_level1` end)) `s` join `pacstone_inventory`.`inventory_pile` `p` on(((`p`.`inventory_item` = `s`.`Item`) and (`p`.`is_primary_default` = 1)))) group by `s`.`Item`,`s`.`Item_Name`,`p`.`label_plural`;

-- View: schedule_view
CREATE ALGORITHM=UNDEFINED DEFINER=`mark`@`%` SQL SECURITY DEFINER VIEW `schedule_view` AS select `ps`.`id` AS `schedule_id`,`psd`.`id` AS `detail_id`,`ps`.`transfer_type` AS `transfer_type`,`ps`.`year_num` AS `year_num`,`ps`.`week_num` AS `week_num`,concat(`ps`.`year_num`,right(concat('0',`ps`.`week_num`),2)) AS `year_week`,`c`.`name` AS `name`,`c`.`capacity` AS `capacity`,`c`.`location_string` AS `location_string`,`c`.`property_id` AS `property_id`,`c`.`cannabis_license_id` AS `cannabis_license_id`,`psd`.`strain_id` AS `strain_id`,`psd`.`date` AS `date`,`psd`.`plant_count` AS `plant_count`,`psd`.`priority` AS `priority`,`psd`.`action` AS `status`,`s`.`category` AS `strain_category` from (((`cultivation`.`plant_schedule` `ps` left join `cultivation`.`plant_schedule_detail` `psd` on((`ps`.`id` = `psd`.`plant_schedule_id`))) left join `pacstone`.`canopy` `c` on((`psd`.`canopy_id` = convert(`c`.`id` using utf8mb4)))) left join `pacstone`.`plant_strain` `s` on((`psd`.`strain_id` = convert(`s`.`id` using utf8mb4)))) where (`psd`.`action` <> 'Deleted');

-- View: sku_view
CREATE ALGORITHM=UNDEFINED DEFINER=`mark`@`%` SQL SECURITY DEFINER VIEW `sku_view` AS select `product_sku`.`sku`.`id` AS `id`,concat(`b`.`code`,'-',`c`.`code`,'-',`ps`.`code`,'-',`p`.`code`,'-',`s`.`id`,(case when ((`product_sku`.`sku`.`class` = 'Retail') or (`product_sku`.`sku`.`class` is null)) then '' when (`product_sku`.`sku`.`class` = 'Promo') then ' [xP]' when (`product_sku`.`sku`.`class` = 'Sample') then ' [xT]' end),coalesce(`pg`.`code`,'')) AS `sku`,`product_sku`.`sku`.`kss_id` AS `kss_id`,concat(`b`.`name`,' - ',`c`.`name`,' ',`p`.`name`,' [',`ps`.`code`,'] - ',(case when (`b`.`code` = 'PS') then `s`.`pacific_stone_label` when (`b`.`code` = 'TM') then `s`.`time_machine_label` end),(case when ((`product_sku`.`sku`.`class` = 'Retail') or (`product_sku`.`sku`.`class` is null)) then '' when (`product_sku`.`sku`.`class` = 'Promo') then ' [xP]' when (`product_sku`.`sku`.`class` = 'Sample') then ' [xT]' end),coalesce(`pg`.`name`,' ')) AS `name`,`product_sku`.`sku`.`status` AS `status`,`b`.`code` AS `brand_code`,`b`.`name` AS `brand_name`,`c`.`code` AS `category_code`,`c`.`name` AS `category_name`,`p`.`code` AS `package_code`,`p`.`name` AS `package_name`,`pc`.`id` AS `product_combination_code`,`pc`.`display_qty` AS `display_qty`,`ps`.`code` AS `package_size_code`,`ps`.`name` AS `package_size_name`,`product_sku`.`sku`.`packing_group` AS `packing_group_id`,`pg`.`label` AS `packing_group_label`,`pg`.`quantity` AS `quantity`,`s`.`id` AS `strain_code`,(case when (`b`.`code` = 'PS') then `s`.`pacific_stone_label` when (`b`.`code` = 'TM') then `s`.`time_machine_label` end) AS `strain_name`,`s`.`category` AS `strain_category`,`product_sku`.`sku`.`upc` AS `UPC`,`product_sku`.`sku`.`class` AS `class`,`product_sku`.`sku`.`source_sku` AS `source_sku` from (((((((`product_sku`.`sku` left join `pacstone`.`brand` `b` on((`product_sku`.`sku`.`brand` = `b`.`id`))) left join `product_sku`.`category` `c` on((`product_sku`.`sku`.`category` = `c`.`id`))) left join `product_sku`.`package` `p` on((`product_sku`.`sku`.`package` = `p`.`id`))) left join `product_sku`.`package_size` `ps` on((`product_sku`.`sku`.`package_size` = `ps`.`id`))) left join `pacstone`.`plant_strain` `s` on((`product_sku`.`sku`.`plant_strain` = `s`.`id`))) left join `product_sku`.`product_combination` `pc` on((`product_sku`.`sku`.`product_combination` = `pc`.`id`))) left join `product_sku`.`packing_group` `pg` on((`pg`.`id` = `product_sku`.`sku`.`packing_group`)));

-- View: trimming_machine_batch_view
CREATE ALGORITHM=UNDEFINED DEFINER=`mark`@`%` SQL SECURITY DEFINER VIEW `trimming_machine_batch_view` AS select `h`.`flowering_id` AS `Flowering ID`,`t`.`harvesting_id` AS `Harvesting ID`,`t`.`batch_id` AS `Processing ID`,`fl`.`flowering_id` AS `FID`,`h`.`harvest_id` AS `HID`,`h`.`date` AS `Harvest Date`,week(`h`.`date`,0) AS `Harvest Week`,year(`h`.`date`) AS `Harvest Year`,`h`.`test_id` AS `Test ID`,`h`.`harvest_type` AS `Harvest Type`,`fl`.`plant_count` AS `Crop Plant Count`,`h`.`plant_count_harvested` AS `Harvested Plant Count`,max(`strain`.`strain_code`) AS `Strain ID`,max(`strain`.`name`) AS `Plant Strain`,max(`t`.`source_metrc_tag`) AS `Processing Batch METRC`,max(`t`.`processing_batch_source_tag`) AS `Source METRC`,`t`.`id` AS `Trimming Batch ID`,`t`.`metrc_tag` AS `METRC Tag`,`t`.`process_type` AS `Trimming Type`,`t`.`category_id` AS `Product Category`,`t`.`category_type_id` AS `Product Category Type`,max(`t`.`quantity`) AS `Input Lbs`,max(`SUM`.`bin_count`) AS `Bin Count Recieved`,sum((case when (`td`.`category_id` = 'SK-CTG-0001') then `td`.`quantity` else 0 end)) AS `Trimmed Flower lbs`,sum((case when ((`td`.`product_grade_id` = 'A') and (`td`.`product_size_id` = 'R') and (`td`.`category_id` = 'SK-CTG-0001') and (`td`.`process_queue_id` is null)) then `td`.`quantity` else 0 end)) AS `Reg Flower - A lbs`,sum((case when ((`td`.`product_grade_id` = 'B') and (`td`.`category_id` = 'SK-CTG-0001') and (`td`.`product_size_id` = 'R') and (`td`.`process_queue_id` is null)) then `td`.`quantity` else 0 end)) AS `Reg Flower - B lbs`,sum((case when ((`td`.`product_grade_id` = 'C') and (`td`.`category_id` = 'SK-CTG-0001') and (`td`.`product_size_id` = 'R') and (`td`.`process_queue_id` is null)) then `td`.`quantity` else 0 end)) AS `Reg Flower - C lbs`,sum((case when ((`td`.`product_grade_id` = 'A') and (`td`.`product_size_id` = 'B') and (`td`.`category_id` = 'SK-CTG-0001') and (`td`.`process_queue_id` is null)) then `td`.`quantity` else 0 end)) AS `Big Flower - A lbs`,sum((case when ((`td`.`product_grade_id` = 'A') and (`td`.`product_size_id` = 'S') and (`td`.`category_id` = 'SK-CTG-0001') and (`td`.`process_queue_id` is null)) then `td`.`quantity` else 0 end)) AS `Small Flower - A lbs`,sum(if((`td`.`category_type_id` = 'SK-CTP-5844'),`td`.`quantity`,0)) AS `Shake lbs`,sum((case when (`td`.`category_type_id` = 'SK-CTP-56d3') then `td`.`quantity` else 0 end)) AS `Trim lbs`,sum((case when ((`td`.`category_type_id` = 'SK-CTP-daf5') and (`td`.`category_id` = 'SK-CTG-a60f')) then `td`.`quantity` else 0 end)) AS `Trimming Waste lbs`,if((sum(`td`.`quantity`) is null),0,(max(`t`.`quantity`) - max(`td`.`quantity`))) AS `Misc Trimming Waste lbs`,(sum((case when ((`td`.`category_type_id` = 'SK-CTP-daf5') and (`td`.`category_id` = 'SK-CTG-a60f')) then `td`.`quantity` else 0 end)) + if((sum(`td`.`quantity`) is null),0,(max(`t`.`quantity`) - sum(`td`.`quantity`)))) AS `Total Trimmed Waste lbs`,((sum(`t`.`quantity`) - sum(`td`.`quantity`)) / sum(`t`.`quantity`)) AS `Trimmed Waste %`,count(`t`.`id`) AS `Trimmed  Flower Bins`,min(`pl`.`process_start`) AS `Process Start`,min(`pl`.`process_stop`) AS `Process Stop`,timediff(min(`pl`.`process_stop`),min(`pl`.`process_start`)) AS `Trimming Duration`,`t`.`action` AS `Process Status`,max(`pl`.`id`) AS `Process Log`,max(`pl`.`process_name`) AS `Record Status`,`t`.`status` AS `Process Queue`,count(`td`.`process_queue_id`) AS `Process Queue Count`,max(`td`.`process_queue_type`) AS `Process Queue Type`,`t`.`note` AS `Notes`,`t`.`created_by` AS `Created By`,`t`.`created_on` AS `Created On`,`t`.`modified_by` AS `Modified By`,max(`t`.`modified_on`) AS `Modified On` from ((((((`processing`.`trimming_batch` `t` left join `processing`.`trimming_details` `td` on((`t`.`id` = `td`.`trimming_batch_id`))) left join `processing`.`trimming_detail_view` `SUM` on((`t`.`id` = `SUM`.`trimming_batch_id`))) left join `cultivation`.`harvesting` `h` on((`h`.`id` = `t`.`harvesting_id`))) left join `pacstone`.`plant_strain` `strain` on((`strain`.`id` = `t`.`strain_id`))) left join `cultivation`.`flowering` `fl` on((`fl`.`id` = `h`.`flowering_id`))) left join `processing`.`process_log` `pl` on((`pl`.`source_id` = `t`.`id`))) where (`t`.`process_type` = 'T-zero Machine') group by `t`.`id`;

-- View: tzero_settings_batch_log
CREATE ALGORITHM=UNDEFINED DEFINER=`nieko`@`%` SQL SECURITY DEFINER VIEW `tzero_settings_batch_log` AS select `tb`.`harvest_metric_id` AS `Harvest Metrc Tag`,`tb`.`bucked_weight_batch` AS `Bucked Batch Weight`,`tb`.`retrim_batch` AS `Retrim Batch`,`tb`.`machine_operator` AS `Machine Operator`,`tb`.`processing_metrc_id` AS `Processing METRC ID`,`tb`.`qty_bins` AS `Bin Quantity`,`tb`.`batch_weight` AS `Batch Weight`,`tb`.`tzero_retrim_weight` AS `T-Zero Retrim Weight`,`tb`.`lbs_per_hour` AS `lbs per hour`,`tb`.`harvest_id` AS `Harvest ID`,`tb`.`date` AS `Batch Start Date`,`tb`.`week_num` AS `Week Numbers`,`tb`.`time_start` AS `Start Time`,`tb`.`time_end` AS `Finish Time`,`tb`.`time_total` AS `Total Run Time`,`tb`.`tzero_run_number` AS `T-Zero Run Count` from `processing`.`tzero_batch` `tb` where ((`tb`.`date` >= (curdate() - interval 52 week)) and (`tb`.`tzero_retrim_weight` is null));

-- View: veg_active_inventory
CREATE ALGORITHM=UNDEFINED DEFINER=`mark`@`%` SQL SECURITY DEFINER VIEW `veg_active_inventory` AS select `b`.`name` AS `name`,`b`.`date` AS `date`,`b`.`property_id` AS `property_id`,`b`.`week` AS `week`,`b`.`year` AS `year`,`b`.`year_week` AS `year_week`,`b`.`strain_id` AS `strain_id`,`b`.`license_id` AS `license_id`,`b`.`test_id` AS `test_id`,`b`.`location_string` AS `location_string`,`v`.`plant_count` AS `plant_count`,`v`.`flat_plant_count` AS `plants_per_batch`,`v`.`flats` AS `total_batch_count`,`v`.`action` AS `action` from (`cultivation`.`veg` `v` left join `pacstone`.`batch` `b` on((`v`.`batch_id` = convert(`b`.`id` using utf8mb4)))) where (`v`.`status` = 'Active');

-- View: vendor
CREATE ALGORITHM=UNDEFINED DEFINER=`mark`@`%` SQL SECURITY DEFINER VIEW `vendor` AS select `vend`.`id` AS `id`,`vend`.`category` AS `category`,`vend`.`type` AS `type`,`vend`.`name` AS `name`,`vend`.`business_entity` AS `business_entity`,`vend`.`shipping_address` AS `shipping_address`,`vend`.`mailing_address` AS `mailing_address`,`vend`.`billing_address` AS `billing_address`,`vend`.`email` AS `email`,`vend`.`phone` AS `phone`,`vend`.`contact_name` AS `contact_name`,`vend`.`contact_email` AS `contact_email`,`vend`.`contact_phone` AS `contact_phone`,`vend`.`note` AS `note`,`vend`.`status` AS `status`,`vend`.`created_on` AS `created_on`,`vend`.`created_by` AS `created_by`,`vend`.`modify_on` AS `modify_on`,`vend`.`modify_by` AS `modify_by`,`vend`.`flag` AS `flag`,`vend`.`trigger` AS `trigger`,`vend`.`cannabis_license` AS `cannabis_license`,`vend`.`cannabis_license_type` AS `cannabis_license_type` from `crm`.`company_org` `vend`;

